var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AccessTokenExpiredException.html",[0,0.251,1,2.966]],["body/classes/AccessTokenExpiredException.html",[0,0.333,1,4.855,2,0.764,3,0.254,4,0.254,5,0.177,6,5.424,7,4.803,8,3.941,9,2.043,10,4.435,11,2.026,12,0.424,13,4.402,14,0.415,15,0.017,16,1.018,17,2.342,18,2.31,19,0.254,20,2.09,21,5.102,22,1.9,23,4.402,24,4.402,25,0.014,26,0.014]],["title/controllers/AppController.html",[27,2.18,28,2.5]],["body/controllers/AppController.html",[0,0.33,3,0.252,4,0.252,5,0.175,12,0.421,14,0.413,15,0.017,16,1.011,19,0.252,25,0.014,26,0.014,27,3.551,28,4.073,29,2.874,30,4.369,31,0.613,32,1.631,33,5.479,34,1.886,35,5.064,36,1.209,37,1.139,38,4.115,39,4.369,40,3.569,41,3.569,42,1.32,43,5.064]],["title/modules/AppModule.html",[44,2.18,45,2.707]],["body/modules/AppModule.html",[0,0.226,3,0.172,4,0.172,5,0.12,14,0.481,15,0.017,16,0.69,19,0.172,25,0.011,26,0.011,28,3.661,29,2.761,38,4.041,39,2.985,42,0.902,44,3.193,45,5.077,46,2.097,47,2.252,48,2.672,49,2.672,50,2.252,51,4.344,52,2.672,53,2.985,54,2.985,55,2.985,56,4.341,57,4.341,58,3.757,59,2.672,60,2.672,61,3.46,62,4.713,63,3.46,64,3.46,65,2.438,66,4.196,67,1.489,68,3.428,69,3.46,70,3.46,71,5.625,72,4.301,73,1.744,74,2.985,75,1.963,76,3.428,77,3.428,78,3.428,79,3.428,80,3.46,81,2.985,82,2.438,83,3.46,84,3.46,85,3.46,86,1.992,87,3.46,88,3.46,89,2.985,90,3.46,91,3.46,92,3.46,93,2.597,94,2.985,95,1.744,96,3.46,97,3.46,98,3.46,99,3.46,100,3.46,101,2.438,102,3.46]],["title/injectables/AppService.html",[38,2.327,103,1.305]],["body/injectables/AppService.html",[0,0.345,3,0.263,4,0.263,5,0.183,12,0.439,14,0.349,15,0.017,16,1.054,19,0.263,25,0.014,26,0.014,31,0.64,32,1.674,33,5.559,36,1.261,37,1.168,38,3.892,42,1.377,103,2.183,104,2.663,105,4.558,106,5.283,107,4.558,108,5.283]],["title/classes/ApplicatonExistException.html",[0,0.251,109,2.966]],["body/classes/ApplicatonExistException.html",[0,0.335,2,0.77,3,0.256,4,0.256,5,0.178,9,2.052,11,2.033,12,0.427,14,0.417,15,0.017,16,1.026,17,2.353,19,0.256,20,2.106,22,1.915,25,0.014,26,0.014,109,4.878,110,5.449,111,3.971,112,4.143,113,4.436,114,3.971,115,4.436,116,3.971,117,3.971,118,3.971]],["title/classes/Base.html",[0,0.251,119,2.5]],["body/classes/Base.html",[0,0.313,2,0.508,3,0.169,4,0.169,5,0.117,9,1.558,12,0.551,14,0.316,15,0.017,19,0.169,25,0.01,26,0.01,31,0.411,32,1.25,34,2.253,36,1.145,37,0.872,42,0.884,67,1.459,86,1.964,119,3.121,120,2.924,121,5.563,122,1.364,123,1.001,124,4.296,125,3.921,126,4.296,127,4.296,128,4.671,129,4.671,130,0.821,131,3.39,132,4.669,133,2.618,134,3.379,135,3.537,136,4.669,137,4.669,138,3.379,139,3.537,140,4.669,141,3.39,142,2.618,143,3.379,144,3.39,145,2.618,146,3.379,147,3.703,148,3.936,149,3.39,150,4.296,151,3.39,152,2.389,153,3.39,154,3.39,155,2.924,156,4.795,157,4.795,158,4.795,159,0.965,160,2.063,161,3.39,162,3.39,163,3.39]],["title/classes/ClassNameExtractor.html",[0,0.251,164,2.966]],["body/classes/ClassNameExtractor.html",[0,0.414,2,0.655,3,0.218,4,0.218,5,0.197,12,0.363,14,0.288,15,0.017,19,0.218,25,0.012,26,0.012,31,0.53,32,1.486,36,1.044,37,1.301,42,1.14,123,0.913,130,0.5,159,1.101,164,4.402,165,4.917,166,3.772,167,3.843,168,5.7,169,5.7,170,4.372,171,1.044,172,4.372,173,4.917,174,3.376,175,5.7,176,5.7,177,4.372,178,2.729,179,3.376,180,4.372,181,4.372,182,4.372,183,4.372,184,5.7,185,5.7,186,4.372,187,4.402,188,3.772,189,4.372,190,4.372,191,4.372,192,4.372]],["title/classes/CreateOrderDto.html",[0,0.251,193,2.18]],["body/classes/CreateOrderDto.html",[0,0.324,2,0.535,3,0.178,4,0.178,5,0.124,12,0.514,14,0.328,15,0.017,19,0.178,25,0.011,26,0.011,31,0.432,34,2.305,37,1.226,122,1.415,130,0.708,193,2.822,194,5.612,195,2.757,196,3.692,197,3.467,198,4.032,199,3.692,200,1.69,201,4.778,202,2.516,203,3.033,204,3.57,205,3.57,206,6.187,207,6.187,208,6.187,209,6.187,210,6.187,211,3.303,212,3.84,213,5.338,214,4.972,215,3.57,216,4.29,217,3.57,218,3.236,219,3.57,220,3.57,221,4.585,222,1.906,223,6.505,224,4.972,225,3.236,226,5.721,227,1.906,228,4.027,229,2.662,230,3.57]],["title/classes/CreateSchemaForSales1730363889037.html",[0,0.251,231,2.966]],["body/classes/CreateSchemaForSales1730363889037.html",[0,0.281,2,0.644,3,0.214,4,0.214,5,0.149,12,0.469,14,0.284,15,0.017,19,0.214,25,0.012,26,0.012,31,0.521,32,1.47,36,1.346,67,1.851,86,2.31,93,3.799,123,1.178,130,0.645,159,0.979,171,1.346,231,4.356,232,5.429,233,3.571,234,3.813,235,3.711,236,3.011,237,5.429,238,5.496,239,4.866,240,4.866,241,4.866,242,5.747,243,4.302,244,4.708,245,4.866,246,4.302,247,3.201,248,4.302,249,4.302]],["title/classes/CreateTableForOrders1730365329511.html",[0,0.251,250,2.966]],["body/classes/CreateTableForOrders1730365329511.html",[0,0.225,2,0.516,3,0.172,4,0.172,5,0.119,12,0.466,14,0.227,15,0.017,19,0.172,25,0.011,26,0.011,31,0.417,32,1.263,36,1.157,37,0.626,67,1.481,93,3.555,122,1.379,123,1.012,130,0.734,134,2.426,135,2.995,136,3.954,137,3.954,143,2.426,146,2.426,148,3.154,159,1.114,160,2.762,171,1.157,187,5.283,196,1.953,199,1.953,211,2.588,218,2.24,233,3.779,236,2.588,237,4.84,238,5.142,239,4.181,240,4.181,241,4.181,242,5.484,244,4.291,245,4.181,247,3.456,250,4.703,251,5.253,252,5.142,253,2.969,254,1.838,255,3.442,256,3.442,257,3.442,258,4.846,259,5.609,260,3.442,261,2.658,262,2.658,263,4.846,264,4.84,265,3.442,266,2.969,267,2.969,268,3.442,269,3.442,270,3.442,271,2.426,272,1.953,273,4.846]],["title/classes/CustomerExistException.html",[0,0.251,274,2.966]],["body/classes/CustomerExistException.html",[0,0.323,2,0.742,3,0.247,4,0.247,5,0.172,9,2.005,11,1.472,12,0.412,14,0.407,15,0.017,16,0.988,17,2.299,19,0.247,20,2.028,22,1.844,25,0.013,26,0.013,37,1.223,111,3.824,112,4.074,113,4.272,114,3.824,115,4.272,117,3.824,118,3.824,123,1.034,130,0.567,159,1.167,171,1.182,274,4.766,275,5.324,276,5.324,277,4.272]],["title/interfaces/DefaultPagination.html",[278,2.5,279,2.707]],["body/interfaces/DefaultPagination.html",[3,0.22,4,0.22,5,0.153,15,0.016,19,0.22,25,0.012,26,0.012,31,0.535,37,1.159,122,1.632,123,1.596,130,0.82,160,1.9,171,1.054,200,2.598,203,1.9,278,3.734,279,4.043,280,3.111,281,3.809,282,3.809,283,4.415,284,4.415,285,2.873,286,5.82,287,5.82,288,5.82,289,5.82,290,5.82,291,5.82]],["title/classes/DisabledUserException.html",[0,0.251,292,2.966]],["body/classes/DisabledUserException.html",[0,0.325,2,0.747,3,0.249,4,0.249,5,0.173,9,2.015,10,4.391,11,1.483,12,0.415,14,0.409,15,0.017,16,0.996,17,2.755,18,2.258,19,0.249,20,2.043,22,1.858,25,0.013,26,0.013,123,1.042,130,0.571,159,0.866,171,1.191,292,4.788,293,5.349,294,4.304,295,6.2,296,4.988,297,3.853,298,4.988,299,4.988]],["title/classes/EnvironmentVariablesValidator.html",[0,0.251,300,1.936]],["body/classes/EnvironmentVariablesValidator.html",[0,0.233,2,0.343,3,0.114,4,0.114,5,0.079,12,0.568,14,0.328,15,0.017,19,0.114,25,0.008,26,0.008,31,0.277,34,2.545,37,1.333,42,0.596,73,1.153,76,1.612,122,1.018,130,0.782,139,1.909,159,0.864,160,0.984,200,1.215,203,2.142,225,4.317,227,1.221,272,2.825,300,2.219,301,1.767,302,4.402,303,4.402,304,4.978,305,4.402,306,4.402,307,4.402,308,3.508,309,4.402,310,3.844,311,4.402,312,5.341,313,2.287,314,3.576,315,3.576,316,2.287,317,2.287,318,2.287,319,2.287,320,2.287,321,2.287,322,2.287,323,3.798,324,2.287,325,2.287,326,1.973,327,2.287,328,2.287,329,2.287,330,2.287,331,1.612,332,1.973,333,1.386,334,1.767,335,2.287,336,3.085,337,5.894,338,4.402,339,1.612,340,1.973,341,1.767,342,2.762,343,3.085,344,2.327,345,2.762,346,3.085,347,3.085,348,3.085,349,3.085,350,3.085,351,3.4,352,1.973,353,1.767,354,3.085,355,3.085,356,3.085,357,3.085,358,3.085,359,1.973,360,1.973,361,1.973,362,1.973,363,1.973,364,1.973,365,3.085,366,3.085,367,2.287,368,1.973,369,1.973,370,3.576,371,2.287,372,1.612,373,2.287,374,1.973,375,2.287,376,2.287,377,3.085,378,2.287,379,2.287,380,2.287,381,2.287,382,2.287,383,1.489,384,2.287,385,2.287,386,2.287,387,2.287,388,2.287,389,2.287,390,2.287,391,3.576,392,2.287,393,2.287,394,2.287,395,1.767,396,2.287,397,2.287,398,2.287,399,2.287,400,2.287,401,2.287,402,2.287,403,2.287,404,2.287,405,2.287]],["title/classes/EnvironmentVariablesValidator-1.html",[0,0.21,300,1.62,406,1.948]],["body/classes/EnvironmentVariablesValidator-1.html",[0,0.248,2,0.371,3,0.124,4,0.124,5,0.086,12,0.584,14,0.343,15,0.017,19,0.124,25,0.008,26,0.008,31,0.3,34,2.619,37,1.321,42,0.646,73,1.249,77,1.746,86,1.896,122,1.082,130,0.812,159,0.43,160,1.066,200,1.765,202,1.746,225,4.576,227,1.323,272,1.406,300,2.334,308,1.746,312,4.481,326,2.137,331,1.746,332,2.137,333,1.501,336,3.994,337,5.74,339,1.746,340,2.137,368,2.137,369,2.137,372,1.746,383,2.476,407,2.137,408,4.63,409,4.63,410,4.63,411,4.63,412,4.63,413,4.63,414,4.63,415,4.63,416,4.63,417,4.63,418,4.63,419,4.63,420,4.63,421,4.63,422,2.477,423,2.477,424,6.159,425,2.477,426,2.477,427,2.477,428,2.477,429,2.477,430,2.477,431,2.477,432,4.568,433,4.63,434,2.477,435,2.477,436,2.477,437,2.477,438,2.477,439,2.477,440,2.477,441,2.477,442,5.194,443,2.477,444,2.137,445,6.159,446,6.159,447,2.477,448,1.406,449,2.137,450,2.137,451,1.746,452,2.137,453,2.137,454,2.137,455,2.137,456,1.746,457,2.137,458,2.137,459,1.746,460,2.137,461,1.913,462,2.137,463,2.477,464,2.137,465,2.137,466,2.477,467,2.137,468,1.913,469,2.137,470,1.913,471,2.137,472,2.137,473,1.913,474,2.137]],["title/classes/EnvironmentVariablesValidator-2.html",[0,0.21,300,1.62,475,2.482]],["body/classes/EnvironmentVariablesValidator-2.html",[0,0.393,2,0.713,3,0.237,4,0.237,5,0.165,12,0.396,14,0.458,15,0.017,19,0.237,25,0.013,26,0.013,31,0.576,34,1.773,37,1.095,42,1.24,73,2.399,78,3.354,122,1.713,130,0.689,160,2.048,225,4.297,227,2.541,300,3.328,331,3.354,333,2.884,334,3.675,372,3.354,448,2.701,476,4.106,477,6.602,478,4.759,479,3.354,480,4.759,481,4.106,482,4.759]],["title/classes/EnvironmentVariablesValidator-3.html",[0,0.21,300,1.62,483,2.773]],["body/classes/EnvironmentVariablesValidator-3.html",[0,0.395,2,0.718,3,0.239,4,0.239,5,0.166,12,0.398,14,0.459,15,0.017,19,0.239,25,0.013,26,0.013,31,0.581,34,1.785,37,1.1,42,1.249,73,2.416,79,3.378,122,1.721,130,0.548,160,2.062,225,4.311,227,2.559,300,3.339,331,3.378,333,2.904,334,3.702,372,3.378,448,2.72,479,3.378,484,4.135,485,6.624,486,4.793,487,4.793,488,4.793]],["title/classes/FileFinder.html",[0,0.251,489,2.966]],["body/classes/FileFinder.html",[0,0.257,2,0.59,3,0.196,4,0.196,5,0.184,12,0.327,14,0.351,15,0.017,19,0.196,25,0.012,26,0.012,31,0.477,32,1.386,36,0.94,37,1.33,42,1.026,86,1.612,123,0.822,130,0.45,159,0.683,167,3.648,171,0.94,173,4.587,174,3.04,178,2.59,489,4.106,490,4.587,491,3.396,492,6.02,493,5.316,494,6.447,495,3.936,496,3.936,497,4.106,498,5.316,499,3.936,500,6.939,501,3.396,502,4.587,503,3.936,504,2.385,505,4.587,506,5.316,507,3.936,508,3.936,509,3.936,510,3.396,511,3.396,512,5.316,513,3.936,514,3.936,515,3.936,516,4.587,517,3.936,518,3.936,519,3.936,520,3.936,521,3.396,522,3.396,523,3.936,524,3.936]],["title/classes/ForeignKeyConflictException.html",[0,0.251,525,2.966]],["body/classes/ForeignKeyConflictException.html",[0,0.333,2,0.764,3,0.254,4,0.254,5,0.177,9,2.043,11,2.026,12,0.424,14,0.415,15,0.017,16,1.018,17,2.342,18,2.31,19,0.254,20,2.09,22,1.9,25,0.014,26,0.014,112,4.129,272,3.867,525,4.855,526,5.424,527,4.402,528,5.102,529,5.102,530,5.102,531,4.402]],["title/classes/GenerateCharacters.html",[0,0.251,532,2.966]],["body/classes/GenerateCharacters.html",[0,0.325,2,0.747,3,0.249,4,0.249,5,0.173,12,0.415,15,0.017,19,0.249,25,0.013,26,0.013,31,0.604,32,1.616,36,1.191,37,1.128,42,1.3,123,1.042,130,0.571,159,0.866,167,4.088,171,1.191,200,2.293,475,3.853,532,4.788,533,5.349,534,4.304,535,5.82,536,6.2,537,4.988,538,6.2,539,4.988,540,4.988,541,4.988,542,4.988]],["title/classes/HashHelper.html",[0,0.251,543,2.966]],["body/classes/HashHelper.html",[0,0.226,2,0.52,3,0.173,4,0.173,5,0.12,12,0.468,14,0.229,15,0.017,19,0.173,25,0.011,26,0.011,31,0.42,32,1.27,36,1.67,37,1.395,42,1.27,93,3.563,122,1.387,123,1.018,130,0.645,159,0.846,160,1.492,167,4.31,171,1.163,200,1.179,238,3.763,244,4.932,247,2.766,254,1.852,383,3.172,432,3.763,543,3.763,544,2.992,545,3.414,546,5.633,547,4.873,548,4.873,549,3.469,550,4.873,551,7.286,552,3.469,553,4.873,554,6.11,555,6.11,556,4.873,557,4.873,558,3.469,559,4.873,560,4.873,561,3.469,562,2.992,563,3.414,564,3.469,565,3.469,566,3.469]],["title/controllers/HealthController.html",[27,2.18,567,2.5]],["body/controllers/HealthController.html",[0,0.255,3,0.195,4,0.195,5,0.135,11,1.16,12,0.324,14,0.443,15,0.017,16,0.779,19,0.195,25,0.011,26,0.011,27,2.214,29,2.214,31,0.473,32,1.378,34,1.453,36,0.931,42,1.017,72,4.224,73,1.967,86,1.598,101,2.75,222,2.083,479,2.75,497,3.013,545,3.893,567,3.44,568,3.366,569,3.902,570,4.56,571,5.542,572,3.902,573,3.902,574,5.993,575,5.285,576,5.993,577,5.993,578,3.013,579,2.54,580,3.366,581,3.902,582,3.902,583,3.902,584,3.902,585,3.902,586,5.285,587,6.424,588,3.902,589,3.902,590,3.902,591,5.285,592,3.902,593,3.902,594,3.902,595,3.366,596,3.902,597,3.902,598,3.902,599,3.366,600,3.366,601,3.902,602,3.902,603,3.902,604,3.902,605,3.902]],["title/modules/HealthModule.html",[44,2.18,56,2.5]],["body/modules/HealthModule.html",[0,0.347,3,0.265,4,0.265,5,0.184,14,0.458,15,0.017,16,1.063,19,0.265,25,0.014,26,0.014,29,3.662,44,3.662,46,3.227,56,4.2,62,4.112,567,4.519,578,4.112,606,5.325,607,5.325,608,6.453]],["title/classes/HttpExceptionFilter.html",[0,0.251,609,2.966]],["body/classes/HttpExceptionFilter.html",[0,0.258,2,0.593,3,0.197,4,0.197,5,0.137,12,0.329,14,0.426,15,0.017,16,0.79,17,2.726,18,1.792,19,0.197,22,2.249,25,0.012,26,0.012,31,0.48,32,1.391,36,0.945,37,1.099,95,1.996,123,0.827,130,0.611,135,2.114,152,2.79,159,0.687,171,0.945,178,2.598,199,3.029,236,2.85,451,4.256,609,4.122,610,4.122,611,3.416,612,6.038,613,4.663,614,5.337,615,5.575,616,6.462,617,3.959,618,3.959,619,3.058,620,3.416,621,2.399,622,3.235,623,3.416,624,3.959,625,3.416,626,3.959,627,3.959,628,3.959,629,3.959,630,3.959,631,3.959,632,3.959,633,3.959,634,3.416]],["title/injectables/HttpResponseInterceptor.html",[103,1.305,635,2.966]],["body/injectables/HttpResponseInterceptor.html",[0,0.261,3,0.2,4,0.2,5,0.139,12,0.333,14,0.428,15,0.017,16,0.8,19,0.2,25,0.012,26,0.012,31,0.485,32,1.402,36,1.284,37,0.979,42,1.402,95,2.019,103,1.829,104,2.019,123,0.837,130,0.458,135,3.724,159,0.695,171,0.956,178,1.724,236,2.139,521,4.642,563,3.26,622,2.428,634,3.457,635,4.155,636,3.457,637,5.844,638,3.457,639,5.232,640,5.602,641,5.844,642,4.006,643,3.792,644,5.241,645,5.241,646,4.642,647,2.824,648,4.006,649,4.006,650,3.457,651,3.094,652,4.006,653,3.457,654,4.006,655,3.094]],["title/classes/IntegerPrimaryIdEntity.html",[0,0.251,656,2.966]],["body/classes/IntegerPrimaryIdEntity.html",[0,0.238,2,0.546,3,0.182,4,0.182,5,0.126,9,1.64,12,0.578,14,0.333,15,0.017,19,0.182,25,0.011,26,0.011,31,0.442,32,1.316,34,2.442,36,1.205,37,0.664,67,1.569,86,1.494,119,4.682,122,1.436,123,1.054,124,3.898,125,3.557,126,3.898,127,3.898,128,4.469,129,4.469,130,0.833,132,4.078,133,2.817,134,2.571,135,3.09,136,4.078,137,4.078,138,2.571,139,3.09,140,4.078,142,2.817,143,2.571,145,2.817,146,2.571,147,2.817,148,2.374,150,2.817,152,2.571,159,0.633,200,1.715,211,3.5,271,3.557,656,3.898,657,4.354,658,2.817,659,3.647,660,5.047,661,3.147,662,5.85,663,3.147,664,3.147,665,3.147,666,3.147,667,3.147,668,3.147,669,4.354,670,3.147]],["title/classes/InvalidCredentialsException.html",[0,0.251,671,2.966]],["body/classes/InvalidCredentialsException.html",[0,0.337,2,0.773,3,0.257,4,0.257,5,0.179,9,2.057,10,4.458,11,2.037,12,0.429,14,0.418,15,0.017,16,1.03,17,2.358,18,2.336,19,0.257,20,2.114,22,1.922,25,0.014,26,0.014,671,4.89,672,4.462,673,4.453,674,5.161,675,5.161,676,3.986,677,5.161]],["title/classes/InvalidCurrentPasswordException.html",[0,0.251,678,2.966]],["body/classes/InvalidCurrentPasswordException.html",[0,0.333,2,0.764,3,0.254,4,0.254,5,0.177,9,2.043,11,2.026,12,0.424,14,0.415,15,0.017,16,1.018,17,2.342,18,2.31,19,0.254,20,2.09,22,1.9,25,0.014,26,0.014,456,3.596,504,4.129,672,4.431,676,3.941,678,4.855,679,4.402,680,5.879,681,5.102,682,5.102]],["title/classes/InvalidCurrentPinException.html",[0,0.251,683,2.966]],["body/classes/InvalidCurrentPinException.html",[0,0.338,2,0.776,3,0.258,4,0.258,5,0.179,9,2.062,11,2.04,12,0.431,14,0.419,15,0.017,16,1.034,17,2.364,19,0.258,20,2.122,22,1.93,25,0.014,26,0.014,114,4.001,504,3.14,535,4.47,676,4.001,680,5.919,683,4.901,684,4.47,685,5.181,686,5.181]],["title/classes/InvalidTokenException.html",[0,0.251,687,2.966]],["body/classes/InvalidTokenException.html",[0,0.341,2,0.782,3,0.26,4,0.26,5,0.181,9,2.072,10,4.481,11,2.047,12,0.434,14,0.421,15,0.017,16,1.042,17,2.375,18,2.364,19,0.26,20,2.139,25,0.014,26,0.014,672,4.494,687,4.925,688,4.504,689,5.221,690,5.221]],["title/injectables/IsExist.html",[103,1.305,691,2.966]],["body/injectables/IsExist.html",[0,0.386,3,0.19,4,0.19,5,0.132,11,1.547,12,0.433,14,0.439,15,0.017,16,0.761,19,0.19,25,0.011,26,0.011,31,0.462,32,1.356,36,0.91,37,1.078,42,0.994,65,4.844,67,1.641,75,2.164,86,1.562,93,3.397,103,1.768,104,1.922,123,1.087,130,0.595,159,1.028,171,1.242,178,2.549,227,2.036,236,2.036,247,2.164,254,2.778,545,2.311,691,4.574,692,4.174,693,2.688,694,4.489,695,3.29,696,3.813,697,4.489,698,6.069,699,3.29,700,3.667,701,4.489,702,4.489,703,4.489,704,3.29,705,2.945,706,3.29,707,6.363,708,3.813,709,2.311,710,3.813,711,3.813,712,3.29,713,3.29,714,3.813,715,3.813]],["title/injectables/IsNotExist.html",[103,1.305,716,2.966]],["body/injectables/IsNotExist.html",[0,0.38,3,0.184,4,0.184,5,0.128,11,1.515,12,0.424,14,0.435,15,0.017,16,0.738,19,0.184,25,0.011,26,0.011,31,0.448,32,1.328,36,0.883,37,1.199,42,1.328,65,4.799,67,1.591,75,2.099,86,2.087,93,3.354,103,1.732,104,1.864,123,1.064,130,0.667,159,1.012,171,1.216,178,2.508,200,1.257,211,1.974,227,1.974,236,1.974,247,2.099,254,2.72,545,2.241,692,4.108,693,2.606,694,4.395,695,3.19,697,4.395,698,6.02,699,3.19,700,2.606,701,4.395,702,4.395,703,4.395,704,3.19,705,2.856,706,3.19,709,3.087,713,3.19,716,4.502,717,3.698,718,4.502,719,2.407,720,3.19,721,3.698,722,3.698,723,3.698,724,3.698]],["title/injectables/LoggingInterceptor.html",[103,1.305,725,2.966]],["body/injectables/LoggingInterceptor.html",[0,0.265,3,0.202,4,0.202,5,0.14,11,1.817,12,0.508,14,0.403,15,0.017,16,0.809,19,0.202,25,0.012,26,0.012,31,0.491,32,1.414,36,0.968,41,4.307,42,1.057,95,2.734,103,1.843,104,2.044,122,1.543,123,0.847,130,0.464,148,2.639,159,0.704,160,1.745,171,0.968,178,2.334,236,2.165,254,2.165,448,3.468,545,3.703,637,4.679,638,4.679,639,5.04,640,5.273,641,5.629,644,3.498,645,5.273,646,4.679,650,3.498,651,3.132,653,3.498,725,4.189,726,3.498,727,5.629,728,5.424,729,4.055,730,5.424,731,4.055,732,4.055,733,4.055,734,5.424,735,4.055,736,4.055,737,4.055]],["title/entities/Order.html",[229,1.653,709,2.327]],["body/entities/Order.html",[0,0.247,3,0.189,4,0.189,5,0.131,9,1.232,12,0.528,14,0.342,15,0.017,19,0.189,25,0.011,26,0.011,31,0.459,34,2.364,37,1.248,67,1.631,122,1.475,130,0.854,139,3.389,140,4.474,159,1.153,160,2.23,196,3.772,197,3.579,198,4.162,199,3.772,200,1.762,218,3.844,229,2.23,234,2.298,261,2.928,262,2.928,264,5.476,266,4.472,267,4.472,341,4.903,709,3.141,719,2.468,738,2.298,739,3.271,740,6.348,741,4.472,742,3.792,743,3.792,744,3.792,745,3.792,746,6.646,747,3.653,748,3.792,749,3.792,750,2.672]],["title/classes/OrderMapper.html",[0,0.251,751,2.707]],["body/classes/OrderMapper.html",[0,0.299,2,0.686,3,0.228,4,0.228,5,0.159,12,0.381,14,0.388,15,0.017,19,0.228,25,0.013,26,0.013,31,0.555,32,1.531,36,1.093,42,1.194,95,2.309,123,0.957,130,0.524,159,0.795,167,3.93,171,1.093,178,1.971,229,2.944,709,2.776,751,4.14,752,3.952,753,5.874,754,5.874,755,4.58,756,4.453,757,3.952,758,3.537,759,3.537,760,4.537,761,4.58,762,4.58,763,4.58,764,4.58,765,4.58,766,4.58,767,4.58,768,4.58,769,4.58,770,4.58,771,4.58,772,4.58]],["title/classes/OrderResponseDto.html",[0,0.251,756,2.5]],["body/classes/OrderResponseDto.html",[0,0.271,2,0.623,3,0.207,4,0.207,5,0.144,12,0.586,14,0.274,15,0.017,19,0.207,25,0.012,26,0.012,31,0.503,34,2.625,37,1.329,122,1.569,125,4.36,130,0.806,132,3.885,196,3.511,197,3.749,198,4.36,199,3.511,200,1.874,211,3.303,221,5.37,222,2.219,756,3.588,773,6.204,774,3.209,775,4.155,776,4.155,777,4.155,778,3.585,779,3.585,780,3.585]],["title/controllers/OrdersController.html",[27,2.18,781,2.707]],["body/controllers/OrdersController.html",[0,0.22,3,0.168,4,0.168,5,0.117,12,0.461,14,0.436,15,0.017,16,0.671,19,0.168,25,0.01,26,0.01,27,2.707,29,1.909,31,0.408,32,1.243,34,2.064,36,1.323,37,1.202,40,2.371,41,2.371,42,1.444,117,3.683,118,2.598,123,1.157,130,0.634,159,0.961,171,1.323,193,3.751,197,3.653,203,2.594,222,1.796,229,2.738,233,2.707,310,2.598,406,2.039,497,2.598,563,2.039,580,2.902,750,2.371,756,2.19,757,2.902,758,2.598,781,3.361,782,2.902,783,4.114,784,4.114,785,4.114,786,2.902,787,5.54,788,4.114,789,3.361,790,3.364,791,4.279,792,3.364,793,2.902,794,3.364,795,3.364,796,3.364,797,2.902,798,3.364,799,3.364,800,3.683,801,3.364,802,3.364,803,3.357,804,2.902,805,3.364,806,2.371,807,4.769,808,4.78,809,6.027,810,2.598,811,3.364,812,3.364,813,3.364,814,3.364,815,3.364,816,2.371,817,3.364,818,3.364,819,3.364,820,3.364,821,3.364,822,3.364]],["title/modules/OrdersModule.html",[44,2.18,57,2.5]],["body/modules/OrdersModule.html",[0,0.275,3,0.21,4,0.21,5,0.146,14,0.483,15,0.017,16,0.842,19,0.21,25,0.012,26,0.012,29,3.161,44,3.538,46,2.558,47,2.747,48,3.26,49,3.26,50,2.747,51,4.815,52,3.26,57,4.769,58,4.302,59,3.26,60,3.26,62,3.26,74,3.641,75,2.395,81,3.641,82,2.975,159,0.732,229,2.397,234,2.558,759,3.26,781,4.394,803,4.29,804,3.641,823,3.641,824,3.641,825,4.29,826,4.22,827,4.22,828,4.302,829,3.641,830,3.641,831,4.22,832,4.22]],["title/injectables/OrdersService.html",[103,1.305,803,2.327]],["body/injectables/OrdersService.html",[0,0.129,3,0.098,4,0.098,5,0.068,11,0.945,12,0.417,14,0.411,15,0.017,16,0.393,19,0.098,25,0.007,26,0.007,31,0.239,32,0.828,36,1.281,37,0.977,41,2.814,42,1.041,67,0.848,75,1.119,82,1.39,93,3.237,95,2.845,103,1.08,104,0.994,122,0.904,123,0.956,130,0.524,159,0.795,160,0.848,171,1.093,178,2.31,193,3.046,196,1.804,197,3.559,200,1.08,203,1.97,211,2.445,212,4.536,213,2.742,229,2.998,242,1.523,247,3.612,254,1.053,383,1.283,501,3.95,545,3.253,563,3.253,613,3.083,621,3.253,700,2.814,705,4.145,727,3.95,738,1.926,750,2.814,751,1.39,759,1.523,760,2.455,783,2.742,784,2.742,785,2.742,786,2.742,789,3.783,791,4.36,793,2.742,797,2.742,803,2.775,806,1.39,816,3.783,825,3.559,829,1.701,830,1.701,833,1.701,834,1.972,835,4.579,836,4.631,837,3.178,838,2.742,839,3.992,840,3.444,841,3.178,842,2.24,843,3.178,844,2.455,845,3.178,846,3.178,847,1.972,848,2.742,849,4.145,850,4.631,851,1.972,852,2.742,853,2.455,854,2.455,855,1.972,856,2.742,857,3.95,858,3.178,859,1.972,860,1.972,861,1.972,862,1.523,863,1.701,864,1.972,865,1.972,866,1.972,867,1.972,868,1.972,869,1.972,870,3.444,871,1.972,872,1.972,873,1.972,874,1.972,875,1.972,876,1.972,877,1.972,878,1.972,879,3.992,880,3.178,881,3.992,882,3.992,883,1.972,884,1.972,885,2.742,886,1.972,887,2.742,888,1.972,889,1.972,890,1.972,891,1.972,892,1.972,893,1.972,894,3.178,895,1.972,896,1.972,897,1.972,898,1.972,899,3.178]],["title/classes/Pagination.html",[0,0.251,285,2.5]],["body/classes/Pagination.html",[0,0.259,2,0.595,3,0.198,4,0.198,5,0.138,12,0.33,14,0.353,15,0.017,19,0.198,25,0.012,26,0.012,31,0.481,32,1.394,36,1.277,42,1.394,123,0.829,130,0.612,159,0.689,167,3.665,171,1.277,178,2.602,200,2.199,280,2.799,285,4.396,406,3.241,563,3.665,622,3.241,758,3.067,900,3.426,901,3.971,902,4.528,903,5.826,904,6.47,905,4.396,906,3.971,907,4.56,908,4.67,909,4.67,910,3.067,911,3.426,912,3.971,913,4.262,914,4.614,915,3.426]],["title/interfaces/PaginationRequest.html",[278,2.5,902,2.5]],["body/interfaces/PaginationRequest.html",[3,0.184,4,0.184,5,0.128,15,0.017,19,0.184,25,0.013,26,0.011,31,0.798,37,0.673,122,1.45,123,1.422,130,0.813,196,2.891,200,2.482,203,1.591,229,2.835,278,3.316,280,2.606,285,4.288,504,3.087,516,4.395,595,4.395,902,3.316,905,2.407,908,4.851,909,5.572,910,5.389,916,3.19,917,3.19,918,5.029,919,3.698,920,2.856,921,5.684,922,4.395,923,5.029,924,5.095,925,5.095,926,5.095,927,5.095,928,5.829,929,5.095,930,5.095,931,5.095,932,3.698,933,2.856,934,3.698,935,3.698,936,3.19,937,3.19]],["title/classes/PaginationResponseDto.html",[0,0.251,907,2.707]],["body/classes/PaginationResponseDto.html",[0,0.243,2,0.557,3,0.185,4,0.185,5,0.129,12,0.581,14,0.245,15,0.017,19,0.185,25,0.011,26,0.011,31,0.45,34,2.603,122,1.455,130,0.8,139,2.73,179,4.515,200,2.484,201,5.268,221,5.091,222,1.985,228,4.44,406,4.314,432,3.95,774,2.872,778,3.208,779,3.208,780,3.208,903,5.043,905,3.329,907,3.604,911,5.043,913,3.604,914,5.043,915,5.043,938,6.141,939,5.845,940,5.845,941,3.718,942,3.718,943,3.718,944,3.718]],["title/classes/PermissionExistsException.html",[0,0.251,945,2.966]],["body/classes/PermissionExistsException.html",[0,0.323,2,0.742,3,0.247,4,0.247,5,0.172,9,2.005,11,1.472,12,0.412,14,0.407,15,0.017,16,0.988,17,2.299,18,2.242,19,0.247,20,2.028,22,1.844,25,0.013,26,0.013,37,1.223,112,4.074,123,1.034,130,0.567,159,0.859,171,1.182,945,4.766,946,5.324,947,3.49,948,6.171,949,3.824,950,6.723,951,4.952,952,3.824,953,4.272]],["title/classes/RefreshTokenExpiredException.html",[0,0.251,954,2.966]],["body/classes/RefreshTokenExpiredException.html",[0,0.333,2,0.764,3,0.254,4,0.254,5,0.177,7,4.803,8,3.941,9,2.043,10,4.435,11,2.026,12,0.424,13,4.402,14,0.415,15,0.017,16,1.018,17,2.342,18,2.31,19,0.254,20,2.09,22,1.9,24,4.402,25,0.014,26,0.014,954,4.855,955,5.424,956,5.102,957,5.102]],["title/classes/ResponseDto.html",[0,0.251,647,2.707]],["body/classes/ResponseDto.html",[0,0.317,2,0.728,3,0.242,4,0.242,5,0.168,12,0.507,14,0.321,15,0.017,19,0.242,25,0.013,26,0.013,31,0.589,34,2.273,122,1.736,130,0.698,135,3.56,200,2.074,201,3.755,203,2.092,221,4.928,222,2.596,228,3.165,622,3.697,647,4.3,655,5.15,760,4.712,905,3.971,958,4.195,959,4.862,960,6.101,961,4.862]],["title/classes/RoleExistsException.html",[0,0.251,962,2.966]],["body/classes/RoleExistsException.html",[0,0.323,2,0.742,3,0.247,4,0.247,5,0.172,9,2.005,11,1.472,12,0.412,14,0.407,15,0.017,16,0.988,17,2.299,18,2.242,19,0.247,20,2.028,22,1.844,25,0.013,26,0.013,37,1.223,112,4.074,123,1.034,130,0.567,159,1.221,171,1.182,276,5.324,947,3.49,949,3.824,952,3.824,962,4.766,963,5.324,964,4.952,965,4.272]],["title/injectables/TaxService.html",[103,1.305,825,2.327]],["body/injectables/TaxService.html",[0,0.225,3,0.172,4,0.172,5,0.12,11,1.026,12,0.404,14,0.424,15,0.017,16,0.689,19,0.172,25,0.011,26,0.011,31,0.418,32,1.266,36,1.159,40,2.432,72,4.825,73,1.739,86,1.413,93,2.999,101,2.432,103,1.65,104,1.739,123,1.014,130,0.556,159,0.843,171,1.159,178,1.485,193,3.885,203,2.089,229,2.089,244,3.422,247,1.958,448,2.756,479,2.432,563,2.942,579,2.246,613,2.665,621,2.091,622,2.091,643,3.422,800,3.75,806,2.432,816,3.422,825,3.694,838,4.189,842,3.422,844,5.287,849,3.75,850,4.189,853,5.287,854,3.75,863,2.977,870,2.977,966,2.977,967,4.855,968,2.977,969,3.451,970,4.855,971,4.855,972,4.855,973,4.855,974,3.451,975,4.189,976,4.855,977,4.855,978,4.855,979,4.855,980,4.189,981,3.451,982,3.451,983,3.451,984,3.451,985,2.977,986,3.451]],["title/injectables/TypeOrmConfigService.html",[68,2.707,103,1.305]],["body/injectables/TypeOrmConfigService.html",[0,0.204,3,0.156,4,0.156,5,0.108,11,0.928,12,0.376,14,0.384,15,0.017,16,0.623,19,0.156,25,0.01,26,0.01,31,0.378,32,1.178,36,0.745,40,2.2,42,0.814,68,3.186,72,4.542,73,1.574,75,1.772,86,3.045,101,5.207,103,1.536,104,1.574,123,0.652,130,0.517,139,1.667,159,0.542,171,0.745,236,1.667,272,1.772,308,2.2,339,3.186,344,2.032,448,1.772,451,2.2,456,2.2,459,2.2,461,2.411,468,2.411,470,2.411,473,2.411,579,2.032,719,3.791,738,1.892,933,2.411,968,2.693,987,4.584,988,2.693,989,5.825,990,3.122,991,3.122,992,5.825,993,4.52,994,3.122,995,3.122,996,3.122,997,3.122,998,3.122,999,3.122,1000,3.122,1001,2.411,1002,3.122,1003,3.122,1004,2.693,1005,2.693,1006,2.693,1007,3.122,1008,3.9,1009,2.693,1010,2.411,1011,2.693,1012,2.693,1013,2.693,1014,2.693,1015,2.693,1016,2.411,1017,2.693,1018,2.693,1019,2.693,1020,2.411,1021,2.693,1022,3.122,1023,2.693,1024,2.693,1025,3.122,1026,2.693,1027,3.122,1028,3.122,1029,3.122,1030,3.122,1031,3.122,1032,3.122]],["title/classes/UpdateOrderDto.html",[0,0.251,1033,2.966]],["body/classes/UpdateOrderDto.html",[0,0.357,2,0.821,3,0.273,4,0.273,5,0.19,9,2.133,14,0.433,15,0.017,19,0.273,25,0.014,26,0.014,193,3.108,195,4.23,222,2.924,233,3.108,806,3.86,1033,5.069,1034,4.725,1035,6.563,1036,5.477]],["title/classes/UserExistsException.html",[0,0.251,1037,2.966]],["body/classes/UserExistsException.html",[0,0.323,2,0.742,3,0.247,4,0.247,5,0.172,9,2.005,11,1.472,12,0.412,14,0.407,15,0.017,16,0.988,17,2.299,18,2.242,19,0.247,20,2.028,22,1.844,25,0.013,26,0.013,37,1.223,112,4.074,123,1.034,130,0.567,159,0.859,171,1.182,297,3.824,459,4.349,947,3.49,949,3.824,952,3.824,1037,4.766,1038,5.324,1039,6.171,1040,4.952,1041,4.952]],["title/classes/UuidPrimaryIdEntity.html",[0,0.251,747,2.707]],["body/classes/UuidPrimaryIdEntity.html",[0,0.243,2,0.559,3,0.186,4,0.186,5,0.129,9,1.665,12,0.581,14,0.338,15,0.017,19,0.186,25,0.011,26,0.011,31,0.452,32,1.336,34,2.461,36,1.223,37,1.065,67,1.604,86,1.527,119,4.704,122,1.458,123,1.07,124,3.957,125,3.611,126,3.957,127,3.957,128,4.521,129,4.521,130,0.815,132,4.126,133,2.88,134,2.628,135,3.126,136,4.126,137,4.126,138,2.628,139,3.126,140,4.126,142,2.88,143,2.628,145,2.88,146,2.628,147,2.88,148,2.427,150,2.88,152,2.628,211,3.126,271,3.611,658,2.88,661,3.217,662,5.89,663,3.217,664,3.217,665,3.217,666,3.217,667,3.217,668,3.217,669,3.217,670,3.217,747,3.611,1042,4.42,1043,5.124]],["title/coverage.html",[1044,4.038]],["body/coverage.html",[0,0.479,1,1.265,5,0.057,6,1.413,7,1.924,8,2.108,15,0.017,25,0.006,26,0.006,27,1.992,28,1.066,30,1.413,38,0.992,50,1.066,68,1.154,76,1.154,77,1.154,78,1.154,79,1.154,95,0.825,103,1.855,105,1.413,109,1.265,110,1.413,111,2.108,119,1.066,120,1.413,130,0.74,159,0.284,164,1.265,165,1.413,166,1.413,174,4.378,193,0.929,194,1.413,195,2.108,202,1.924,203,0.705,229,1.174,231,1.265,232,1.413,233,1.549,234,0.992,235,1.413,250,1.265,251,1.413,252,2.108,253,1.413,271,1.924,272,0.929,274,1.265,275,1.413,278,1.776,279,1.154,281,1.413,282,1.413,285,1.066,292,1.265,293,1.413,294,1.413,300,2.063,301,1.265,333,0.992,407,1.413,476,1.413,484,1.413,489,1.265,490,1.413,491,1.413,504,0.992,525,1.265,526,1.413,527,1.413,532,1.265,533,1.413,534,1.413,543,1.265,544,1.413,567,1.066,568,1.413,579,1.066,599,3.027,609,1.265,610,2.108,611,1.413,619,1.265,621,0.992,635,1.265,636,1.413,647,1.154,656,1.265,657,1.413,658,2.108,671,1.265,672,2.473,673,1.413,678,1.265,679,1.413,683,1.265,684,1.413,687,1.265,688,1.413,691,1.265,692,2.473,693,2.473,709,0.992,716,1.265,718,1.265,725,1.265,726,1.413,739,1.413,747,1.154,751,1.154,752,1.413,756,1.066,773,1.413,774,2.108,781,1.154,782,1.413,803,0.992,810,1.265,825,0.992,828,1.265,833,1.413,862,1.265,900,1.413,902,1.066,907,1.154,913,5.486,916,1.413,917,1.413,920,1.265,938,1.413,945,1.265,946,1.413,947,2.473,954,1.265,955,1.413,958,1.413,962,1.265,963,1.413,966,1.413,987,1.413,988,1.413,1033,1.265,1034,1.413,1037,1.265,1038,1.413,1042,1.413,1044,1.265,1045,1.265,1046,1.638,1047,1.638,1048,6.975,1049,3.027,1050,6.464,1051,1.413,1052,7.408,1053,1.413,1054,1.413,1055,1.413,1056,1.413,1057,1.413,1058,4.495,1059,1.413,1060,1.413,1061,1.413,1062,1.413,1063,1.413,1064,1.413,1065,1.413,1066,2.729,1067,1.638,1068,2.729,1069,3.509,1070,1.638,1071,1.413,1072,2.729,1073,3.509,1074,1.413,1075,1.413,1076,1.413,1077,1.413,1078,1.413,1079,1.413,1080,2.729,1081,1.638,1082,1.638,1083,1.638,1084,1.413,1085,1.413,1086,1.413,1087,1.413,1088,1.413,1089,1.413,1090,1.413,1091,1.413,1092,6.368,1093,1.413,1094,1.413,1095,1.413,1096,1.413,1097,1.413,1098,1.265,1099,1.413,1100,1.413,1101,1.413,1102,1.413,1103,1.413,1104,4.094,1105,1.413,1106,1.413,1107,1.413,1108,1.413,1109,1.413,1110,1.638,1111,4.495,1112,1.413,1113,1.413,1114,1.638,1115,3.027,1116,1.413,1117,1.413,1118,1.413,1119,1.413,1120,1.413,1121,1.413,1122,1.638,1123,2.729,1124,1.638,1125,2.71,1126,1.638,1127,1.638,1128,1.638]],["title/dependencies.html",[47,3.004,1129,2.773]],["body/dependencies.html",[0,0.385,15,0.017,16,0.92,25,0.013,26,0.013,47,3.002,67,2.539,73,2.324,75,2.617,82,3.25,89,3.979,155,3.979,222,2.462,227,2.462,502,3.979,562,3.979,578,3.562,623,5.09,651,3.562,840,3.979,980,3.979,1130,6.506,1131,4.612,1132,4.612,1133,5.9,1134,4.612,1135,4.612,1136,4.612,1137,4.612,1138,4.612,1139,4.612,1140,4.612,1141,4.612,1142,4.612,1143,4.612,1144,4.612,1145,4.612,1146,4.612,1147,4.612,1148,4.612,1149,4.612,1150,4.612,1151,4.612,1152,3.562,1153,3.979,1154,4.612,1155,4.612,1156,4.612]],["title/miscellaneous/enumerations.html",[1157,1.716,1158,3.982]],["body/miscellaneous/enumerations.html",[15,0.017,17,1.261,25,0.007,26,0.007,31,0.259,218,3.119,254,4.232,261,3.7,262,4.294,301,1.649,323,2.922,342,2.615,343,2.922,344,2.204,345,2.615,346,2.922,347,2.922,348,2.922,349,2.922,350,2.922,351,3.251,352,1.842,353,1.649,354,2.922,355,2.922,356,2.922,357,2.922,358,2.922,359,1.842,360,1.842,361,1.842,362,1.842,363,1.842,364,1.842,365,2.922,366,2.922,621,2.052,700,2.387,789,2.387,854,2.615,1157,1.14,1158,1.842,1159,3.386,1160,2.135,1161,3.386,1162,2.135,1163,2.135,1164,4.791,1165,3.386,1166,2.135,1167,3.386,1168,2.135,1169,3.386,1170,4.209,1171,3.386,1172,3.386,1173,3.386,1174,3.386,1175,5.56,1176,3.386,1177,2.135,1178,3.386,1179,3.386,1180,2.135,1181,3.386,1182,2.135,1183,2.135,1184,2.135,1185,2.135,1186,2.135,1187,2.135,1188,2.135,1189,2.135,1190,2.135,1191,2.135,1192,2.135,1193,2.135,1194,2.135,1195,2.135,1196,2.135,1197,2.135,1198,2.135,1199,2.135,1200,2.135,1201,2.135,1202,2.135,1203,2.135,1204,2.135,1205,2.135,1206,2.135,1207,2.135,1208,2.135,1209,2.135,1210,2.135,1211,2.135,1212,2.135,1213,2.135,1214,2.135,1215,2.135,1216,2.135,1217,2.135,1218,2.135,1219,2.135,1220,2.135,1221,2.135,1222,2.135,1223,2.135,1224,3.386,1225,3.386,1226,2.135,1227,3.386,1228,3.386,1229,3.386,1230,4.209,1231,3.386,1232,3.386,1233,3.386,1234,3.386,1235,3.386,1236,3.386,1237,3.386,1238,3.386,1239,3.386,1240,3.386,1241,3.386,1242,3.386,1243,3.386,1244,3.386,1245,3.386,1246,3.386,1247,3.386,1248,3.386,1249,2.922,1250,3.386,1251,2.135,1252,3.386,1253,3.386,1254,3.386,1255,3.386,1256,3.386,1257,2.135,1258,3.386,1259,3.386,1260,2.135,1261,3.386,1262,3.386,1263,3.386]],["title/miscellaneous/functions.html",[1157,1.716,1264,3.982]],["body/miscellaneous/functions.html",[15,0.016,25,0.013,26,0.013,31,0.546,36,1.75,50,4.187,123,0.94,130,0.515,159,0.782,171,1.075,333,3.521,444,3.885,1058,3.885,1059,5.55,1060,5.55,1061,5.55,1062,5.55,1063,5.55,1064,5.55,1065,5.55,1105,3.885,1106,5.013,1121,3.885,1157,2.404,1264,3.885,1265,4.503,1266,7.331,1267,4.503,1268,7.505,1269,4.503,1270,5.811,1271,5.811,1272,5.811]],["title/index.html",[31,0.389,1273,3.214,1274,3.214]],["body/index.html",[5,0.182,15,0.017,22,0.807,25,0.007,26,0.007,36,0.517,37,1.066,67,2.614,95,2.434,116,1.673,159,0.376,188,1.868,196,2.412,197,2.076,198,2.414,199,1.944,200,1.164,203,2.078,212,3.282,216,1.868,218,1.41,228,3.814,229,2.614,233,2.986,234,2.575,252,1.673,342,1.673,344,1.41,345,2.645,351,2.645,353,2.645,395,4.526,481,1.868,504,1.312,505,4.539,511,1.868,622,2.575,643,2.414,738,2.076,741,3.666,750,2.414,788,1.868,789,3.708,791,4.321,800,1.673,816,1.526,842,1.526,844,4.321,848,1.868,852,1.868,856,1.868,857,1.868,885,1.868,887,1.868,923,1.868,975,3.666,985,1.868,1001,4.064,1010,3.282,1016,3.73,1020,3.73,1044,1.673,1045,4.064,1152,1.673,1153,1.868,1275,3.425,1276,4.83,1277,3.425,1278,5.595,1279,3.425,1280,2.166,1281,2.166,1282,2.166,1283,2.166,1284,4.249,1285,2.166,1286,2.166,1287,2.166,1288,2.166,1289,1.868,1290,2.166,1291,2.166,1292,2.166,1293,4.83,1294,3.425,1295,2.166,1296,5.261,1297,3.425,1298,2.166,1299,3.425,1300,1.868,1301,7.037,1302,2.166,1303,7.23,1304,2.166,1305,3.425,1306,2.166,1307,2.166,1308,5.86,1309,6.255,1310,3.425,1311,2.166,1312,2.166,1313,2.166,1314,2.166,1315,3.425,1316,2.166,1317,2.166,1318,3.425,1319,2.166,1320,4.83,1321,2.166,1322,3.425,1323,2.166,1324,5.261,1325,2.166,1326,2.166,1327,2.166,1328,2.166,1329,4.249,1330,2.166,1331,2.166,1332,2.166,1333,2.166,1334,2.166,1335,2.166,1336,2.166,1337,2.166,1338,3.425,1339,3.425,1340,2.166,1341,2.166,1342,2.166,1343,2.166,1344,2.166,1345,4.249,1346,2.166,1347,2.166,1348,2.166,1349,2.166,1350,2.166,1351,2.166,1352,3.425,1353,3.425,1354,2.955,1355,3.425,1356,3.425,1357,3.425,1358,3.425,1359,2.166,1360,2.166,1361,2.166,1362,2.166,1363,1.868,1364,2.166,1365,2.166]],["title/modules.html",[46,3.169]],["body/modules.html",[15,0.015,25,0.015,26,0.015,45,4.041,46,3.475,56,3.732,57,3.732,600,4.947,1363,5.819,1366,6.744,1367,6.744,1368,7.165,1369,5.734]],["title/overview.html",[1370,4.511]],["body/overview.html",[2,0.718,15,0.016,25,0.013,26,0.013,29,2.72,38,4.014,44,2.72,45,5.301,46,2.904,47,3.119,48,3.702,49,3.702,50,3.119,51,3.702,52,3.702,53,4.135,54,4.135,55,4.135,56,4.311,57,4.84,58,4.67,59,3.702,60,3.702,104,2.416,280,3.378,406,2.904,475,3.702,483,5.216,738,2.904,803,4.014,823,4.135,824,4.135,825,4.014,1370,4.135,1371,4.793,1372,4.793]],["title/properties.html",[122,1.314,1129,2.773]],["body/properties.html",[15,0.017,25,0.015,26,0.015,122,1.66,203,2.51,310,4.505,1373,5.833,1374,5.833,1375,5.833,1376,5.833]],["title/miscellaneous/typealiases.html",[1157,1.716,1377,4.616]],["body/miscellaneous/typealiases.html",[15,0.015,25,0.012,26,0.012,31,0.523,76,3.983,77,3.983,78,3.983,79,3.983,130,0.86,187,3.333,579,3.679,692,3.041,693,3.983,718,4.365,719,3.679,862,4.365,905,4.102,922,6.423,1090,3.723,1091,4.876,1093,4.876,1094,3.723,1095,4.876,1096,4.876,1097,3.723,1098,4.365,1099,3.723,1100,4.876,1101,3.723,1102,4.876,1103,4.876,1111,3.723,1112,4.876,1113,4.876,1125,3.333,1157,2.304,1378,4.315,1379,7.257,1380,4.315,1381,4.315,1382,4.315,1383,4.315,1384,3.723,1385,4.315,1386,4.315,1387,4.315,1388,4.315]],["title/miscellaneous/variables.html",[1157,1.716,1389,3.982]],["body/miscellaneous/variables.html",[5,0.083,7,0.701,15,0.017,22,0.37,23,2.07,25,0.004,26,0.004,28,0.647,31,0.12,33,0.768,37,0.732,42,0.462,65,0.701,66,0.858,86,1.649,94,1.53,95,2.895,107,0.858,116,1.369,122,1.056,130,0.645,135,0.947,138,3.707,139,1.982,159,0.506,160,2.377,171,0.237,178,1.254,179,0.768,199,2.285,200,0.991,202,1.25,203,2.044,211,3.585,228,1.154,229,0.428,233,3.314,234,1.074,254,2.949,272,0.564,277,4.098,279,0.701,286,2.07,287,2.07,288,2.07,289,2.07,290,2.07,291,1.53,297,2.584,308,0.701,339,1.25,341,0.768,344,0.647,374,0.858,377,1.53,383,1.562,395,1.369,406,1.074,448,0.564,449,0.858,450,0.858,451,0.701,452,0.858,453,0.858,454,0.858,455,0.858,456,1.691,457,0.858,458,0.858,459,0.701,460,0.858,461,0.768,462,0.858,464,0.858,465,0.858,467,0.858,468,0.768,469,0.858,470,0.768,471,0.858,472,0.858,473,0.768,474,0.858,510,1.53,522,0.858,531,0.858,567,0.647,570,0.858,571,1.53,610,0.768,615,0.858,619,1.369,620,0.858,621,1.766,625,0.858,639,0.768,643,2.358,655,1.369,712,2.515,719,1.897,720,0.858,738,0.602,808,1.53,810,1.369,828,1.369,836,2.515,842,0.701,849,1.853,853,1.369,902,0.647,908,3.669,909,2.866,910,3.109,913,2.358,918,0.858,920,4.904,921,1.53,933,0.768,936,0.858,937,1.53,953,2.515,965,2.886,1001,0.768,1004,0.858,1005,0.858,1006,0.858,1008,1.53,1009,0.858,1010,0.768,1011,0.858,1012,0.858,1013,0.858,1014,0.858,1015,0.858,1016,0.768,1017,0.858,1018,0.858,1019,0.858,1020,1.369,1021,0.858,1023,0.858,1024,0.858,1026,0.858,1045,1.369,1049,0.858,1051,1.53,1053,1.53,1054,1.53,1055,0.858,1056,1.53,1057,1.53,1071,1.53,1074,0.858,1075,1.53,1076,1.53,1077,0.858,1078,1.53,1079,1.53,1084,0.858,1085,1.53,1086,1.53,1087,0.858,1088,1.53,1089,1.53,1098,0.768,1107,0.858,1108,1.53,1109,1.53,1115,0.858,1116,1.53,1117,1.53,1118,0.858,1119,1.53,1120,1.53,1125,0.768,1152,0.768,1157,0.531,1249,0.858,1289,1.53,1300,0.858,1354,1.53,1384,0.858,1389,0.858,1390,1.773,1391,0.994,1392,2.4,1393,2.4,1394,0.994,1395,0.994,1396,0.994,1397,0.994,1398,0.994,1399,1.773,1400,1.773,1401,0.994,1402,2.4,1403,3.346,1404,1.773,1405,1.773,1406,1.773,1407,1.773,1408,1.773,1409,1.773,1410,1.773,1411,1.773,1412,1.773,1413,2.915,1414,2.915,1415,2.915,1416,2.915,1417,0.994,1418,0.994,1419,0.994,1420,0.994,1421,0.994,1422,0.994,1423,0.994,1424,0.994,1425,0.994,1426,0.994,1427,0.994,1428,0.994,1429,1.773,1430,0.994,1431,0.994,1432,1.773,1433,5.523,1434,0.994,1435,0.994,1436,0.994,1437,0.994,1438,0.994,1439,0.994,1440,0.994,1441,1.773,1442,0.994,1443,0.994,1444,0.994,1445,0.994,1446,0.994,1447,0.994,1448,0.994,1449,0.994,1450,0.994,1451,0.994,1452,0.994,1453,0.994,1454,0.994,1455,0.994,1456,0.994,1457,0.994,1458,0.994,1459,0.994,1460,0.994,1461,0.994,1462,0.994,1463,0.994,1464,0.994,1465,0.994,1466,0.994,1467,0.994,1468,0.994,1469,0.994,1470,0.994,1471,0.994,1472,0.994,1473,0.994,1474,0.994,1475,0.994,1476,0.994,1477,0.994,1478,0.994,1479,0.994,1480,0.994,1481,0.994,1482,0.994,1483,0.994,1484,0.994,1485,0.994,1486,0.994,1487,0.994,1488,0.994,1489,0.994,1490,0.994,1491,0.994,1492,0.994,1493,0.994,1494,0.994,1495,0.994,1496,0.994,1497,0.994,1498,0.994,1499,0.994,1500,0.994,1501,0.994,1502,0.994,1503,0.994,1504,0.994,1505,0.994,1506,1.773,1507,0.994,1508,0.994,1509,0.994,1510,0.994,1511,0.994,1512,0.994,1513,6.228,1514,0.994,1515,0.994,1516,0.994,1517,0.994,1518,0.994,1519,0.994,1520,0.994,1521,0.994,1522,0.994,1523,4.026,1524,0.994,1525,0.994,1526,0.994,1527,0.994,1528,0.994,1529,1.773,1530,1.773,1531,0.994,1532,0.994,1533,0.994,1534,0.994,1535,0.994,1536,0.994,1537,0.994,1538,4.299,1539,0.994,1540,3.346,1541,1.773,1542,0.994,1543,5.108,1544,0.994,1545,0.994,1546,0.994,1547,0.994,1548,0.994,1549,0.994,1550,0.994,1551,0.994,1552,0.994,1553,0.994,1554,4.026,1555,0.994,1556,0.994,1557,0.994,1558,2.4,1559,0.994,1560,0.994,1561,0.994,1562,0.994,1563,0.994,1564,0.994,1565,0.994,1566,4.026,1567,0.994,1568,3.346,1569,0.994,1570,0.994,1571,0.994,1572,0.994,1573,2.4,1574,0.994,1575,0.994,1576,0.994,1577,0.994,1578,0.994,1579,0.994,1580,0.994,1581,0.994,1582,0.994,1583,0.994,1584,2.4,1585,0.994,1586,0.994,1587,0.994,1588,0.994,1589,3.346,1590,0.994,1591,0.994,1592,0.994,1593,0.994,1594,0.994,1595,0.994,1596,3.346,1597,0.994,1598,0.994,1599,0.994,1600,0.994,1601,0.994,1602,0.994,1603,0.994,1604,0.994,1605,0.994,1606,0.994,1607,0.994,1608,0.994,1609,0.994,1610,0.994,1611,0.994,1612,0.994,1613,1.773,1614,0.994,1615,0.994,1616,0.994,1617,0.994,1618,1.773,1619,0.994,1620,2.4,1621,1.773,1622,1.773,1623,0.994,1624,0.994,1625,0.994,1626,0.994,1627,3.711,1628,0.994,1629,1.773,1630,1.773,1631,0.994,1632,0.994,1633,0.994,1634,0.994,1635,1.773,1636,0.994,1637,1.773,1638,0.994,1639,0.994,1640,1.773,1641,0.994,1642,0.994,1643,0.994,1644,0.994,1645,0.994]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplicatonExistException.html":{},"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateOrderDto.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/CustomerExistException.html":{},"interfaces/DefaultPagination.html":{},"classes/DisabledUserException.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/FileFinder.html":{},"classes/ForeignKeyConflictException.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"classes/InvalidTokenException.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"entities/Order.html":{},"classes/OrderMapper.html":{},"classes/OrderResponseDto.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"interfaces/PaginationRequest.html":{},"classes/PaginationResponseDto.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/ResponseDto.html":{},"classes/RoleExistsException.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateOrderDto.html":{},"classes/UserExistsException.html":{},"classes/UuidPrimaryIdEntity.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":913,"title":{},"body":{"classes/Pagination.html":{},"classes/PaginationResponseDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":1373,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":1141,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1148,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":1155,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":604,"title":{},"body":{"controllers/HealthController.html":{}}}],["0.5.1",{"_index":1140,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1052,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1110,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1114,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1048,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1104,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1073,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1122,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1126,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1068,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1069,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":406,"title":{"classes/EnvironmentVariablesValidator-1.html":{}},"body":{"controllers/OrdersController.html":{},"classes/Pagination.html":{},"classes/PaginationResponseDto.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.0",{"_index":380,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["1.7.7",{"_index":1138,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1080,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1072,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1067,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1082,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":383,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/HashHelper.html":{},"injectables/OrdersService.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":1130,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":1137,"title":{},"body":{"dependencies.html":{}}}],["10.1.0",{"_index":1133,"title":{},"body":{"dependencies.html":{}}}],["10.2.3",{"_index":1136,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":202,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["100.0",{"_index":230,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["1024",{"_index":587,"title":{},"body":{"controllers/HealthController.html":{}}}],["1234",{"_index":539,"title":{},"body":{"classes/GenerateCharacters.html":{}}}],["123e4567",{"_index":206,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["12d3",{"_index":208,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["14",{"_index":1081,"title":{},"body":{"coverage.html":{}}}],["1617826799860",{"_index":960,"title":{},"body":{"classes/ResponseDto.html":{}}}],["2",{"_index":475,"title":{"classes/EnvironmentVariablesValidator-2.html":{}},"body":{"classes/GenerateCharacters.html":{},"overview.html":{}}}],["2.4.3",{"_index":1139,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1127,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1070,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":1083,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23502",{"_index":1185,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["23503",{"_index":1187,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["23505",{"_index":1189,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["3",{"_index":483,"title":{"classes/EnvironmentVariablesValidator-3.html":{}},"body":{"overview.html":{}}}],["3.3.0",{"_index":1131,"title":{},"body":{"dependencies.html":{}}}],["3.6.2",{"_index":1156,"title":{},"body":{"dependencies.html":{}}}],["300",{"_index":586,"title":{},"body":{"controllers/HealthController.html":{}}}],["3000",{"_index":384,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["300mb",{"_index":590,"title":{},"body":{"controllers/HealthController.html":{}}}],["33",{"_index":1066,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":1372,"title":{},"body":{"overview.html":{}}}],["4/6",{"_index":1124,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["401",{"_index":1447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["402",{"_index":1449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["403",{"_index":1451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["404",{"_index":1453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["405",{"_index":1455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["406",{"_index":1457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["407",{"_index":1459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["408",{"_index":1461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["409",{"_index":1463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["410",{"_index":1464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["411",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["412",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["413",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["414",{"_index":1472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["415",{"_index":1474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["416",{"_index":1476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["417",{"_index":1478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["418",{"_index":1480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["421",{"_index":1482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["422",{"_index":1484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["424",{"_index":1486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["426614174000",{"_index":210,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["429",{"_index":1488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.0.1",{"_index":1154,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":599,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["500",{"_index":1490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["501",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["502",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["503",{"_index":1496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["504",{"_index":1498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["505",{"_index":1500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5432",{"_index":455,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/variables.html":{}}}],["6.0.1",{"_index":1150,"title":{},"body":{"dependencies.html":{}}}],["66",{"_index":1123,"title":{},"body":{"coverage.html":{}}}],["7.8.1",{"_index":1151,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1371,"title":{},"body":{"overview.html":{}}}],["8.0.1",{"_index":1135,"title":{},"body":{"dependencies.html":{}}}],["8.13.1",{"_index":1145,"title":{},"body":{"dependencies.html":{}}}],["8.7.3",{"_index":1143,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":1008,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["__entity",{"_index":124,"title":{},"body":{"classes/Base.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["a456",{"_index":209,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["access",{"_index":23,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"miscellaneous/variables.html":{}}}],["access_token_expired",{"_index":1194,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["accessing",{"_index":970,"title":{},"body":{"injectables/TaxService.html":{}}}],["accesstokenexpired",{"_index":1193,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["accesstokenexpiredexception",{"_index":1,"title":{"classes/AccessTokenExpiredException.html":{}},"body":{"classes/AccessTokenExpiredException.html":{},"coverage.html":{}}}],["accumulator",{"_index":1640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["add",{"_index":521,"title":{},"body":{"classes/FileFinder.html":{},"injectables/HttpResponseInterceptor.html":{}}}],["admin",{"_index":1541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["adminstatistics",{"_index":1604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["afterload",{"_index":150,"title":{},"body":{"classes/Base.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["alias",{"_index":1092,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":1378,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allconfigtype",{"_index":579,"title":{},"body":{"controllers/HealthController.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["allocated",{"_index":593,"title":{},"body":{"controllers/HealthController.html":{}}}],["allof",{"_index":1402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["already",{"_index":117,"title":{},"body":{"classes/ApplicatonExistException.html":{},"classes/CustomerExistException.html":{},"controllers/OrdersController.html":{}}}],["already_exists",{"_index":1214,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["alreadyexists",{"_index":1213,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["amount",{"_index":196,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateTableForOrders1730365329511.html":{},"entities/Order.html":{},"classes/OrderResponseDto.html":{},"injectables/OrdersService.html":{},"interfaces/PaginationRequest.html":{},"index.html":{}}}],["api",{"_index":395,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["api_prefix",{"_index":302,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["apiconflictresponse",{"_index":807,"title":{},"body":{"controllers/OrdersController.html":{}}}],["apiextramodels(paginationresponsedto",{"_index":1418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiextramodels(responsedto",{"_index":1401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiforbiddenresponse",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiglobalresponse",{"_index":810,"title":{},"body":{"controllers/OrdersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiglobalresponse(orderresponsedto",{"_index":813,"title":{},"body":{"controllers/OrdersController.html":{}}}],["apiinternalservererrorresponse",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apinotfoundresponse",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiokresponse",{"_index":808,"title":{},"body":{"controllers/OrdersController.html":{},"miscellaneous/variables.html":{}}}],["apioperation",{"_index":809,"title":{},"body":{"controllers/OrdersController.html":{}}}],["apioperation({description",{"_index":787,"title":{},"body":{"controllers/OrdersController.html":{}}}],["apipaginatedresponse",{"_index":1076,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiprefix",{"_index":393,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["apiproperty",{"_index":221,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/OrderResponseDto.html":{},"classes/PaginationResponseDto.html":{},"classes/ResponseDto.html":{}}}],["apiproperty({example",{"_index":201,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/PaginationResponseDto.html":{},"classes/ResponseDto.html":{}}}],["apiquery",{"_index":1413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apitags",{"_index":580,"title":{},"body":{"controllers/HealthController.html":{},"controllers/OrdersController.html":{}}}],["apitags('health",{"_index":581,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags('orders",{"_index":812,"title":{},"body":{"controllers/OrdersController.html":{}}}],["apiunauthorizedresponse",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiversion",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":377,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/variables.html":{}}}],["app.controller",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appconfig",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"classes/EnvironmentVariablesValidator.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["appcontroller",{"_index":28,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appdatasource",{"_index":1120,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apple_pay",{"_index":1244,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["application",{"_index":116,"title":{},"body":{"classes/ApplicatonExistException.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["applicationscontroller",{"_index":1612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicatonexistexception",{"_index":109,"title":{"classes/ApplicatonExistException.html":{}},"body":{"classes/ApplicatonExistException.html":{},"coverage.html":{}}}],["applydecorators",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":45,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approve",{"_index":1629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approved",{"_index":1258,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["appservice",{"_index":38,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentshost",{"_index":616,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["array",{"_index":522,"title":{},"body":{"classes/FileFinder.html":{},"miscellaneous/variables.html":{}}}],["asc",{"_index":936,"title":{},"body":{"interfaces/PaginationRequest.html":{},"miscellaneous/variables.html":{}}}],["assign",{"_index":284,"title":{},"body":{"interfaces/DefaultPagination.html":{}}}],["async",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/HashHelper.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/OrdersService.html":{},"injectables/TaxService.html":{}}}],["auth_options",{"_index":1051,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authconfig",{"_index":1112,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["authenticated",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authentication",{"_index":1356,"title":{},"body":{"index.html":{}}}],["author",{"_index":1376,"title":{},"body":{"properties.html":{}}}],["authority",{"_index":1297,"title":{},"body":{"index.html":{}}}],["authority’s",{"_index":1350,"title":{},"body":{"index.html":{}}}],["authorized",{"_index":298,"title":{},"body":{"classes/DisabledUserException.html":{}}}],["automatically",{"_index":1309,"title":{},"body":{"index.html":{}}}],["available",{"_index":600,"title":{},"body":{"controllers/HealthController.html":{},"modules.html":{}}}],["await",{"_index":247,"title":{},"body":{"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/HashHelper.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/OrdersService.html":{},"injectables/TaxService.html":{}}}],["aws",{"_index":357,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["axios",{"_index":980,"title":{},"body":{"injectables/TaxService.html":{},"dependencies.html":{}}}],["axios.post",{"_index":981,"title":{},"body":{"injectables/TaxService.html":{}}}],["azure",{"_index":358,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["backend_domain",{"_index":303,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["backenddomain",{"_index":389,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["bad_gateway",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bad_request",{"_index":1446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bank",{"_index":1234,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["base",{"_index":119,"title":{"classes/Base.html":{}},"body":{"classes/Base.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{},"coverage.html":{}}}],["base:18",{"_index":664,"title":{},"body":{"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["base:27",{"_index":666,"title":{},"body":{"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["base:34",{"_index":665,"title":{},"body":{"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["base:36",{"_index":663,"title":{},"body":{"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["base:39",{"_index":667,"title":{},"body":{"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["base:43",{"_index":668,"title":{},"body":{"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["based",{"_index":1020,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["baseentity",{"_index":121,"title":{},"body":{"classes/Base.html":{}}}],["bcrypt",{"_index":561,"title":{},"body":{"classes/HashHelper.html":{}}}],["bcrypt.compare(plain",{"_index":566,"title":{},"body":{"classes/HashHelper.html":{}}}],["bcrypt.hash(str",{"_index":564,"title":{},"body":{"classes/HashHelper.html":{}}}],["bcryptjs",{"_index":562,"title":{},"body":{"classes/HashHelper.html":{},"dependencies.html":{}}}],["bearer",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blocked_user",{"_index":1208,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["blockeduser",{"_index":1207,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["body",{"_index":801,"title":{},"body":{"controllers/OrdersController.html":{}}}],["body:example",{"_index":1338,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":432,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"classes/HashHelper.html":{},"classes/PaginationResponseDto.html":{}}}],["boolean(entity",{"_index":715,"title":{},"body":{"injectables/IsExist.html":{}}}],["bootstrap",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1368,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1363,"title":{},"body":{"index.html":{},"modules.html":{}}}],["build",{"_index":1440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["business",{"_index":212,"title":{},"body":{"classes/CreateOrderDto.html":{},"injectables/OrdersService.html":{},"index.html":{}}}],["business's",{"_index":1292,"title":{},"body":{"index.html":{}}}],["business_id",{"_index":266,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{},"entities/Order.html":{}}}],["businesses",{"_index":1286,"title":{},"body":{"index.html":{}}}],["businessid",{"_index":197,"title":{},"body":{"classes/CreateOrderDto.html":{},"entities/Order.html":{},"classes/OrderResponseDto.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"index.html":{}}}],["business’s",{"_index":1347,"title":{},"body":{"index.html":{}}}],["ca",{"_index":470,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["calculate",{"_index":788,"title":{},"body":{"controllers/OrdersController.html":{},"index.html":{}}}],["calculatecreditscore",{"_index":783,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["calculatecreditscore(@param('businessid",{"_index":821,"title":{},"body":{"controllers/OrdersController.html":{}}}],["calculatecreditscore(businessid",{"_index":786,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["calculates",{"_index":848,"title":{},"body":{"injectables/OrdersService.html":{},"index.html":{}}}],["calculating",{"_index":899,"title":{},"body":{"injectables/OrdersService.html":{}}}],["calculation",{"_index":1291,"title":{},"body":{"index.html":{}}}],["call",{"_index":517,"title":{},"body":{"classes/FileFinder.html":{}}}],["callback",{"_index":1625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callhandler",{"_index":641,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{},"injectables/LoggingInterceptor.html":{}}}],["cancelled",{"_index":262,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{},"entities/Order.html":{},"miscellaneous/enumerations.html":{}}}],["card",{"_index":1233,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["case.transformer.ts",{"_index":1088,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cash",{"_index":1238,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["catch",{"_index":613,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/OrdersService.html":{},"injectables/TaxService.html":{}}}],["catch(exception",{"_index":614,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":624,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["categoriescontroller",{"_index":1587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["category",{"_index":1589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cert",{"_index":473,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["change",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["changed",{"_index":1310,"title":{},"body":{"index.html":{}}}],["changepassword",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["characters.helper.ts",{"_index":534,"title":{},"body":{"classes/GenerateCharacters.html":{},"coverage.html":{}}}],["characters.helper.ts:3",{"_index":537,"title":{},"body":{"classes/GenerateCharacters.html":{}}}],["check",{"_index":571,"title":{},"body":{"controllers/HealthController.html":{},"miscellaneous/variables.html":{}}}],["cheque",{"_index":1239,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["class",{"_index":0,"title":{"classes/AccessTokenExpiredException.html":{},"classes/ApplicatonExistException.html":{},"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateOrderDto.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/CustomerExistException.html":{},"classes/DisabledUserException.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/FileFinder.html":{},"classes/ForeignKeyConflictException.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"classes/HttpExceptionFilter.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"classes/InvalidTokenException.html":{},"classes/OrderMapper.html":{},"classes/OrderResponseDto.html":{},"classes/Pagination.html":{},"classes/PaginationResponseDto.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/ResponseDto.html":{},"classes/RoleExistsException.html":{},"classes/UpdateOrderDto.html":{},"classes/UserExistsException.html":{},"classes/UuidPrimaryIdEntity.html":{}},"body":{"classes/AccessTokenExpiredException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplicatonExistException.html":{},"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateOrderDto.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/CustomerExistException.html":{},"classes/DisabledUserException.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/FileFinder.html":{},"classes/ForeignKeyConflictException.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"classes/InvalidTokenException.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"entities/Order.html":{},"classes/OrderMapper.html":{},"classes/OrderResponseDto.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"classes/PaginationResponseDto.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/ResponseDto.html":{},"classes/RoleExistsException.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateOrderDto.html":{},"classes/UserExistsException.html":{},"classes/UuidPrimaryIdEntity.html":{},"coverage.html":{},"dependencies.html":{}}}],["class\\s+(\\w+)\\s+/g",{"_index":183,"title":{},"body":{"classes/ClassNameExtractor.html":{}}}],["classconstructor",{"_index":1272,"title":{},"body":{"miscellaneous/functions.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"classes/ApplicatonExistException.html":{},"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateOrderDto.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/CustomerExistException.html":{},"classes/DisabledUserException.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/FileFinder.html":{},"classes/ForeignKeyConflictException.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"classes/HttpExceptionFilter.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"classes/InvalidTokenException.html":{},"classes/OrderMapper.html":{},"classes/OrderResponseDto.html":{},"classes/Pagination.html":{},"classes/PaginationResponseDto.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/ResponseDto.html":{},"classes/RoleExistsException.html":{},"classes/UpdateOrderDto.html":{},"classes/UserExistsException.html":{},"classes/UuidPrimaryIdEntity.html":{},"overview.html":{}}}],["classnameextractor",{"_index":164,"title":{"classes/ClassNameExtractor.html":{}},"body":{"classes/ClassNameExtractor.html":{},"coverage.html":{}}}],["classnames",{"_index":184,"title":{},"body":{"classes/ClassNameExtractor.html":{}}}],["classnames.push(match[1",{"_index":192,"title":{},"body":{"classes/ClassNameExtractor.html":{}}}],["classregex",{"_index":182,"title":{},"body":{"classes/ClassNameExtractor.html":{}}}],["classregex.exec(content",{"_index":191,"title":{},"body":{"classes/ClassNameExtractor.html":{}}}],["cli",{"_index":1012,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["cloud",{"_index":361,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["cluster_appmodule",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_ordersmodule",{"_index":823,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_ordersmodule_providers",{"_index":824,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cmd",{"_index":1142,"title":{},"body":{"dependencies.html":{}}}],["code.enum.ts",{"_index":1161,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["column",{"_index":746,"title":{},"body":{"entities/Order.html":{}}}],["column({name",{"_index":740,"title":{},"body":{"entities/Order.html":{}}}],["common/decorators",{"_index":811,"title":{},"body":{"controllers/OrdersController.html":{}}}],["common/entities",{"_index":748,"title":{},"body":{"entities/Order.html":{}}}],["common/entities/base.entity",{"_index":670,"title":{},"body":{"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["common/enums",{"_index":114,"title":{},"body":{"classes/ApplicatonExistException.html":{},"classes/CustomerExistException.html":{},"classes/InvalidCurrentPinException.html":{}}}],["common/validators",{"_index":334,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{}}}],["common/validators/validate",{"_index":443,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["compare",{"_index":547,"title":{},"body":{"classes/HashHelper.html":{}}}],["compare(plain",{"_index":550,"title":{},"body":{"classes/HashHelper.html":{}}}],["compares",{"_index":553,"title":{},"body":{"classes/HashHelper.html":{}}}],["completed",{"_index":261,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{},"entities/Order.html":{},"miscellaneous/enumerations.html":{}}}],["compliance",{"_index":1284,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":1358,"title":{},"body":{"index.html":{}}}],["compodoc:serve",{"_index":1361,"title":{},"body":{"index.html":{}}}],["compose",{"_index":353,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["condition.type.ts",{"_index":1091,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["config",{"_index":444,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/functions.html":{}}}],["config.service",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["config.service.ts",{"_index":988,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"coverage.html":{}}}],["config.service.ts:10",{"_index":991,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["config.service.ts:7",{"_index":990,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["config.ts",{"_index":1106,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["config.type",{"_index":332,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{}}}],["config/config.type",{"_index":479,"title":{},"body":{"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"controllers/HealthController.html":{},"injectables/TaxService.html":{}}}],["config/index",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{}}}],["configservice.get('mongo.url",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":971,"title":{},"body":{"injectables/TaxService.html":{}}}],["configured",{"_index":977,"title":{},"body":{"injectables/TaxService.html":{}}}],["confirm",{"_index":1586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirmation",{"_index":1339,"title":{},"body":{"index.html":{}}}],["confirmpayment",{"_index":1585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["conflict",{"_index":531,"title":{},"body":{"classes/ForeignKeyConflictException.html":{},"miscellaneous/variables.html":{}}}],["conflict.exception.ts",{"_index":527,"title":{},"body":{"classes/ForeignKeyConflictException.html":{},"coverage.html":{}}}],["conflict.exception.ts:4",{"_index":528,"title":{},"body":{"classes/ForeignKeyConflictException.html":{}}}],["conflictexception",{"_index":112,"title":{},"body":{"classes/ApplicatonExistException.html":{},"classes/CustomerExistException.html":{},"classes/ForeignKeyConflictException.html":{},"classes/PermissionExistsException.html":{},"classes/RoleExistsException.html":{},"classes/UserExistsException.html":{}}}],["connection",{"_index":1023,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["console.error('failed",{"_index":984,"title":{},"body":{"injectables/TaxService.html":{}}}],["console.log(response",{"_index":983,"title":{},"body":{"injectables/TaxService.html":{}}}],["const",{"_index":178,"title":{},"body":{"classes/ClassNameExtractor.html":{},"classes/FileFinder.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"classes/OrderMapper.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"injectables/TaxService.html":{},"miscellaneous/variables.html":{}}}],["constraint",{"_index":269,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{}}}],["constructor",{"_index":11,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"classes/ApplicatonExistException.html":{},"classes/CustomerExistException.html":{},"classes/DisabledUserException.html":{},"classes/ForeignKeyConflictException.html":{},"controllers/HealthController.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"classes/InvalidTokenException.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"injectables/OrdersService.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/RoleExistsException.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UserExistsException.html":{}}}],["constructor(configservice",{"_index":968,"title":{},"body":{"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{}}}],["constructor(datasource",{"_index":695,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsNotExist.html":{}}}],["constructor(errortype",{"_index":295,"title":{},"body":{"classes/DisabledUserException.html":{}}}],["constructor(name",{"_index":276,"title":{},"body":{"classes/CustomerExistException.html":{},"classes/RoleExistsException.html":{}}}],["constructor(orderrepository",{"_index":834,"title":{},"body":{"injectables/OrdersService.html":{}}}],["constructor(private",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"controllers/OrdersController.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{}}}],["constructor(slug",{"_index":948,"title":{},"body":{"classes/PermissionExistsException.html":{}}}],["constructor(username",{"_index":1039,"title":{},"body":{"classes/UserExistsException.html":{}}}],["constructs",{"_index":838,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/TaxService.html":{}}}],["containing",{"_index":850,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/TaxService.html":{}}}],["content",{"_index":179,"title":{},"body":{"classes/ClassNameExtractor.html":{},"classes/PaginationResponseDto.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":644,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{},"injectables/LoggingInterceptor.html":{}}}],["context.getargbyindex(0).originalurl",{"_index":732,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["controller",{"_index":27,"title":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/OrdersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/OrdersController.html":{},"coverage.html":{}}}],["controller('health",{"_index":582,"title":{},"body":{"controllers/HealthController.html":{}}}],["controllers",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"overview.html":{}}}],["count",{"_index":1343,"title":{},"body":{"index.html":{}}}],["countriescontroller",{"_index":1574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["country",{"_index":1575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coverage",{"_index":1044,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":233,"title":{},"body":{"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"controllers/OrdersController.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["createcategory",{"_index":1591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createcustomer",{"_index":1534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["created",{"_index":213,"title":{},"body":{"classes/CreateOrderDto.html":{},"injectables/OrdersService.html":{}}}],["created_at",{"_index":134,"title":{},"body":{"classes/Base.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["createdat",{"_index":125,"title":{},"body":{"classes/Base.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/OrderResponseDto.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["createdatecolumn",{"_index":156,"title":{},"body":{"classes/Base.html":{}}}],["createdatecolumn({name",{"_index":133,"title":{},"body":{"classes/Base.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["createestate",{"_index":1598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createinvoiceandgeneratepayment",{"_index":1546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createinvoiceonly",{"_index":1547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createorder",{"_index":784,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["createorder(@body(validationpipe",{"_index":814,"title":{},"body":{"controllers/OrdersController.html":{}}}],["createorder(createorderdto",{"_index":793,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["createorderdto",{"_index":193,"title":{"classes/CreateOrderDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"injectables/TaxService.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["createparamdecorator",{"_index":1505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpermission",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createquerybuilder",{"_index":889,"title":{},"body":{"injectables/OrdersService.html":{}}}],["createrevenuehead",{"_index":1569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createrole",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":852,"title":{},"body":{"injectables/OrdersService.html":{},"index.html":{}}}],["createschemaforsales1730363889037",{"_index":231,"title":{"classes/CreateSchemaForSales1730363889037.html":{}},"body":{"classes/CreateSchemaForSales1730363889037.html":{},"coverage.html":{}}}],["createstatus",{"_index":1609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createtablefororders1730365329511",{"_index":250,"title":{"classes/CreateTableForOrders1730365329511.html":{}},"body":{"classes/CreateTableForOrders1730365329511.html":{},"coverage.html":{}}}],["createtypeormoptions",{"_index":989,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["createuser",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creating",{"_index":880,"title":{},"body":{"injectables/OrdersService.html":{}}}],["creation",{"_index":1340,"title":{},"body":{"index.html":{}}}],["credentials",{"_index":677,"title":{},"body":{"classes/InvalidCredentialsException.html":{}}}],["credentials.exception.ts",{"_index":673,"title":{},"body":{"classes/InvalidCredentialsException.html":{},"coverage.html":{}}}],["credentials.exception.ts:4",{"_index":674,"title":{},"body":{"classes/InvalidCredentialsException.html":{}}}],["credit",{"_index":789,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["csv",{"_index":1559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx",{"_index":625,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":627,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":504,"title":{},"body":{"classes/FileFinder.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"interfaces/PaginationRequest.html":{},"coverage.html":{},"index.html":{}}}],["currentpage",{"_index":914,"title":{},"body":{"classes/Pagination.html":{},"classes/PaginationResponseDto.html":{}}}],["currentvalue",{"_index":720,"title":{},"body":{"injectables/IsNotExist.html":{},"miscellaneous/variables.html":{}}}],["currentvalue.constraints",{"_index":1643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentvalue.property",{"_index":1641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentvalue?.id",{"_index":724,"title":{},"body":{"injectables/IsNotExist.html":{}}}],["custom",{"_index":402,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["customer",{"_index":277,"title":{},"body":{"classes/CustomerExistException.html":{},"miscellaneous/variables.html":{}}}],["customer_id",{"_index":267,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{},"entities/Order.html":{}}}],["customerexistexception",{"_index":274,"title":{"classes/CustomerExistException.html":{}},"body":{"classes/CustomerExistException.html":{},"coverage.html":{}}}],["customerscontroller",{"_index":1531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":853,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/TaxService.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":1001,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["database.rejectunauthorized",{"_index":1029,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["database/typeorm",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["database_ca",{"_index":408,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["database_cert",{"_index":409,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["database_host",{"_index":410,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["database_key",{"_index":411,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["database_max_connections",{"_index":412,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["database_name",{"_index":413,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["database_password",{"_index":414,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["database_port",{"_index":415,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["database_reject_unauthorized",{"_index":416,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["database_ssl_enabled",{"_index":417,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["database_synchronize",{"_index":418,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["database_type",{"_index":419,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["database_url",{"_index":420,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["database_username",{"_index":421,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["databaseconfig",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["datasource",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"miscellaneous/variables.html":{}}}],["datasource(options).initialize",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["datasourcefactory",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["datasourceoptions",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":132,"title":{},"body":{"classes/Base.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/OrderResponseDto.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["date().gettime",{"_index":634,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{}}}],["date.now",{"_index":734,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["day",{"_index":1252,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dberrorcode",{"_index":1159,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["debit",{"_index":1231,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["decimal",{"_index":741,"title":{},"body":{"entities/Order.html":{},"index.html":{}}}],["declarations",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"overview.html":{}}}],["declined",{"_index":1259,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["decorator",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"classes/Base.html":{},"classes/CreateOrderDto.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"controllers/HealthController.html":{},"classes/IntegerPrimaryIdEntity.html":{},"entities/Order.html":{},"classes/OrderResponseDto.html":{},"controllers/OrdersController.html":{},"classes/PaginationResponseDto.html":{},"classes/ResponseDto.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["dedicated",{"_index":1280,"title":{},"body":{"index.html":{}}}],["default",{"_index":160,"title":{},"body":{"classes/Base.html":{},"classes/CreateTableForOrders1730365329511.html":{},"interfaces/DefaultPagination.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/HashHelper.html":{},"injectables/LoggingInterceptor.html":{},"entities/Order.html":{},"injectables/OrdersService.html":{},"miscellaneous/variables.html":{}}}],["defaultlimit",{"_index":286,"title":{},"body":{"interfaces/DefaultPagination.html":{},"miscellaneous/variables.html":{}}}],["defaultorder",{"_index":287,"title":{},"body":{"interfaces/DefaultPagination.html":{},"miscellaneous/variables.html":{}}}],["defaultorderdirection",{"_index":288,"title":{},"body":{"interfaces/DefaultPagination.html":{},"miscellaneous/variables.html":{}}}],["defaultpage",{"_index":289,"title":{},"body":{"interfaces/DefaultPagination.html":{},"miscellaneous/variables.html":{}}}],["defaultpagination",{"_index":279,"title":{"interfaces/DefaultPagination.html":{}},"body":{"interfaces/DefaultPagination.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultskip",{"_index":290,"title":{},"body":{"interfaces/DefaultPagination.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ApplicatonExistException.html":{},"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateOrderDto.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/CustomerExistException.html":{},"classes/DisabledUserException.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/FileFinder.html":{},"classes/ForeignKeyConflictException.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"controllers/HealthController.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"classes/InvalidTokenException.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"entities/Order.html":{},"classes/OrderMapper.html":{},"classes/OrderResponseDto.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"classes/PaginationResponseDto.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/ResponseDto.html":{},"classes/RoleExistsException.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UserExistsException.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["delete",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deleted_at",{"_index":143,"title":{},"body":{"classes/Base.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["deletedat",{"_index":126,"title":{},"body":{"classes/Base.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["deletedatecolumn",{"_index":157,"title":{},"body":{"classes/Base.html":{}}}],["deletedatecolumn({name",{"_index":142,"title":{},"body":{"classes/Base.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["deleteinvoice",{"_index":1552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deleterole",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo",{"_index":349,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["denied",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["department",{"_index":216,"title":{},"body":{"classes/CreateOrderDto.html":{},"index.html":{}}}],["departmentid",{"_index":198,"title":{},"body":{"classes/CreateOrderDto.html":{},"entities/Order.html":{},"classes/OrderResponseDto.html":{},"index.html":{}}}],["dependencies",{"_index":47,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":937,"title":{},"body":{"interfaces/PaginationRequest.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":203,"title":{},"body":{"classes/CreateOrderDto.html":{},"interfaces/DefaultPagination.html":{},"classes/EnvironmentVariablesValidator.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"interfaces/PaginationRequest.html":{},"classes/ResponseDto.html":{},"injectables/TaxService.html":{},"coverage.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["designed",{"_index":283,"title":{},"body":{"interfaces/DefaultPagination.html":{}}}],["desired",{"_index":520,"title":{},"body":{"classes/FileFinder.html":{}}}],["details",{"_index":816,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"injectables/TaxService.html":{},"index.html":{}}}],["details'})@apiokresponse()@get('business/:businessid/details",{"_index":798,"title":{},"body":{"controllers/OrdersController.html":{}}}],["development",{"_index":342,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["digital",{"_index":363,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["digital_ocean",{"_index":362,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["dir",{"_index":496,"title":{},"body":{"classes/FileFinder.html":{}}}],["direct_debit",{"_index":1240,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["directory",{"_index":505,"title":{},"body":{"classes/FileFinder.html":{},"index.html":{}}}],["disableduserexception",{"_index":292,"title":{"classes/DisabledUserException.html":{}},"body":{"classes/DisabledUserException.html":{},"coverage.html":{}}}],["disk",{"_index":596,"title":{},"body":{"controllers/HealthController.html":{}}}],["diskhealthindicator",{"_index":574,"title":{},"body":{"controllers/HealthController.html":{}}}],["disputed",{"_index":1263,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["docker",{"_index":351,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["docker_compose",{"_index":352,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["document",{"_index":1441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":1045,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["documentbuilder",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documents",{"_index":841,"title":{},"body":{"injectables/OrdersService.html":{}}}],["domain",{"_index":304,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["down",{"_index":239,"title":{},"body":{"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{}}}],["down(queryrunner",{"_index":241,"title":{},"body":{"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{}}}],["download",{"_index":1618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["drop",{"_index":1322,"title":{},"body":{"index.html":{}}}],["dropschema",{"_index":1004,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["dto",{"_index":760,"title":{},"body":{"classes/OrderMapper.html":{},"injectables/OrdersService.html":{},"classes/ResponseDto.html":{}}}],["dto.amount",{"_index":767,"title":{},"body":{"classes/OrderMapper.html":{}}}],["dto.businessid",{"_index":763,"title":{},"body":{"classes/OrderMapper.html":{}}}],["dto.createdat",{"_index":771,"title":{},"body":{"classes/OrderMapper.html":{}}}],["dto.departmentid",{"_index":765,"title":{},"body":{"classes/OrderMapper.html":{}}}],["dto.id",{"_index":761,"title":{},"body":{"classes/OrderMapper.html":{}}}],["dto.status",{"_index":769,"title":{},"body":{"classes/OrderMapper.html":{}}}],["dto/create",{"_index":805,"title":{},"body":{"controllers/OrdersController.html":{}}}],["dtos",{"_index":904,"title":{},"body":{"classes/Pagination.html":{}}}],["dtos/response.dto",{"_index":648,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{}}}],["e2e",{"_index":1331,"title":{},"body":{"index.html":{}}}],["e89b",{"_index":207,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["each",{"_index":511,"title":{},"body":{"classes/FileFinder.html":{},"index.html":{}}}],["email",{"_index":1041,"title":{},"body":{"classes/UserExistsException.html":{}}}],["en",{"_index":398,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["encrypt",{"_index":548,"title":{},"body":{"classes/HashHelper.html":{}}}],["encrypt(str",{"_index":557,"title":{},"body":{"classes/HashHelper.html":{}}}],["encrypted",{"_index":551,"title":{},"body":{"classes/HashHelper.html":{}}}],["encrypts",{"_index":559,"title":{},"body":{"classes/HashHelper.html":{}}}],["endpoints",{"_index":1336,"title":{},"body":{"index.html":{}}}],["entities",{"_index":738,"title":{},"body":{"entities/Order.html":{},"injectables/OrdersService.html":{},"injectables/TypeOrmConfigService.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entitiesdir",{"_index":1013,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":709,"title":{"entities/Order.html":{}},"body":{"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"entities/Order.html":{},"classes/OrderMapper.html":{},"coverage.html":{}}}],["entity.amount",{"_index":768,"title":{},"body":{"classes/OrderMapper.html":{}}}],["entity.businessid",{"_index":764,"title":{},"body":{"classes/OrderMapper.html":{}}}],["entity.createdat",{"_index":772,"title":{},"body":{"classes/OrderMapper.html":{}}}],["entity.departmentid",{"_index":766,"title":{},"body":{"classes/OrderMapper.html":{}}}],["entity.id",{"_index":762,"title":{},"body":{"classes/OrderMapper.html":{}}}],["entity.status",{"_index":770,"title":{},"body":{"classes/OrderMapper.html":{}}}],["entity?.id",{"_index":723,"title":{},"body":{"injectables/IsNotExist.html":{}}}],["entitycondition",{"_index":1093,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["entity{.ts,.js",{"_index":1009,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["entries",{"_index":506,"title":{},"body":{"classes/FileFinder.html":{}}}],["entry",{"_index":512,"title":{},"body":{"classes/FileFinder.html":{}}}],["entry.isdirectory",{"_index":518,"title":{},"body":{"classes/FileFinder.html":{}}}],["entry.name",{"_index":515,"title":{},"body":{"classes/FileFinder.html":{}}}],["entry.name.endswith(ext",{"_index":523,"title":{},"body":{"classes/FileFinder.html":{}}}],["enum",{"_index":341,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"entities/Order.html":{},"miscellaneous/variables.html":{}}}],["enum('pending",{"_index":260,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{}}}],["enumerations",{"_index":1158,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":18,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"classes/DisabledUserException.html":{},"classes/ForeignKeyConflictException.html":{},"classes/HttpExceptionFilter.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidTokenException.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/RoleExistsException.html":{},"classes/UserExistsException.html":{}}}],["env",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["envfilepath",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":323,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["environment.development",{"_index":375,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["environmentvariablesvalidator",{"_index":300,"title":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{}},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"coverage.html":{}}}],["envvalues.database_url",{"_index":446,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["envvalues.database_url)@isstring",{"_index":438,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["envvariablesclass",{"_index":1271,"title":{},"body":{"miscellaneous/functions.html":{}}}],["equal",{"_index":556,"title":{},"body":{"classes/HashHelper.html":{}}}],["error",{"_index":621,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/OrdersService.html":{},"injectables/TaxService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error.message",{"_index":986,"title":{},"body":{"injectables/TaxService.html":{}}}],["errorhttpstatuscode",{"_index":1634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errors",{"_index":1637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errors.reduce",{"_index":1639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortype",{"_index":17,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"classes/ApplicatonExistException.html":{},"classes/CustomerExistException.html":{},"classes/DisabledUserException.html":{},"classes/ForeignKeyConflictException.html":{},"classes/HttpExceptionFilter.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"classes/InvalidTokenException.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/RoleExistsException.html":{},"classes/UserExistsException.html":{},"miscellaneous/enumerations.html":{}}}],["errortype.accesstokenexpired",{"_index":21,"title":{},"body":{"classes/AccessTokenExpiredException.html":{}}}],["errortype.foreignkeyconflict",{"_index":529,"title":{},"body":{"classes/ForeignKeyConflictException.html":{}}}],["errortype.invalidcredentials",{"_index":675,"title":{},"body":{"classes/InvalidCredentialsException.html":{}}}],["errortype.invalidcurrentpassword",{"_index":682,"title":{},"body":{"classes/InvalidCurrentPasswordException.html":{}}}],["errortype.invalidcurrentpin",{"_index":686,"title":{},"body":{"classes/InvalidCurrentPinException.html":{}}}],["errortype.invalidtoken",{"_index":690,"title":{},"body":{"classes/InvalidTokenException.html":{}}}],["errortype.permissionexists",{"_index":951,"title":{},"body":{"classes/PermissionExistsException.html":{}}}],["errortype.refreshtokenexpired",{"_index":956,"title":{},"body":{"classes/RefreshTokenExpiredException.html":{}}}],["errortype.roleexists",{"_index":964,"title":{},"body":{"classes/RoleExistsException.html":{}}}],["errortype.termsettingsexist",{"_index":115,"title":{},"body":{"classes/ApplicatonExistException.html":{},"classes/CustomerExistException.html":{}}}],["errortype.userexists",{"_index":1040,"title":{},"body":{"classes/UserExistsException.html":{}}}],["estate",{"_index":1596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["estatescontroller",{"_index":1594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example",{"_index":228,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/PaginationResponseDto.html":{},"classes/ResponseDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["exceed",{"_index":598,"title":{},"body":{"controllers/HealthController.html":{}}}],["exception",{"_index":618,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":611,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:8",{"_index":617,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getresponse",{"_index":629,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":628,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptionfactory",{"_index":1636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exceptionfilter",{"_index":612,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exec",{"_index":896,"title":{},"body":{"injectables/OrdersService.html":{}}}],["executioncontext",{"_index":639,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":118,"title":{},"body":{"classes/ApplicatonExistException.html":{},"classes/CustomerExistException.html":{},"controllers/OrdersController.html":{}}}],["exist'})@post",{"_index":795,"title":{},"body":{"controllers/OrdersController.html":{}}}],["exist.exception.ts",{"_index":111,"title":{},"body":{"classes/ApplicatonExistException.html":{},"classes/CustomerExistException.html":{},"coverage.html":{}}}],["exist.exception.ts:4",{"_index":113,"title":{},"body":{"classes/ApplicatonExistException.html":{},"classes/CustomerExistException.html":{}}}],["exists.exception.ts",{"_index":947,"title":{},"body":{"classes/PermissionExistsException.html":{},"classes/RoleExistsException.html":{},"classes/UserExistsException.html":{},"coverage.html":{}}}],["exists.exception.ts:4",{"_index":949,"title":{},"body":{"classes/PermissionExistsException.html":{},"classes/RoleExistsException.html":{},"classes/UserExistsException.html":{}}}],["exists.validator.ts",{"_index":693,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["exists.validator.ts:12",{"_index":696,"title":{},"body":{"injectables/IsExist.html":{}}}],["exists.validator.ts:18",{"_index":699,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsNotExist.html":{}}}],["exists.validator.ts:24",{"_index":717,"title":{},"body":{"injectables/IsNotExist.html":{}}}],["expectation_failed",{"_index":1479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expired",{"_index":24,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"classes/RefreshTokenExpiredException.html":{}}}],["expired.exception.ts",{"_index":8,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"classes/RefreshTokenExpiredException.html":{},"coverage.html":{}}}],["expired.exception.ts:4",{"_index":13,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"classes/RefreshTokenExpiredException.html":{}}}],["export",{"_index":19,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplicatonExistException.html":{},"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateOrderDto.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/CustomerExistException.html":{},"interfaces/DefaultPagination.html":{},"classes/DisabledUserException.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/FileFinder.html":{},"classes/ForeignKeyConflictException.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"classes/InvalidTokenException.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"entities/Order.html":{},"classes/OrderMapper.html":{},"classes/OrderResponseDto.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"interfaces/PaginationRequest.html":{},"classes/PaginationResponseDto.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/ResponseDto.html":{},"classes/RoleExistsException.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateOrderDto.html":{},"classes/UserExistsException.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["exports",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"overview.html":{}}}],["express",{"_index":623,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"dependencies.html":{}}}],["expression",{"_index":190,"title":{},"body":{"classes/ClassNameExtractor.html":{}}}],["ext",{"_index":494,"title":{},"body":{"classes/FileFinder.html":{}}}],["extends",{"_index":9,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"classes/ApplicatonExistException.html":{},"classes/Base.html":{},"classes/CustomerExistException.html":{},"classes/DisabledUserException.html":{},"classes/ForeignKeyConflictException.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"classes/InvalidTokenException.html":{},"entities/Order.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/RoleExistsException.html":{},"classes/UpdateOrderDto.html":{},"classes/UserExistsException.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["extension",{"_index":502,"title":{},"body":{"classes/FileFinder.html":{},"dependencies.html":{}}}],["external",{"_index":1296,"title":{},"body":{"index.html":{}}}],["extra",{"_index":1019,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["extract",{"_index":175,"title":{},"body":{"classes/ClassNameExtractor.html":{}}}],["extractclassnames",{"_index":168,"title":{},"body":{"classes/ClassNameExtractor.html":{}}}],["extractclassnames(filepath",{"_index":169,"title":{},"body":{"classes/ClassNameExtractor.html":{}}}],["extractor.ts",{"_index":166,"title":{},"body":{"classes/ClassNameExtractor.html":{},"coverage.html":{}}}],["extractor.ts:5",{"_index":170,"title":{},"body":{"classes/ClassNameExtractor.html":{}}}],["factories",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["failed",{"_index":1249,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["failed_dependency",{"_index":1487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fallback_language",{"_index":305,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["fallbacklanguage",{"_index":396,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["false",{"_index":139,"title":{},"body":{"classes/Base.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/IntegerPrimaryIdEntity.html":{},"entities/Order.html":{},"classes/PaginationResponseDto.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UuidPrimaryIdEntity.html":{},"miscellaneous/variables.html":{}}}],["false})@isoptional",{"_index":315,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["features",{"_index":1287,"title":{},"body":{"index.html":{}}}],["female",{"_index":1225,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fha",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["field",{"_index":935,"title":{},"body":{"interfaces/PaginationRequest.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplicatonExistException.html":{},"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateOrderDto.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/CustomerExistException.html":{},"interfaces/DefaultPagination.html":{},"classes/DisabledUserException.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/FileFinder.html":{},"classes/ForeignKeyConflictException.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"classes/InvalidTokenException.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"entities/Order.html":{},"classes/OrderMapper.html":{},"classes/OrderResponseDto.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"interfaces/PaginationRequest.html":{},"classes/PaginationResponseDto.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/ResponseDto.html":{},"classes/RoleExistsException.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateOrderDto.html":{},"classes/UserExistsException.html":{},"classes/UuidPrimaryIdEntity.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["filefinder",{"_index":489,"title":{"classes/FileFinder.html":{}},"body":{"classes/FileFinder.html":{},"coverage.html":{}}}],["filepath",{"_index":172,"title":{},"body":{"classes/ClassNameExtractor.html":{}}}],["files",{"_index":500,"title":{},"body":{"classes/FileFinder.html":{}}}],["files.concat(filefinder.findfileswithextension(fullpath",{"_index":519,"title":{},"body":{"classes/FileFinder.html":{}}}],["files.push(fullpath",{"_index":524,"title":{},"body":{"classes/FileFinder.html":{}}}],["filescontroller",{"_index":1617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["finally",{"_index":883,"title":{},"body":{"injectables/OrdersService.html":{}}}],["findall",{"_index":1554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findallcustomerproperties",{"_index":1602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findallcustomerpropertiesbycustomerid",{"_index":1603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findallforcustomerproperty",{"_index":1555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findallpayments",{"_index":1556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findallrevenuehead",{"_index":1581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findbyid",{"_index":1605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["finder.ts",{"_index":491,"title":{},"body":{"classes/FileFinder.html":{},"coverage.html":{}}}],["finder.ts:7",{"_index":495,"title":{},"body":{"classes/FileFinder.html":{}}}],["findfileswithextension",{"_index":492,"title":{},"body":{"classes/FileFinder.html":{}}}],["findfileswithextension(dir",{"_index":493,"title":{},"body":{"classes/FileFinder.html":{}}}],["findone",{"_index":712,"title":{},"body":{"injectables/IsExist.html":{},"miscellaneous/variables.html":{}}}],["findoptions",{"_index":1096,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["findoptionswhere",{"_index":1387,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["findproperty",{"_index":1582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["follow",{"_index":1359,"title":{},"body":{"index.html":{}}}],["forbidden",{"_index":1452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbiddenexception",{"_index":680,"title":{},"body":{"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{}}}],["foreign",{"_index":530,"title":{},"body":{"classes/ForeignKeyConflictException.html":{}}}],["foreign_key_conflict",{"_index":1212,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["foreignkeyconflict",{"_index":1211,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["foreignkeyconflictexception",{"_index":525,"title":{"classes/ForeignKeyConflictException.html":{}},"body":{"classes/ForeignKeyConflictException.html":{},"coverage.html":{}}}],["found",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fs",{"_index":173,"title":{},"body":{"classes/ClassNameExtractor.html":{},"classes/FileFinder.html":{}}}],["fs.readdirsync(dir",{"_index":507,"title":{},"body":{"classes/FileFinder.html":{}}}],["fs.readfilesync(filepath",{"_index":180,"title":{},"body":{"classes/ClassNameExtractor.html":{}}}],["full",{"_index":1246,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fullpath",{"_index":513,"title":{},"body":{"classes/FileFinder.html":{}}}],["function",{"_index":174,"title":{},"body":{"classes/ClassNameExtractor.html":{},"classes/FileFinder.html":{},"coverage.html":{}}}],["functions",{"_index":1264,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gateway_timeout",{"_index":1499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gender",{"_index":1165,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["generate",{"_index":1320,"title":{},"body":{"index.html":{}}}],["generate_payment_invoice",{"_index":1227,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["generatecharacters",{"_index":532,"title":{"classes/GenerateCharacters.html":{}},"body":{"classes/GenerateCharacters.html":{},"coverage.html":{}}}],["get('business/:businessid/credit",{"_index":820,"title":{},"body":{"controllers/OrdersController.html":{}}}],["get('business/:businessid/details",{"_index":817,"title":{},"body":{"controllers/OrdersController.html":{}}}],["get()@healthcheck",{"_index":572,"title":{},"body":{"controllers/HealthController.html":{}}}],["getcategories",{"_index":1588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcategorybyid",{"_index":1590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcustomerbyid",{"_index":1533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcustomers",{"_index":1532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getestatebyid",{"_index":1597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getestates",{"_index":1595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gethello",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"miscellaneous/variables.html":{}}}],["getinvoicebyid",{"_index":1545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getinvoiceforproperty",{"_index":1542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getinvoices",{"_index":1537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getinvoicestatistics",{"_index":1539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getorderdetails",{"_index":785,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["getorderdetails(@param('businessid",{"_index":818,"title":{},"body":{"controllers/OrdersController.html":{}}}],["getorderdetails(businessid",{"_index":797,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["getpaymentsascsv",{"_index":1557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getpaymentsaspdf",{"_index":1560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getpermissionbyid",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getpermissions",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getrawone",{"_index":893,"title":{},"body":{"injectables/OrdersService.html":{}}}],["getrepository(repository",{"_index":711,"title":{},"body":{"injectables/IsExist.html":{}}}],["getrevenueheadbyid",{"_index":1567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getrevenueheads",{"_index":1565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getrolebyid",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getroles",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(model",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(paginationresponsedto",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(responsedto",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getstatistics",{"_index":1628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getstatusbyid",{"_index":1608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getstatuses",{"_index":1607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getting",{"_index":1273,"title":{"index.html":{}},"body":{}}],["getuserbyid",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getusers",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["global",{"_index":1056,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gone",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["google",{"_index":360,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["google_cloud",{"_index":359,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["google_pay",{"_index":1245,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["graph",{"_index":1369,"title":{},"body":{"modules.html":{}}}],["handle",{"_index":931,"title":{},"body":{"interfaces/PaginationRequest.html":{}}}],["handles",{"_index":1282,"title":{},"body":{"index.html":{}}}],["handling",{"_index":843,"title":{},"body":{"injectables/OrdersService.html":{}}}],["hashhelper",{"_index":543,"title":{"classes/HashHelper.html":{}},"body":{"classes/HashHelper.html":{},"coverage.html":{}}}],["hasnext",{"_index":915,"title":{},"body":{"classes/Pagination.html":{},"classes/PaginationResponseDto.html":{}}}],["head",{"_index":1568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["header_language",{"_index":306,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["headerlanguage",{"_index":399,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["heads",{"_index":1289,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["health",{"_index":570,"title":{},"body":{"controllers/HealthController.html":{},"miscellaneous/variables.html":{}}}],["health.controller",{"_index":607,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":575,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":576,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":567,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["healthmodule",{"_index":56,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["heap",{"_index":585,"title":{},"body":{"controllers/HealthController.html":{}}}],["hello",{"_index":107,"title":{},"body":{"injectables/AppService.html":{},"miscellaneous/variables.html":{}}}],["heroku",{"_index":356,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["history",{"_index":1294,"title":{},"body":{"index.html":{}}}],["host",{"_index":451,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"classes/HttpExceptionFilter.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["host.switchtohttp",{"_index":626,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["house",{"_index":1615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["housetypes",{"_index":1614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http",{"_index":620,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["http://localhost",{"_index":391,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["http://localhost:3000/api/v1.0/swagger",{"_index":1335,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":1365,"title":{},"body":{"index.html":{}}}],["http_version_not_supported",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httperrortype",{"_index":619,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httperrortype[status",{"_index":630,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpexception",{"_index":615,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["httpexceptionfilter",{"_index":609,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["httpresponseinterceptor",{"_index":635,"title":{"injectables/HttpResponseInterceptor.html":{}},"body":{"injectables/HttpResponseInterceptor.html":{},"coverage.html":{}}}],["https://node",{"_index":1021,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["https://taxes.free.beeceptor.com/log",{"_index":1351,"title":{},"body":{"index.html":{}}}],["httpstatus.unprocessable_entity",{"_index":1635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i_am_a_teapot",{"_index":1481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":211,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/IntegerPrimaryIdEntity.html":{},"injectables/IsNotExist.html":{},"classes/OrderResponseDto.html":{},"injectables/OrdersService.html":{},"classes/UuidPrimaryIdEntity.html":{},"miscellaneous/variables.html":{}}}],["id.entity.ts",{"_index":658,"title":{},"body":{"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{},"coverage.html":{}}}],["id.entity.ts:6",{"_index":661,"title":{},"body":{"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["identifier",{"_index":1046,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":236,"title":{},"body":{"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"injectables/TypeOrmConfigService.html":{}}}],["import",{"_index":14,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplicatonExistException.html":{},"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateOrderDto.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/CustomerExistException.html":{},"classes/DisabledUserException.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/FileFinder.html":{},"classes/ForeignKeyConflictException.html":{},"classes/HashHelper.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"classes/InvalidTokenException.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"entities/Order.html":{},"classes/OrderMapper.html":{},"classes/OrderResponseDto.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"classes/PaginationResponseDto.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/ResponseDto.html":{},"classes/RoleExistsException.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateOrderDto.html":{},"classes/UserExistsException.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["imports",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OrdersModule.html":{}}}],["in_progress",{"_index":1262,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["inactive_user",{"_index":1210,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["inactiveuser",{"_index":1209,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["index",{"_index":31,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateOrderDto.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"interfaces/DefaultPagination.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/FileFinder.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"controllers/HealthController.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/IntegerPrimaryIdEntity.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"entities/Order.html":{},"classes/OrderMapper.html":{},"classes/OrderResponseDto.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"interfaces/PaginationRequest.html":{},"classes/PaginationResponseDto.html":{},"classes/ResponseDto.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UuidPrimaryIdEntity.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["infer",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplicatonExistException.html":{},"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateOrderDto.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/CustomerExistException.html":{},"interfaces/DefaultPagination.html":{},"classes/DisabledUserException.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/FileFinder.html":{},"classes/ForeignKeyConflictException.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"classes/InvalidTokenException.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"entities/Order.html":{},"classes/OrderMapper.html":{},"classes/OrderResponseDto.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"interfaces/PaginationRequest.html":{},"classes/PaginationResponseDto.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/ResponseDto.html":{},"classes/RoleExistsException.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateOrderDto.html":{},"classes/UserExistsException.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["inherited",{"_index":662,"title":{},"body":{"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["initiate",{"_index":1621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initiated",{"_index":1261,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["inject",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":103,"title":{"injectables/AppService.html":{},"injectables/HttpResponseInterceptor.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"injectables/OrdersService.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{}},"body":{"injectables/AppService.html":{},"injectables/HttpResponseInterceptor.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"injectables/OrdersService.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"coverage.html":{}}}],["injectables",{"_index":104,"title":{},"body":{"injectables/AppService.html":{},"injectables/HttpResponseInterceptor.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"injectables/OrdersService.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"overview.html":{}}}],["injectdatasource",{"_index":703,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsNotExist.html":{}}}],["injectmodel",{"_index":861,"title":{},"body":{"injectables/OrdersService.html":{}}}],["injectmodel('order",{"_index":866,"title":{},"body":{"injectables/OrdersService.html":{}}}],["injectrepository",{"_index":860,"title":{},"body":{"injectables/OrdersService.html":{}}}],["injectrepository(order",{"_index":865,"title":{},"body":{"injectables/OrdersService.html":{}}}],["installcompile",{"_index":1302,"title":{},"body":{"index.html":{}}}],["instancetoplain",{"_index":154,"title":{},"body":{"classes/Base.html":{}}}],["instancetoplain(this",{"_index":163,"title":{},"body":{"classes/Base.html":{}}}],["integer",{"_index":660,"title":{},"body":{"classes/IntegerPrimaryIdEntity.html":{}}}],["integerprimaryidentity",{"_index":656,"title":{"classes/IntegerPrimaryIdEntity.html":{}},"body":{"classes/IntegerPrimaryIdEntity.html":{},"coverage.html":{}}}],["integration",{"_index":1348,"title":{},"body":{"index.html":{}}}],["intended",{"_index":918,"title":{},"body":{"interfaces/PaginationRequest.html":{},"miscellaneous/variables.html":{}}}],["intercept",{"_index":637,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{},"injectables/LoggingInterceptor.html":{}}}],["intercept(context",{"_index":638,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{},"injectables/LoggingInterceptor.html":{}}}],["interface",{"_index":278,"title":{"interfaces/DefaultPagination.html":{},"interfaces/PaginationRequest.html":{}},"body":{"interfaces/DefaultPagination.html":{},"interfaces/PaginationRequest.html":{},"coverage.html":{}}}],["interfaces",{"_index":280,"title":{},"body":{"interfaces/DefaultPagination.html":{},"classes/Pagination.html":{},"interfaces/PaginationRequest.html":{},"overview.html":{}}}],["internal_server_error",{"_index":1491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["internalservererrorexception",{"_index":859,"title":{},"body":{"injectables/OrdersService.html":{}}}],["internalservererrorexception('error",{"_index":882,"title":{},"body":{"injectables/OrdersService.html":{}}}],["interval.unit.ts",{"_index":1178,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid",{"_index":676,"title":{},"body":{"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{}}}],["invalid_credentials",{"_index":1206,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid_current_password",{"_index":1204,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid_current_pin",{"_index":1220,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid_token",{"_index":1192,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalidcredentials",{"_index":1205,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalidcredentialsexception",{"_index":671,"title":{"classes/InvalidCredentialsException.html":{}},"body":{"classes/InvalidCredentialsException.html":{},"coverage.html":{}}}],["invalidcurrentpassword",{"_index":1203,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalidcurrentpasswordexception",{"_index":678,"title":{"classes/InvalidCurrentPasswordException.html":{}},"body":{"classes/InvalidCurrentPasswordException.html":{},"coverage.html":{}}}],["invalidcurrentpin",{"_index":1219,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalidcurrentpinexception",{"_index":683,"title":{"classes/InvalidCurrentPinException.html":{}},"body":{"classes/InvalidCurrentPinException.html":{},"coverage.html":{}}}],["invalidtoken",{"_index":1191,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalidtokenexception",{"_index":687,"title":{"classes/InvalidTokenException.html":{}},"body":{"classes/InvalidTokenException.html":{},"coverage.html":{}}}],["inventory",{"_index":1275,"title":{},"body":{"index.html":{}}}],["invoice",{"_index":1538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invoicecontroller",{"_index":1536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invoices",{"_index":1313,"title":{},"body":{"index.html":{}}}],["isboolean",{"_index":442,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["isboolean()@isoptional",{"_index":433,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["isenum",{"_index":335,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["isenum(environment",{"_index":367,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["isenum(environment)@isoptional",{"_index":324,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["isexist",{"_index":691,"title":{"injectables/IsExist.html":{}},"body":{"injectables/IsExist.html":{},"coverage.html":{}}}],["isglobal",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":336,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{}}}],["isint()@isoptional",{"_index":427,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["isint()@min(0)@max(65535)@isoptional",{"_index":326,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{}}}],["isnotempty",{"_index":223,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["isnotexist",{"_index":716,"title":{"injectables/IsNotExist.html":{}},"body":{"injectables/IsNotExist.html":{},"coverage.html":{}}}],["isnumber",{"_index":224,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["isoptional",{"_index":337,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{}}}],["isstring",{"_index":225,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{}}}],["isstring()@isoptional",{"_index":312,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{}}}],["isurl",{"_index":338,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["isurl({require_tld",{"_index":314,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["isuuid",{"_index":226,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["it's",{"_index":516,"title":{},"body":{"classes/FileFinder.html":{},"interfaces/PaginationRequest.html":{}}}],["items",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jobtype",{"_index":1167,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["join",{"_index":1644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keepconnectionalive",{"_index":1005,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["key",{"_index":272,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/ForeignKeyConflictException.html":{},"injectables/TypeOrmConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["kubernetes",{"_index":354,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["lang",{"_index":403,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["last",{"_index":1316,"title":{},"body":{"index.html":{}}}],["latter",{"_index":926,"title":{},"body":{"interfaces/PaginationRequest.html":{}}}],["legend",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"overview.html":{}}}],["length",{"_index":538,"title":{},"body":{"classes/GenerateCharacters.html":{}}}],["length_required",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lga",{"_index":1577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lgascontroller",{"_index":1576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["license",{"_index":1374,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":908,"title":{},"body":{"classes/Pagination.html":{},"interfaces/PaginationRequest.html":{},"miscellaneous/variables.html":{}}}],["linode",{"_index":365,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["list",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["literal",{"_index":922,"title":{},"body":{"interfaces/PaginationRequest.html":{},"miscellaneous/typealiases.html":{}}}],["load",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["local",{"_index":350,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["log",{"_index":985,"title":{},"body":{"injectables/TaxService.html":{},"index.html":{}}}],["logged",{"_index":979,"title":{},"body":{"injectables/TaxService.html":{}}}],["logger",{"_index":727,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"injectables/OrdersService.html":{}}}],["logger(logginginterceptor.name",{"_index":730,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["logger(ordersservice.name",{"_index":858,"title":{},"body":{"injectables/OrdersService.html":{}}}],["logging",{"_index":1006,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["logginginterceptor",{"_index":725,"title":{"injectables/LoggingInterceptor.html":{}},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["login",{"_index":299,"title":{},"body":{"classes/DisabledUserException.html":{}}}],["logs",{"_index":975,"title":{},"body":{"injectables/TaxService.html":{},"index.html":{}}}],["logtaxdata",{"_index":967,"title":{},"body":{"injectables/TaxService.html":{}}}],["logtaxdata(createorderdto",{"_index":973,"title":{},"body":{"injectables/TaxService.html":{}}}],["loop",{"_index":509,"title":{},"body":{"classes/FileFinder.html":{}}}],["lowercasetransformer",{"_index":1089,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mailconfig",{"_index":1113,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["male",{"_index":1224,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["management",{"_index":1276,"title":{},"body":{"index.html":{}}}],["map",{"_index":649,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{}}}],["map((payload",{"_index":654,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{}}}],["match",{"_index":185,"title":{},"body":{"classes/ClassNameExtractor.html":{}}}],["matching",{"_index":26,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplicatonExistException.html":{},"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateOrderDto.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/CustomerExistException.html":{},"interfaces/DefaultPagination.html":{},"classes/DisabledUserException.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/FileFinder.html":{},"classes/ForeignKeyConflictException.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"classes/InvalidTokenException.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"entities/Order.html":{},"classes/OrderMapper.html":{},"classes/OrderResponseDto.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"interfaces/PaginationRequest.html":{},"classes/PaginationResponseDto.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/ResponseDto.html":{},"classes/RoleExistsException.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateOrderDto.html":{},"classes/UserExistsException.html":{},"classes/UuidPrimaryIdEntity.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.floor(+skip",{"_index":1508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["math.floor(totalrecords",{"_index":912,"title":{},"body":{"classes/Pagination.html":{}}}],["math.min(100",{"_index":897,"title":{},"body":{"injectables/OrdersService.html":{}}}],["math.random",{"_index":540,"title":{},"body":{"classes/GenerateCharacters.html":{}}}],["max",{"_index":339,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["max(65535",{"_index":369,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{}}}],["maxallowedsize",{"_index":291,"title":{},"body":{"interfaces/DefaultPagination.html":{},"miscellaneous/variables.html":{}}}],["maxconnections",{"_index":463,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["maybetype",{"_index":1098,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["memory",{"_index":592,"title":{},"body":{"controllers/HealthController.html":{}}}],["memoryhealthindicator",{"_index":577,"title":{},"body":{"controllers/HealthController.html":{}}}],["message",{"_index":22,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"classes/ApplicatonExistException.html":{},"classes/CustomerExistException.html":{},"classes/DisabledUserException.html":{},"classes/ForeignKeyConflictException.html":{},"classes/HttpExceptionFilter.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/RoleExistsException.html":{},"classes/UserExistsException.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":1147,"title":{},"body":{"dependencies.html":{}}}],["method.enum.ts",{"_index":1171,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["method_not_allowed",{"_index":1456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["methods",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/FileFinder.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"controllers/HealthController.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/IntegerPrimaryIdEntity.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"classes/OrderMapper.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["microservice",{"_index":1279,"title":{},"body":{"index.html":{}}}],["migration",{"_index":1308,"title":{},"body":{"index.html":{}}}],["migration:create",{"_index":1311,"title":{},"body":{"index.html":{}}}],["migration:generate",{"_index":1321,"title":{},"body":{"index.html":{}}}],["migration:revert",{"_index":1317,"title":{},"body":{"index.html":{}}}],["migration:run",{"_index":1314,"title":{},"body":{"index.html":{}}}],["migration:show",{"_index":1319,"title":{},"body":{"index.html":{}}}],["migrationinterface",{"_index":237,"title":{},"body":{"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{}}}],["migrations",{"_index":1010,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["migrations/**/*{.ts,.js",{"_index":1011,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["migrationsdir",{"_index":1015,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["min",{"_index":340,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{}}}],["min(0",{"_index":368,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{}}}],["miscellaneous",{"_index":1157,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misdirected",{"_index":1483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mobile_money",{"_index":1242,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mock",{"_index":1353,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1305,"title":{},"body":{"index.html":{}}}],["model",{"_index":836,"title":{},"body":{"injectables/OrdersService.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":44,"title":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OrdersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OrdersModule.html":{},"overview.html":{}}}],["modules",{"_index":46,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OrdersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/orders/dto/create",{"_index":863,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/TaxService.html":{}}}],["modules/orders/dto/order",{"_index":757,"title":{},"body":{"classes/OrderMapper.html":{},"controllers/OrdersController.html":{}}}],["modules/orders/entities/order.entity",{"_index":759,"title":{},"body":{"classes/OrderMapper.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{}}}],["modules/orders/order.mapper",{"_index":864,"title":{},"body":{"injectables/OrdersService.html":{}}}],["modules/orders/orders.module",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/orders/schemas/order.schema",{"_index":829,"title":{},"body":{"modules/OrdersModule.html":{},"injectables/OrdersService.html":{}}}],["modules/orders/tax.service",{"_index":830,"title":{},"body":{"modules/OrdersModule.html":{},"injectables/OrdersService.html":{}}}],["mongo_url",{"_index":477,"title":{},"body":{"classes/EnvironmentVariablesValidator-2.html":{}}}],["mongoconfig",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["mongodb",{"_index":481,"title":{},"body":{"classes/EnvironmentVariablesValidator-2.html":{},"index.html":{}}}],["mongoose",{"_index":840,"title":{},"body":{"injectables/OrdersService.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":832,"title":{},"body":{"modules/OrdersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["month",{"_index":1254,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["more",{"_index":589,"title":{},"body":{"controllers/HealthController.html":{}}}],["name",{"_index":159,"title":{},"body":{"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/CustomerExistException.html":{},"classes/DisabledUserException.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/FileFinder.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/IntegerPrimaryIdEntity.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"entities/Order.html":{},"classes/OrderMapper.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"classes/PermissionExistsException.html":{},"classes/RoleExistsException.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UserExistsException.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":176,"title":{},"body":{"classes/ClassNameExtractor.html":{}}}],["naming.ts",{"_index":1085,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["navigate",{"_index":1364,"title":{},"body":{"index.html":{}}}],["needed",{"_index":930,"title":{},"body":{"interfaces/PaginationRequest.html":{}}}],["nestinterceptor",{"_index":646,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{},"injectables/LoggingInterceptor.html":{}}}],["nestjs/common",{"_index":16,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplicatonExistException.html":{},"classes/CustomerExistException.html":{},"classes/DisabledUserException.html":{},"classes/ForeignKeyConflictException.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"classes/InvalidTokenException.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/RoleExistsException.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UserExistsException.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"controllers/HealthController.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1132,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1134,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":222,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/HealthController.html":{},"classes/OrderResponseDto.html":{},"controllers/OrdersController.html":{},"classes/PaginationResponseDto.html":{},"classes/ResponseDto.html":{},"classes/UpdateOrderDto.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":578,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"injectables/TypeOrmConfigService.html":{},"dependencies.html":{}}}],["never",{"_index":1388,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["never.type.ts",{"_index":1102,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["new",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"classes/OrderMapper.html":{},"injectables/OrdersService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":640,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{},"injectables/LoggingInterceptor.html":{}}}],["next.handle().pipe",{"_index":653,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{},"injectables/LoggingInterceptor.html":{}}}],["node_env",{"_index":307,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["nodeenv",{"_index":373,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["not_acceptable",{"_index":1458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["not_expecting_response",{"_index":1229,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["not_found",{"_index":1454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["not_implemented",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["note",{"_index":1352,"title":{},"body":{"index.html":{}}}],["now",{"_index":148,"title":{},"body":{"classes/Base.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/IntegerPrimaryIdEntity.html":{},"injectables/LoggingInterceptor.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["now}ms",{"_index":737,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["npm",{"_index":1301,"title":{},"body":{"index.html":{}}}],["null",{"_index":187,"title":{},"body":{"classes/ClassNameExtractor.html":{},"classes/CreateTableForOrders1730365329511.html":{},"miscellaneous/typealiases.html":{}}}],["nullable",{"_index":140,"title":{},"body":{"classes/Base.html":{},"classes/IntegerPrimaryIdEntity.html":{},"entities/Order.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["nullabletype",{"_index":1100,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":200,"title":{},"body":{"classes/CreateOrderDto.html":{},"interfaces/DefaultPagination.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"classes/IntegerPrimaryIdEntity.html":{},"injectables/IsNotExist.html":{},"entities/Order.html":{},"classes/OrderResponseDto.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"interfaces/PaginationRequest.html":{},"classes/PaginationResponseDto.html":{},"classes/ResponseDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["numeric",{"_index":268,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{}}}],["object",{"_index":849,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/TaxService.html":{},"miscellaneous/variables.html":{}}}],["object.values",{"_index":1642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":645,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{},"injectables/LoggingInterceptor.html":{}}}],["ocean",{"_index":364,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["of(undefined",{"_index":901,"title":{},"body":{"classes/Pagination.html":{}}}],["onupdate",{"_index":147,"title":{},"body":{"classes/Base.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["open",{"_index":1362,"title":{},"body":{"index.html":{}}}],["openpropertypaymentcontroller",{"_index":1580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["openshift",{"_index":355,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["operations",{"_index":846,"title":{},"body":{"injectables/OrdersService.html":{}}}],["option",{"_index":1550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["option.enum.ts",{"_index":1173,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["optional",{"_index":123,"title":{},"body":{"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/CustomerExistException.html":{},"interfaces/DefaultPagination.html":{},"classes/DisabledUserException.html":{},"classes/FileFinder.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/IntegerPrimaryIdEntity.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"classes/OrderMapper.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"interfaces/PaginationRequest.html":{},"classes/PermissionExistsException.html":{},"classes/RoleExistsException.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UserExistsException.html":{},"classes/UuidPrimaryIdEntity.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["options.ts",{"_index":1108,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["options.type.ts",{"_index":1095,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["order",{"_index":229,"title":{"entities/Order.html":{}},"body":{"classes/CreateOrderDto.html":{},"entities/Order.html":{},"classes/OrderMapper.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"interfaces/PaginationRequest.html":{},"injectables/TaxService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["order'})@apiglobalresponse(orderresponsedto)@apiconflictresponse({description",{"_index":794,"title":{},"body":{"controllers/OrdersController.html":{}}}],["order'})@isnotempty()@isnumber",{"_index":204,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order'})@isnotempty()@isstring",{"_index":219,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order'})@isuuid()@isnotempty",{"_index":214,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto",{"_index":806,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"injectables/TaxService.html":{},"classes/UpdateOrderDto.html":{}}}],["order.dto.ts",{"_index":195,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["order.dto.ts:11",{"_index":215,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:19",{"_index":217,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:27",{"_index":205,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:35",{"_index":220,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["orderby",{"_index":1414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orderdirection",{"_index":1416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orderdocument",{"_index":862,"title":{},"body":{"injectables/OrdersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["orderentity",{"_index":871,"title":{},"body":{"injectables/OrdersService.html":{}}}],["ordermapper",{"_index":751,"title":{"classes/OrderMapper.html":{}},"body":{"classes/OrderMapper.html":{},"injectables/OrdersService.html":{},"coverage.html":{}}}],["ordermapper.todto(order",{"_index":877,"title":{},"body":{"injectables/OrdersService.html":{}}}],["ordermodel",{"_index":835,"title":{},"body":{"injectables/OrdersService.html":{}}}],["orderrepository",{"_index":839,"title":{},"body":{"injectables/OrdersService.html":{}}}],["orderresponsedto",{"_index":756,"title":{"classes/OrderResponseDto.html":{}},"body":{"classes/OrderMapper.html":{},"classes/OrderResponseDto.html":{},"controllers/OrdersController.html":{},"coverage.html":{}}}],["orders",{"_index":750,"title":{},"body":{"entities/Order.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"index.html":{}}}],["orders.controller",{"_index":827,"title":{},"body":{"modules/OrdersModule.html":{}}}],["orders.length",{"_index":898,"title":{},"body":{"injectables/OrdersService.html":{}}}],["orders.service",{"_index":804,"title":{},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{}}}],["orders.ts",{"_index":253,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{},"coverage.html":{}}}],["orders.ts:15",{"_index":256,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{}}}],["orders.ts:4",{"_index":255,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{}}}],["orders.ts:6",{"_index":257,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{}}}],["orders/:businessid/credit",{"_index":1346,"title":{},"body":{"index.html":{}}}],["orders/:businessid/details",{"_index":1342,"title":{},"body":{"index.html":{}}}],["orderschema",{"_index":828,"title":{},"body":{"modules/OrdersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["orderscontroller",{"_index":781,"title":{"controllers/OrdersController.html":{}},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"coverage.html":{}}}],["ordersmodule",{"_index":57,"title":{"modules/OrdersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"modules.html":{},"overview.html":{}}}],["ordersservice",{"_index":803,"title":{"injectables/OrdersService.html":{}},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"coverage.html":{},"overview.html":{}}}],["ornevertype",{"_index":1103,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["out",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"overview.html":{}}}],["overview",{"_index":1370,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1129,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":909,"title":{},"body":{"classes/Pagination.html":{},"interfaces/PaginationRequest.html":{},"miscellaneous/variables.html":{}}}],["paginated",{"_index":920,"title":{},"body":{"interfaces/PaginationRequest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pagination",{"_index":285,"title":{"classes/Pagination.html":{}},"body":{"interfaces/DefaultPagination.html":{},"classes/Pagination.html":{},"interfaces/PaginationRequest.html":{},"coverage.html":{}}}],["pagination.interface.ts",{"_index":282,"title":{},"body":{"interfaces/DefaultPagination.html":{},"coverage.html":{}}}],["paginationparams",{"_index":1079,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["paginationrequest",{"_index":902,"title":{"interfaces/PaginationRequest.html":{}},"body":{"classes/Pagination.html":{},"interfaces/PaginationRequest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["paginationresponsedto",{"_index":907,"title":{"classes/PaginationResponseDto.html":{}},"body":{"classes/Pagination.html":{},"classes/PaginationResponseDto.html":{},"coverage.html":{}}}],["paid",{"_index":1248,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["param",{"_index":563,"title":{},"body":{"classes/HashHelper.html":{},"injectables/HttpResponseInterceptor.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"injectables/TaxService.html":{}}}],["parameters",{"_index":171,"title":{},"body":{"classes/ClassNameExtractor.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/CustomerExistException.html":{},"interfaces/DefaultPagination.html":{},"classes/DisabledUserException.html":{},"classes/FileFinder.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"classes/OrderMapper.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"classes/PermissionExistsException.html":{},"classes/RoleExistsException.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UserExistsException.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["params",{"_index":921,"title":{},"body":{"interfaces/PaginationRequest.html":{},"miscellaneous/variables.html":{}}}],["params.decorator.ts",{"_index":1078,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["params.value?.tolowercase().trim",{"_index":1503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parseint(process.env.database_max_connections",{"_index":465,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/variables.html":{}}}],["parseint(process.env.database_port",{"_index":454,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/variables.html":{}}}],["parseint(process.env.port",{"_index":382,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["partial",{"_index":1247,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["partialtype",{"_index":1036,"title":{},"body":{"classes/UpdateOrderDto.html":{}}}],["partialtype(createorderdto",{"_index":1035,"title":{},"body":{"classes/UpdateOrderDto.html":{}}}],["password",{"_index":456,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"classes/InvalidCurrentPasswordException.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["password.exception.ts",{"_index":679,"title":{},"body":{"classes/InvalidCurrentPasswordException.html":{},"coverage.html":{}}}],["password.exception.ts:4",{"_index":681,"title":{},"body":{"classes/InvalidCurrentPasswordException.html":{}}}],["path",{"_index":497,"title":{},"body":{"classes/FileFinder.html":{},"controllers/HealthController.html":{},"controllers/OrdersController.html":{}}}],["path.join(dir",{"_index":514,"title":{},"body":{"classes/FileFinder.html":{}}}],["pathtoproperty",{"_index":707,"title":{},"body":{"injectables/IsExist.html":{}}}],["payload",{"_index":655,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{},"classes/ResponseDto.html":{},"miscellaneous/variables.html":{}}}],["payload:response",{"_index":652,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{}}}],["payload_too_large",{"_index":1471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["payloadsize",{"_index":939,"title":{},"body":{"classes/PaginationResponseDto.html":{}}}],["payment",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["payment_required",{"_index":1450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["payment_verification_failed",{"_index":1222,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["paymentmethod",{"_index":1169,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["paymentoptionenum",{"_index":1172,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["payments",{"_index":1558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paymentscallback",{"_index":1624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paymentscontroller",{"_index":1553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paymentstatus",{"_index":1174,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["paymentverificationfailed",{"_index":1221,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pdf",{"_index":1561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pending",{"_index":218,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateTableForOrders1730365329511.html":{},"entities/Order.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["permission",{"_index":953,"title":{},"body":{"classes/PermissionExistsException.html":{},"miscellaneous/variables.html":{}}}],["permission_exists",{"_index":1198,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["permissionexists",{"_index":1197,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["permissionexistsexception",{"_index":945,"title":{"classes/PermissionExistsException.html":{}},"body":{"classes/PermissionExistsException.html":{},"coverage.html":{}}}],["permissionscontroller",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pg",{"_index":1144,"title":{},"body":{"dependencies.html":{}}}],["pgforeignkeyconstraintviolation",{"_index":1186,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pgnotnullconstraintviolation",{"_index":1184,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pguniqueconstraintviolation",{"_index":1188,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["phonenumberserializer",{"_index":1059,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["pin",{"_index":535,"title":{},"body":{"classes/GenerateCharacters.html":{},"classes/InvalidCurrentPinException.html":{}}}],["pin(length",{"_index":536,"title":{},"body":{"classes/GenerateCharacters.html":{}}}],["pk_710e2d4957aa5878dfe94e4ac2f",{"_index":270,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{}}}],["plain",{"_index":555,"title":{},"body":{"classes/HashHelper.html":{}}}],["pool",{"_index":1024,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["port",{"_index":308,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":800,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/TaxService.html":{},"index.html":{}}}],["postgres",{"_index":1290,"title":{},"body":{"index.html":{}}}],["postgres.com/api/pool",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgres.com/apis/pool",{"_index":1022,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["precondition_failed",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":569,"title":{},"body":{"controllers/HealthController.html":{}}}],["primary",{"_index":271,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{},"coverage.html":{}}}],["primarygeneratedcolumn",{"_index":669,"title":{},"body":{"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":1043,"title":{},"body":{"classes/UuidPrimaryIdEntity.html":{}}}],["primarygeneratedcolumn({name",{"_index":659,"title":{},"body":{"classes/IntegerPrimaryIdEntity.html":{}}}],["private",{"_index":545,"title":{},"body":{"classes/HashHelper.html":{},"controllers/HealthController.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"injectables/OrdersService.html":{}}}],["process",{"_index":588,"title":{},"body":{"controllers/HealthController.html":{}}}],["process.cwd",{"_index":388,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["process.env.api_prefix",{"_index":394,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["process.env.backend_domain",{"_index":390,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["process.env.database_ca",{"_index":471,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_cert",{"_index":474,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_host",{"_index":452,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_key",{"_index":472,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_max_connections",{"_index":464,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_name",{"_index":458,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_password",{"_index":457,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_port",{"_index":453,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_reject_unauthorized",{"_index":469,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_ssl_enabled",{"_index":467,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_synchronize",{"_index":462,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_type",{"_index":450,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_url",{"_index":449,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_username",{"_index":460,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/variables.html":{}}}],["process.env.description",{"_index":378,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["process.env.domain",{"_index":392,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["process.env.fallback_language",{"_index":397,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["process.env.header_language",{"_index":400,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["process.env.key",{"_index":385,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["process.env.mongo_url",{"_index":482,"title":{},"body":{"classes/EnvironmentVariablesValidator-2.html":{}}}],["process.env.name",{"_index":376,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["process.env.node_env",{"_index":374,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/variables.html":{}}}],["process.env.port",{"_index":381,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["process.env.storage_path",{"_index":405,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["process.env.tax_url",{"_index":488,"title":{},"body":{"classes/EnvironmentVariablesValidator-3.html":{}}}],["process.env.version",{"_index":379,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["process.env.working_directory",{"_index":387,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["production",{"_index":344,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1299,"title":{},"body":{"index.html":{}}}],["promise",{"_index":244,"title":{},"body":{"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/HashHelper.html":{},"injectables/TaxService.html":{}}}],["properties",{"_index":122,"title":{"properties.html":{}},"body":{"classes/Base.html":{},"classes/CreateOrderDto.html":{},"classes/CreateTableForOrders1730365329511.html":{},"interfaces/DefaultPagination.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/HashHelper.html":{},"classes/IntegerPrimaryIdEntity.html":{},"injectables/LoggingInterceptor.html":{},"entities/Order.html":{},"classes/OrderResponseDto.html":{},"injectables/OrdersService.html":{},"interfaces/PaginationRequest.html":{},"classes/PaginationResponseDto.html":{},"classes/ResponseDto.html":{},"classes/UuidPrimaryIdEntity.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["propertiescontroller",{"_index":1601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["property",{"_index":1543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["property_already_allocated",{"_index":1216,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["propertyalreadyallocated",{"_index":1215,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["propertydecorator",{"_index":1268,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provided",{"_index":554,"title":{},"body":{"classes/HashHelper.html":{}}}],["providers",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"overview.html":{}}}],["provision",{"_index":346,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["proxy_authentication_required",{"_index":1460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":238,"title":{},"body":{"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/HashHelper.html":{}}}],["purchase",{"_index":1613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["purchase_request",{"_index":1544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["purpose",{"_index":925,"title":{},"body":{"interfaces/PaginationRequest.html":{}}}],["qa",{"_index":347,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["qr_code",{"_index":1236,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["quarter",{"_index":1255,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["query",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queryrunner",{"_index":242,"title":{},"body":{"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"injectables/OrdersService.html":{}}}],["queryrunner.committransaction",{"_index":876,"title":{},"body":{"injectables/OrdersService.html":{}}}],["queryrunner.connect",{"_index":868,"title":{},"body":{"injectables/OrdersService.html":{}}}],["queryrunner.createschema('sale",{"_index":248,"title":{},"body":{"classes/CreateSchemaForSales1730363889037.html":{}}}],["queryrunner.dropschema('sale",{"_index":249,"title":{},"body":{"classes/CreateSchemaForSales1730363889037.html":{}}}],["queryrunner.manager.save(orderentity",{"_index":873,"title":{},"body":{"injectables/OrdersService.html":{}}}],["queryrunner.query",{"_index":258,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{}}}],["queryrunner.query(`drop",{"_index":273,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{}}}],["queryrunner.release",{"_index":884,"title":{},"body":{"injectables/OrdersService.html":{}}}],["queryrunner.rollbacktransaction",{"_index":878,"title":{},"body":{"injectables/OrdersService.html":{}}}],["queryrunner.starttransaction",{"_index":869,"title":{},"body":{"injectables/OrdersService.html":{}}}],["readonly",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"injectables/LoggingInterceptor.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["record",{"_index":1270,"title":{},"body":{"miscellaneous/functions.html":{}}}],["records",{"_index":928,"title":{},"body":{"interfaces/PaginationRequest.html":{}}}],["recurringintervalunit",{"_index":1176,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["recursively",{"_index":498,"title":{},"body":{"classes/FileFinder.html":{}}}],["ref",{"_index":1403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reflect",{"_index":1146,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":957,"title":{},"body":{"classes/RefreshTokenExpiredException.html":{}}}],["refresh_token_expired",{"_index":1196,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["refreshtokenexpired",{"_index":1195,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["refreshtokenexpiredexception",{"_index":954,"title":{"classes/RefreshTokenExpiredException.html":{}},"body":{"classes/RefreshTokenExpiredException.html":{},"coverage.html":{}}}],["refunded",{"_index":1250,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["regexpexecarray",{"_index":186,"title":{},"body":{"classes/ClassNameExtractor.html":{}}}],["registeras",{"_index":331,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{}}}],["registeras('app",{"_index":371,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["registeras('database",{"_index":447,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["registeras('mongo",{"_index":480,"title":{},"body":{"classes/EnvironmentVariablesValidator-2.html":{}}}],["registeras('tax",{"_index":487,"title":{},"body":{"classes/EnvironmentVariablesValidator-3.html":{}}}],["registered",{"_index":1285,"title":{},"body":{"index.html":{}}}],["registers",{"_index":1337,"title":{},"body":{"index.html":{}}}],["regular",{"_index":189,"title":{},"body":{"classes/ClassNameExtractor.html":{}}}],["regulatory",{"_index":1298,"title":{},"body":{"index.html":{}}}],["reject",{"_index":1630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rejectunauthorized",{"_index":468,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["related",{"_index":845,"title":{},"body":{"injectables/OrdersService.html":{}}}],["remita",{"_index":1243,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["remove",{"_index":1563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["removecategory",{"_index":1593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["removeestate",{"_index":1600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["removerevenuehead",{"_index":1571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["removestatus",{"_index":1611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repository",{"_index":705,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/OrdersService.html":{}}}],["represents",{"_index":927,"title":{},"body":{"interfaces/PaginationRequest.html":{}}}],["request",{"_index":643,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{},"injectables/TaxService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["request.interface.ts",{"_index":917,"title":{},"body":{"interfaces/PaginationRequest.html":{},"coverage.html":{}}}],["request_timeout",{"_index":1462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requested_range_not_satisfiable",{"_index":1477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestforpaymentcontroller",{"_index":1562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requesting",{"_index":919,"title":{},"body":{"interfaces/PaginationRequest.html":{}}}],["require",{"_index":1355,"title":{},"body":{"index.html":{}}}],["require_tld",{"_index":370,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["required",{"_index":1415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"overview.html":{}}}],["resolves",{"_index":978,"title":{},"body":{"injectables/TaxService.html":{}}}],["response",{"_index":622,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/Pagination.html":{},"classes/ResponseDto.html":{},"injectables/TaxService.html":{},"index.html":{}}}],["response.decorador.ts",{"_index":1075,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["response.decorators.ts",{"_index":1057,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["response.dto",{"_index":758,"title":{},"body":{"classes/OrderMapper.html":{},"controllers/OrdersController.html":{},"classes/Pagination.html":{}}}],["response.dto.ts",{"_index":774,"title":{},"body":{"classes/OrderResponseDto.html":{},"classes/PaginationResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:11",{"_index":778,"title":{},"body":{"classes/OrderResponseDto.html":{},"classes/PaginationResponseDto.html":{}}}],["response.dto.ts:13",{"_index":941,"title":{},"body":{"classes/PaginationResponseDto.html":{}}}],["response.dto.ts:14",{"_index":775,"title":{},"body":{"classes/OrderResponseDto.html":{}}}],["response.dto.ts:15",{"_index":942,"title":{},"body":{"classes/PaginationResponseDto.html":{}}}],["response.dto.ts:17",{"_index":780,"title":{},"body":{"classes/OrderResponseDto.html":{},"classes/PaginationResponseDto.html":{}}}],["response.dto.ts:20",{"_index":777,"title":{},"body":{"classes/OrderResponseDto.html":{}}}],["response.dto.ts:5",{"_index":779,"title":{},"body":{"classes/OrderResponseDto.html":{},"classes/PaginationResponseDto.html":{}}}],["response.dto.ts:7",{"_index":943,"title":{},"body":{"classes/PaginationResponseDto.html":{}}}],["response.dto.ts:8",{"_index":776,"title":{},"body":{"classes/OrderResponseDto.html":{}}}],["response.dto.ts:9",{"_index":944,"title":{},"body":{"classes/PaginationResponseDto.html":{}}}],["response.status(status).json",{"_index":632,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["response:example",{"_index":1345,"title":{},"body":{"index.html":{}}}],["responsedto",{"_index":647,"title":{"classes/ResponseDto.html":{}},"body":{"injectables/HttpResponseInterceptor.html":{},"classes/ResponseDto.html":{},"coverage.html":{}}}],["results",{"_index":25,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplicatonExistException.html":{},"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateOrderDto.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/CustomerExistException.html":{},"interfaces/DefaultPagination.html":{},"classes/DisabledUserException.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/FileFinder.html":{},"classes/ForeignKeyConflictException.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"classes/InvalidTokenException.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"entities/Order.html":{},"classes/OrderMapper.html":{},"classes/OrderResponseDto.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"interfaces/PaginationRequest.html":{},"classes/PaginationResponseDto.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/ResponseDto.html":{},"classes/RoleExistsException.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateOrderDto.html":{},"classes/UserExistsException.html":{},"classes/UuidPrimaryIdEntity.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":1341,"title":{},"body":{"index.html":{}}}],["retrieves",{"_index":856,"title":{},"body":{"injectables/OrdersService.html":{},"index.html":{}}}],["retrieving",{"_index":894,"title":{},"body":{"injectables/OrdersService.html":{}}}],["return",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/FileFinder.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"controllers/HealthController.html":{},"injectables/HttpResponseInterceptor.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"classes/OrderMapper.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/FileFinder.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"controllers/HealthController.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/IntegerPrimaryIdEntity.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"classes/OrderMapper.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UuidPrimaryIdEntity.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["revenue",{"_index":1566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["revenueheadscontroller",{"_index":1564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["revert",{"_index":1315,"title":{},"body":{"index.html":{}}}],["rimraf",{"_index":1149,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":965,"title":{},"body":{"classes/RoleExistsException.html":{},"miscellaneous/variables.html":{}}}],["role_exists",{"_index":1200,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["roleexists",{"_index":1199,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["roleexistsexception",{"_index":962,"title":{"classes/RoleExistsException.html":{}},"body":{"classes/RoleExistsException.html":{},"coverage.html":{}}}],["rolescontroller",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routenaming",{"_index":1086,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["rss",{"_index":591,"title":{},"body":{"controllers/HealthController.html":{}}}],["run",{"_index":1303,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":651,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":650,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{},"injectables/LoggingInterceptor.html":{}}}],["sale",{"_index":749,"title":{},"body":{"entities/Order.html":{}}}],["sale\".\"orders",{"_index":263,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{}}}],["sale\".\"orders_status_enum",{"_index":259,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{}}}],["sales",{"_index":1278,"title":{},"body":{"index.html":{}}}],["sales.ts",{"_index":235,"title":{},"body":{"classes/CreateSchemaForSales1730363889037.html":{},"coverage.html":{}}}],["sales.ts:4",{"_index":246,"title":{},"body":{"classes/CreateSchemaForSales1730363889037.html":{}}}],["sales.ts:8",{"_index":243,"title":{},"body":{"classes/CreateSchemaForSales1730363889037.html":{}}}],["salt",{"_index":546,"title":{},"body":{"classes/HashHelper.html":{}}}],["same",{"_index":924,"title":{},"body":{"interfaces/PaginationRequest.html":{}}}],["save",{"_index":1584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["savecustomerproperty",{"_index":1583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schema",{"_index":234,"title":{},"body":{"classes/CreateSchemaForSales1730363889037.html":{},"entities/Order.html":{},"modules/OrdersModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["schema:drop",{"_index":1323,"title":{},"body":{"index.html":{}}}],["schemafactory.createforclass(order",{"_index":1504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scheme",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["score",{"_index":791,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"index.html":{}}}],["score'})@apiokresponse()@get('business/:businessid/credit",{"_index":790,"title":{},"body":{"controllers/OrdersController.html":{}}}],["scoring",{"_index":1283,"title":{},"body":{"index.html":{}}}],["search",{"_index":499,"title":{},"body":{"classes/FileFinder.html":{}}}],["securityschemeobject",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seed",{"_index":1324,"title":{},"body":{"index.html":{}}}],["seed:create",{"_index":1327,"title":{},"body":{"index.html":{}}}],["seed:run",{"_index":1325,"title":{},"body":{"index.html":{}}}],["seeds",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seedtracking",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["select",{"_index":1549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["select('sum(amount",{"_index":890,"title":{},"body":{"injectables/OrdersService.html":{}}}],["selectpaymentoption",{"_index":1548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sending",{"_index":976,"title":{},"body":{"injectables/TaxService.html":{}}}],["sends",{"_index":1349,"title":{},"body":{"index.html":{}}}],["serve",{"_index":1357,"title":{},"body":{"index.html":{}}}],["server",{"_index":1354,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":842,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/TaxService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["service_unavailable",{"_index":1497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["services",{"_index":1444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setdescription(description",{"_index":1438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setentityname",{"_index":128,"title":{},"body":{"classes/Base.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["settitle(title",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":1300,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["setversion(apiversion",{"_index":1439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":932,"title":{},"body":{"interfaces/PaginationRequest.html":{}}}],["show",{"_index":1318,"title":{},"body":{"index.html":{}}}],["size",{"_index":933,"title":{},"body":{"interfaces/PaginationRequest.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["skip",{"_index":910,"title":{},"body":{"classes/Pagination.html":{},"interfaces/PaginationRequest.html":{},"miscellaneous/variables.html":{}}}],["skip_auth",{"_index":1053,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["skipauth",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skipped",{"_index":929,"title":{},"body":{"interfaces/PaginationRequest.html":{}}}],["skippedrecords",{"_index":940,"title":{},"body":{"classes/PaginationResponseDto.html":{}}}],["slice(2",{"_index":542,"title":{},"body":{"classes/GenerateCharacters.html":{}}}],["slug",{"_index":950,"title":{},"body":{"classes/PermissionExistsException.html":{}}}],["sort",{"_index":934,"title":{},"body":{"interfaces/PaginationRequest.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplicatonExistException.html":{},"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateOrderDto.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/CustomerExistException.html":{},"interfaces/DefaultPagination.html":{},"classes/DisabledUserException.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/FileFinder.html":{},"classes/ForeignKeyConflictException.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"classes/InvalidTokenException.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"entities/Order.html":{},"classes/OrderMapper.html":{},"classes/OrderResponseDto.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"interfaces/PaginationRequest.html":{},"classes/PaginationResponseDto.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/ResponseDto.html":{},"classes/RoleExistsException.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateOrderDto.html":{},"classes/UserExistsException.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["source.ts",{"_index":1119,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["space",{"_index":601,"title":{},"body":{"controllers/HealthController.html":{}}}],["specific",{"_index":501,"title":{},"body":{"classes/FileFinder.html":{},"injectables/OrdersService.html":{}}}],["specified",{"_index":1344,"title":{},"body":{"index.html":{}}}],["src",{"_index":1014,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["src/.../api",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":1162,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../config.type.ts",{"_index":1379,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../constants.ts",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../data",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../db",{"_index":1160,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../entity",{"_index":1380,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../error",{"_index":1163,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../find",{"_index":1381,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../gender.enum.ts",{"_index":1166,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../http",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../is",{"_index":1386,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../job",{"_index":1168,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../lower",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1265,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../maybe.type.ts",{"_index":1382,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../nullable.type.ts",{"_index":1383,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../or",{"_index":1385,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../order.schema.ts",{"_index":1384,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../pagination",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../payment",{"_index":1170,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../recurring",{"_index":1177,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../route",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../swagger.config.ts",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../task",{"_index":1180,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../transaction",{"_index":1182,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../transform.decorators.ts",{"_index":1266,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../validate",{"_index":1267,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../validation",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":105,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":106,"title":{},"body":{"injectables/AppService.html":{}}}],["src/common/constants.ts",{"_index":1049,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorators/api",{"_index":1055,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorators/transform.decorators.ts",{"_index":1058,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/dtos/response.dto.ts",{"_index":958,"title":{},"body":{"classes/ResponseDto.html":{},"coverage.html":{}}}],["src/common/dtos/response.dto.ts:10",{"_index":961,"title":{},"body":{"classes/ResponseDto.html":{}}}],["src/common/dtos/response.dto.ts:8",{"_index":959,"title":{},"body":{"classes/ResponseDto.html":{}}}],["src/common/entities/base.entity.ts",{"_index":120,"title":{},"body":{"classes/Base.html":{},"coverage.html":{}}}],["src/common/entities/base.entity.ts:18",{"_index":141,"title":{},"body":{"classes/Base.html":{}}}],["src/common/entities/base.entity.ts:27",{"_index":149,"title":{},"body":{"classes/Base.html":{}}}],["src/common/entities/base.entity.ts:34",{"_index":144,"title":{},"body":{"classes/Base.html":{}}}],["src/common/entities/base.entity.ts:36",{"_index":131,"title":{},"body":{"classes/Base.html":{}}}],["src/common/entities/base.entity.ts:39",{"_index":151,"title":{},"body":{"classes/Base.html":{}}}],["src/common/entities/base.entity.ts:43",{"_index":153,"title":{},"body":{"classes/Base.html":{}}}],["src/common/entities/integer",{"_index":657,"title":{},"body":{"classes/IntegerPrimaryIdEntity.html":{},"coverage.html":{}}}],["src/common/entities/uuid",{"_index":1042,"title":{},"body":{"classes/UuidPrimaryIdEntity.html":{},"coverage.html":{}}}],["src/common/enums/db",{"_index":1183,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enums/error",{"_index":1190,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enums/gender.enum.ts",{"_index":1223,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enums/job",{"_index":1226,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enums/payment",{"_index":1230,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enums/recurring",{"_index":1251,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enums/task",{"_index":1257,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enums/transaction",{"_index":1260,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/helpers/class",{"_index":165,"title":{},"body":{"classes/ClassNameExtractor.html":{},"coverage.html":{}}}],["src/common/helpers/file",{"_index":490,"title":{},"body":{"classes/FileFinder.html":{},"coverage.html":{}}}],["src/common/helpers/generate",{"_index":533,"title":{},"body":{"classes/GenerateCharacters.html":{},"coverage.html":{}}}],["src/common/helpers/hash.helper.ts",{"_index":544,"title":{},"body":{"classes/HashHelper.html":{},"coverage.html":{}}}],["src/common/helpers/hash.helper.ts:11",{"_index":558,"title":{},"body":{"classes/HashHelper.html":{}}}],["src/common/helpers/hash.helper.ts:21",{"_index":552,"title":{},"body":{"classes/HashHelper.html":{}}}],["src/common/helpers/hash.helper.ts:4",{"_index":549,"title":{},"body":{"classes/HashHelper.html":{}}}],["src/common/http/exceptions/access",{"_index":6,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"coverage.html":{}}}],["src/common/http/exceptions/application",{"_index":110,"title":{},"body":{"classes/ApplicatonExistException.html":{},"coverage.html":{}}}],["src/common/http/exceptions/customer",{"_index":275,"title":{},"body":{"classes/CustomerExistException.html":{},"coverage.html":{}}}],["src/common/http/exceptions/disabled",{"_index":293,"title":{},"body":{"classes/DisabledUserException.html":{},"coverage.html":{}}}],["src/common/http/exceptions/foreign",{"_index":526,"title":{},"body":{"classes/ForeignKeyConflictException.html":{},"coverage.html":{}}}],["src/common/http/exceptions/invalid",{"_index":672,"title":{},"body":{"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidTokenException.html":{},"coverage.html":{}}}],["src/common/http/exceptions/invalidcurrentpinexception.ts",{"_index":684,"title":{},"body":{"classes/InvalidCurrentPinException.html":{},"coverage.html":{}}}],["src/common/http/exceptions/invalidcurrentpinexception.ts:4",{"_index":685,"title":{},"body":{"classes/InvalidCurrentPinException.html":{}}}],["src/common/http/exceptions/permission",{"_index":946,"title":{},"body":{"classes/PermissionExistsException.html":{},"coverage.html":{}}}],["src/common/http/exceptions/refresh",{"_index":955,"title":{},"body":{"classes/RefreshTokenExpiredException.html":{},"coverage.html":{}}}],["src/common/http/exceptions/role",{"_index":963,"title":{},"body":{"classes/RoleExistsException.html":{},"coverage.html":{}}}],["src/common/http/exceptions/user",{"_index":1038,"title":{},"body":{"classes/UserExistsException.html":{},"coverage.html":{}}}],["src/common/http/http",{"_index":610,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/http/response.interceptor.ts",{"_index":636,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{},"coverage.html":{}}}],["src/common/http/response.interceptor.ts:19",{"_index":642,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{}}}],["src/common/interceptors/logging.interceptors.ts",{"_index":726,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["src/common/interceptors/logging.interceptors.ts:13",{"_index":728,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["src/common/interceptors/logging.interceptors.ts:17",{"_index":729,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["src/common/libs/pagination/decorators/api",{"_index":1074,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/libs/pagination/decorators/pagination",{"_index":1077,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/libs/pagination/interfaces/default",{"_index":281,"title":{},"body":{"interfaces/DefaultPagination.html":{},"coverage.html":{}}}],["src/common/libs/pagination/interfaces/pagination",{"_index":916,"title":{},"body":{"interfaces/PaginationRequest.html":{},"coverage.html":{}}}],["src/common/libs/pagination/pagination",{"_index":938,"title":{},"body":{"classes/PaginationResponseDto.html":{},"coverage.html":{}}}],["src/common/libs/pagination/pagination.helper.ts",{"_index":900,"title":{},"body":{"classes/Pagination.html":{},"coverage.html":{}}}],["src/common/libs/pagination/pagination.helper.ts:12",{"_index":906,"title":{},"body":{"classes/Pagination.html":{}}}],["src/common/libs/route",{"_index":1084,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/transformers/lower",{"_index":1087,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/types/entity",{"_index":1090,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/types/find",{"_index":1094,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/types/maybe.type.ts",{"_index":1097,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/types/nullable.type.ts",{"_index":1099,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/types/or",{"_index":1101,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/validators/is",{"_index":692,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/validators/validate",{"_index":1105,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/validators/validation",{"_index":1107,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/app.config.ts",{"_index":301,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/config/app.config.ts:41",{"_index":325,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["src/config/app.config.ts:44",{"_index":322,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["src/config/app.config.ts:48",{"_index":317,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["src/config/app.config.ts:52",{"_index":329,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["src/config/app.config.ts:58",{"_index":327,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["src/config/app.config.ts:62",{"_index":321,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["src/config/app.config.ts:66",{"_index":330,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["src/config/app.config.ts:70",{"_index":316,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["src/config/app.config.ts:74",{"_index":318,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["src/config/app.config.ts:78",{"_index":313,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["src/config/app.config.ts:82",{"_index":319,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["src/config/app.config.ts:86",{"_index":320,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["src/config/app.config.ts:90",{"_index":328,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["src/config/config.type",{"_index":994,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["src/config/config.type.ts",{"_index":1111,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/config/database.config.ts",{"_index":407,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"coverage.html":{}}}],["src/config/database.config.ts:17",{"_index":439,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/config/database.config.ts:21",{"_index":437,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/config/database.config.ts:25",{"_index":425,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/config/database.config.ts:32",{"_index":431,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/config/database.config.ts:37",{"_index":430,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/config/database.config.ts:41",{"_index":429,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/config/database.config.ts:45",{"_index":440,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/config/database.config.ts:49",{"_index":436,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/config/database.config.ts:53",{"_index":428,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/config/database.config.ts:57",{"_index":435,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/config/database.config.ts:61",{"_index":434,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/config/database.config.ts:65",{"_index":422,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/config/database.config.ts:69",{"_index":426,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/config/database.config.ts:73",{"_index":423,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/config/mongo.config.ts",{"_index":476,"title":{},"body":{"classes/EnvironmentVariablesValidator-2.html":{},"coverage.html":{}}}],["src/config/mongo.config.ts:8",{"_index":478,"title":{},"body":{"classes/EnvironmentVariablesValidator-2.html":{}}}],["src/config/swagger.config.ts",{"_index":1115,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/tax.config.ts",{"_index":484,"title":{},"body":{"classes/EnvironmentVariablesValidator-3.html":{},"coverage.html":{}}}],["src/config/tax.config.ts:8",{"_index":486,"title":{},"body":{"classes/EnvironmentVariablesValidator-3.html":{}}}],["src/database/data",{"_index":1118,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/factories/**/*{.ts,.js",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/database/migrations",{"_index":1016,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["src/database/migrations/1730363889037",{"_index":232,"title":{},"body":{"classes/CreateSchemaForSales1730363889037.html":{},"coverage.html":{}}}],["src/database/migrations/1730365329511",{"_index":251,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{},"coverage.html":{}}}],["src/database/migrations/create",{"_index":1312,"title":{},"body":{"index.html":{}}}],["src/database/seeds",{"_index":1326,"title":{},"body":{"index.html":{}}}],["src/database/seeds/**/*{.ts,.js",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/database/seeds/create",{"_index":1328,"title":{},"body":{"index.html":{}}}],["src/database/typeorm",{"_index":987,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"coverage.html":{}}}],["src/health/health.controller.ts",{"_index":568,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:25",{"_index":573,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":606,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/main.ts",{"_index":1121,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/orders/dto/create",{"_index":194,"title":{},"body":{"classes/CreateOrderDto.html":{},"coverage.html":{}}}],["src/modules/orders/dto/order",{"_index":773,"title":{},"body":{"classes/OrderResponseDto.html":{},"coverage.html":{}}}],["src/modules/orders/dto/update",{"_index":1034,"title":{},"body":{"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["src/modules/orders/entities/order.entity.ts",{"_index":739,"title":{},"body":{"entities/Order.html":{},"coverage.html":{}}}],["src/modules/orders/entities/order.entity.ts:11",{"_index":743,"title":{},"body":{"entities/Order.html":{}}}],["src/modules/orders/entities/order.entity.ts:18",{"_index":744,"title":{},"body":{"entities/Order.html":{}}}],["src/modules/orders/entities/order.entity.ts:24",{"_index":742,"title":{},"body":{"entities/Order.html":{}}}],["src/modules/orders/entities/order.entity.ts:32",{"_index":745,"title":{},"body":{"entities/Order.html":{}}}],["src/modules/orders/order.mapper.ts",{"_index":752,"title":{},"body":{"classes/OrderMapper.html":{},"coverage.html":{}}}],["src/modules/orders/order.mapper.ts:5",{"_index":755,"title":{},"body":{"classes/OrderMapper.html":{}}}],["src/modules/orders/orders.controller.ts",{"_index":782,"title":{},"body":{"controllers/OrdersController.html":{},"coverage.html":{}}}],["src/modules/orders/orders.controller.ts:27",{"_index":796,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/modules/orders/orders.controller.ts:34",{"_index":799,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/modules/orders/orders.controller.ts:41",{"_index":792,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/modules/orders/orders.module.ts",{"_index":826,"title":{},"body":{"modules/OrdersModule.html":{}}}],["src/modules/orders/orders.service.ts",{"_index":833,"title":{},"body":{"injectables/OrdersService.html":{},"coverage.html":{}}}],["src/modules/orders/orders.service.ts:15",{"_index":837,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/modules/orders/orders.service.ts:35",{"_index":851,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/modules/orders/orders.service.ts:64",{"_index":855,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/modules/orders/orders.service.ts:87",{"_index":847,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/modules/orders/schemas/order.schema.ts",{"_index":1125,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/orders/tax.service.ts",{"_index":966,"title":{},"body":{"injectables/TaxService.html":{},"coverage.html":{}}}],["src/modules/orders/tax.service.ts:20",{"_index":974,"title":{},"body":{"injectables/TaxService.html":{}}}],["src/modules/orders/tax.service.ts:8",{"_index":969,"title":{},"body":{"injectables/TaxService.html":{}}}],["ssl",{"_index":1026,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["sslenabled",{"_index":466,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["staging",{"_index":343,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["standing_order",{"_index":1241,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["start",{"_index":923,"title":{},"body":{"interfaces/PaginationRequest.html":{},"index.html":{}}}],["start:dev",{"_index":1306,"title":{},"body":{"index.html":{}}}],["start:proddatabase",{"_index":1307,"title":{},"body":{"index.html":{}}}],["started",{"_index":1274,"title":{"index.html":{}},"body":{}}],["state",{"_index":1579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":1047,"title":{},"body":{"coverage.html":{}}}],["statescontroller",{"_index":1578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["static",{"_index":167,"title":{},"body":{"classes/ClassNameExtractor.html":{},"classes/FileFinder.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"classes/OrderMapper.html":{},"classes/Pagination.html":{}}}],["statistics",{"_index":1540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["status",{"_index":199,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/HttpExceptionFilter.html":{},"entities/Order.html":{},"classes/OrderResponseDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["status.enum.ts",{"_index":1175,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statuscode",{"_index":633,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["statusescontroller",{"_index":1606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["steps",{"_index":1360,"title":{},"body":{"index.html":{}}}],["storage",{"_index":597,"title":{},"body":{"controllers/HealthController.html":{}}}],["storage_path",{"_index":309,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["storagepath",{"_index":404,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["stores",{"_index":1288,"title":{},"body":{"index.html":{}}}],["str",{"_index":560,"title":{},"body":{"classes/HashHelper.html":{}}}],["string",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateOrderDto.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/CustomerExistException.html":{},"interfaces/DefaultPagination.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/FileFinder.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/IntegerPrimaryIdEntity.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"entities/Order.html":{},"classes/OrderResponseDto.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"interfaces/PaginationRequest.html":{},"classes/PermissionExistsException.html":{},"classes/RoleExistsException.html":{},"classes/UserExistsException.html":{},"classes/UuidPrimaryIdEntity.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["subdirectories",{"_index":503,"title":{},"body":{"classes/FileFinder.html":{}}}],["subscriber",{"_index":1018,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["subscribersdir",{"_index":1017,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["sum",{"_index":891,"title":{},"body":{"injectables/OrdersService.html":{}}}],["super",{"_index":20,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"classes/ApplicatonExistException.html":{},"classes/CustomerExistException.html":{},"classes/DisabledUserException.html":{},"classes/ForeignKeyConflictException.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"classes/InvalidTokenException.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/RoleExistsException.html":{},"classes/UserExistsException.html":{}}}],["support",{"_index":1366,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1367,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1152,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["swaggerconfig",{"_index":1116,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggermodule.createdocument(app",{"_index":1442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup(`api/v${apiversion}/swagger",{"_index":1443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synchronize",{"_index":461,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["system",{"_index":1277,"title":{},"body":{"index.html":{}}}],["t",{"_index":905,"title":{},"body":{"classes/Pagination.html":{},"interfaces/PaginationRequest.html":{},"classes/PaginationResponseDto.html":{},"classes/ResponseDto.html":{},"miscellaneous/typealiases.html":{}}}],["table",{"_index":252,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{},"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1128,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":731,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["tap(async",{"_index":735,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["task",{"_index":1627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taskscontroller",{"_index":1626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taskstatus",{"_index":1179,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tax",{"_index":844,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/TaxService.html":{},"index.html":{}}}],["tax_url",{"_index":485,"title":{},"body":{"classes/EnvironmentVariablesValidator-3.html":{}}}],["taxconfig",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["taxservice",{"_index":825,"title":{"injectables/TaxService.html":{}},"body":{"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"injectables/TaxService.html":{},"coverage.html":{},"overview.html":{}}}],["term_settings_exist",{"_index":1218,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["terminusmodule",{"_index":608,"title":{},"body":{"modules/HealthModule.html":{}}}],["termsettingsexist",{"_index":1217,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["test",{"_index":345,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["test:covdocker",{"_index":1333,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1332,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1329,"title":{},"body":{"index.html":{}}}],["there's",{"_index":952,"title":{},"body":{"classes/PermissionExistsException.html":{},"classes/RoleExistsException.html":{},"classes/UserExistsException.html":{}}}],["this.__entity",{"_index":161,"title":{},"body":{"classes/Base.html":{}}}],["this.appservice.gethello",{"_index":43,"title":{},"body":{"controllers/AppController.html":{}}}],["this.configservice.get",{"_index":1028,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('app.nodeenv",{"_index":1007,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('app.storagepath",{"_index":605,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get('database.ca",{"_index":1030,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database.cert",{"_index":1032,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database.host",{"_index":997,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database.key",{"_index":1031,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database.maxconnections",{"_index":1025,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database.name",{"_index":1002,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database.password",{"_index":1000,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database.port",{"_index":998,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database.sslenabled",{"_index":1027,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database.synchronize",{"_index":1003,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database.type",{"_index":995,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database.url",{"_index":996,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database.username",{"_index":999,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('tax.url",{"_index":982,"title":{},"body":{"injectables/TaxService.html":{}}}],["this.constructor.name",{"_index":162,"title":{},"body":{"classes/Base.html":{}}}],["this.datasource",{"_index":710,"title":{},"body":{"injectables/IsExist.html":{}}}],["this.datasource.getrepository(repository).findone",{"_index":722,"title":{},"body":{"injectables/IsNotExist.html":{}}}],["this.diskhealthindicator.checkstorage('disk",{"_index":602,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.healthcheckservice.check",{"_index":583,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.logger.error('error",{"_index":879,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.logger.log(`after",{"_index":736,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["this.logger.log(`before",{"_index":733,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["this.memoryhealthindicator.checkheap('memory",{"_index":584,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.memoryhealthindicator.checkrss('memory",{"_index":594,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.ordermodel.create(createorderdto",{"_index":874,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ordermodel.find",{"_index":895,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.orderrepository",{"_index":888,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.orderrepository.count",{"_index":886,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.orderrepository.create(createorderdto",{"_index":872,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.orderrepository.manager.connection.createqueryrunner",{"_index":867,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ordersservice.calculatecreditscore(businessid",{"_index":822,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.ordersservice.createorder(createorderdto",{"_index":815,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.ordersservice.getorderdetails(businessid",{"_index":819,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.salt",{"_index":565,"title":{},"body":{"classes/HashHelper.html":{}}}],["this.taxservice.logtaxdata(createorderdto",{"_index":875,"title":{},"body":{"injectables/OrdersService.html":{}}}],["thresholdpercent",{"_index":603,"title":{},"body":{"controllers/HealthController.html":{}}}],["through",{"_index":510,"title":{},"body":{"classes/FileFinder.html":{},"miscellaneous/variables.html":{}}}],["throw",{"_index":881,"title":{},"body":{"injectables/OrdersService.html":{}}}],["time",{"_index":136,"title":{},"body":{"classes/Base.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["timestamp",{"_index":135,"title":{},"body":{"classes/Base.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/ResponseDto.html":{},"classes/UuidPrimaryIdEntity.html":{},"miscellaneous/variables.html":{}}}],["title",{"_index":1117,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tmodel",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toarray",{"_index":1060,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["toboolean",{"_index":1061,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["todto",{"_index":753,"title":{},"body":{"classes/OrderMapper.html":{}}}],["todto(entity",{"_index":754,"title":{},"body":{"classes/OrderMapper.html":{}}}],["toint",{"_index":1062,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tojson",{"_index":129,"title":{},"body":{"classes/Base.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["token",{"_index":7,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"classes/RefreshTokenExpiredException.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["token.exception.ts",{"_index":688,"title":{},"body":{"classes/InvalidTokenException.html":{},"coverage.html":{}}}],["token.exception.ts:4",{"_index":689,"title":{},"body":{"classes/InvalidTokenException.html":{}}}],["token_name",{"_index":1054,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tolowercase",{"_index":1063,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["too_many_requests",{"_index":1489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tostring",{"_index":541,"title":{},"body":{"classes/GenerateCharacters.html":{}}}],["total",{"_index":857,"title":{},"body":{"injectables/OrdersService.html":{},"index.html":{}}}],["totalamount",{"_index":887,"title":{},"body":{"injectables/OrdersService.html":{},"index.html":{}}}],["totalorders",{"_index":885,"title":{},"body":{"injectables/OrdersService.html":{},"index.html":{}}}],["totalpages",{"_index":911,"title":{},"body":{"classes/Pagination.html":{},"classes/PaginationResponseDto.html":{}}}],["totalrecords",{"_index":903,"title":{},"body":{"classes/Pagination.html":{},"classes/PaginationResponseDto.html":{}}}],["touppercase",{"_index":1064,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["transaction",{"_index":1293,"title":{},"body":{"index.html":{}}}],["transactions",{"_index":1295,"title":{},"body":{"index.html":{}}}],["transactionstatusenum",{"_index":1181,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transfer",{"_index":854,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/TaxService.html":{},"miscellaneous/enumerations.html":{}}}],["transform",{"_index":1632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transformer",{"_index":155,"title":{},"body":{"classes/Base.html":{},"dependencies.html":{}}}],["transformfnparams",{"_index":1502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trim",{"_index":1065,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["true",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"classes/Base.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/FileFinder.html":{},"controllers/HealthController.html":{},"classes/IntegerPrimaryIdEntity.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UuidPrimaryIdEntity.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":870,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/TaxService.html":{}}}],["type",{"_index":130,"title":{},"body":{"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateOrderDto.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/CustomerExistException.html":{},"interfaces/DefaultPagination.html":{},"classes/DisabledUserException.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/FileFinder.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/IntegerPrimaryIdEntity.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"entities/Order.html":{},"classes/OrderMapper.html":{},"classes/OrderResponseDto.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"interfaces/PaginationRequest.html":{},"classes/PaginationResponseDto.html":{},"classes/PermissionExistsException.html":{},"classes/ResponseDto.html":{},"classes/RoleExistsException.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UserExistsException.html":{},"classes/UuidPrimaryIdEntity.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.enum.ts",{"_index":1164,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type.ts",{"_index":1071,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1377,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"classes/Base.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/IntegerPrimaryIdEntity.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"entities/Order.html":{},"injectables/OrdersService.html":{},"classes/UuidPrimaryIdEntity.html":{},"dependencies.html":{},"index.html":{}}}],["typeormconfigservice",{"_index":68,"title":{"injectables/TypeOrmConfigService.html":{}},"body":{"modules/AppModule.html":{},"injectables/TypeOrmConfigService.html":{},"coverage.html":{}}}],["typeormmodule",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{}}}],["typeormmodule.forfeature([order",{"_index":831,"title":{},"body":{"modules/OrdersModule.html":{}}}],["typeormmodule.forrootasync",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":992,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["typeormoptionsfactory",{"_index":993,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["types",{"_index":1616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typescript",{"_index":177,"title":{},"body":{"classes/ClassNameExtractor.html":{}}}],["uat",{"_index":348,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["ui",{"_index":1153,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["unauthorized",{"_index":1448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unauthorizedexception",{"_index":10,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"classes/DisabledUserException.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidTokenException.html":{},"classes/RefreshTokenExpiredException.html":{}}}],["undefined",{"_index":719,"title":{},"body":{"injectables/IsNotExist.html":{},"entities/Order.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["unexpected_error",{"_index":631,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["unit",{"_index":1330,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":700,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/OrdersService.html":{},"miscellaneous/enumerations.html":{}}}],["unlicensed",{"_index":1375,"title":{},"body":{"properties.html":{}}}],["unprocessable_entity",{"_index":1485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unsupported_media_type",{"_index":1475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["up",{"_index":240,"title":{},"body":{"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{}}}],["up(queryrunner",{"_index":245,"title":{},"body":{"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{}}}],["upapi",{"_index":1334,"title":{},"body":{"index.html":{}}}],["update",{"_index":138,"title":{},"body":{"classes/Base.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{},"miscellaneous/variables.html":{}}}],["update_payment_amount",{"_index":1228,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["updatecategory",{"_index":1592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatecustomer",{"_index":1535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updated_at",{"_index":146,"title":{},"body":{"classes/Base.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["updatedat",{"_index":127,"title":{},"body":{"classes/Base.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["updatedatecolumn",{"_index":158,"title":{},"body":{"classes/Base.html":{}}}],["updatedatecolumn({name",{"_index":145,"title":{},"body":{"classes/Base.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["updateestate",{"_index":1599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updateinvoice",{"_index":1551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updateorderdto",{"_index":1033,"title":{"classes/UpdateOrderDto.html":{}},"body":{"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["updatepermission",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updaterevenuehead",{"_index":1570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updaterole",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatestatus",{"_index":1610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updateuser",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["upload",{"_index":1573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uploadfile",{"_index":1572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uri",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["uri_too_long",{"_index":1473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["url",{"_index":448,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"injectables/LoggingInterceptor.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":595,"title":{},"body":{"controllers/HealthController.html":{},"interfaces/PaginationRequest.html":{}}}],["usefactory",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":297,"title":{},"body":{"classes/DisabledUserException.html":{},"classes/UserExistsException.html":{},"miscellaneous/variables.html":{}}}],["user.exception.ts",{"_index":294,"title":{},"body":{"classes/DisabledUserException.html":{},"coverage.html":{}}}],["user.exception.ts:4",{"_index":296,"title":{},"body":{"classes/DisabledUserException.html":{}}}],["user_exists",{"_index":1202,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userexists",{"_index":1201,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userexistsexception",{"_index":1037,"title":{"classes/UserExistsException.html":{}},"body":{"classes/UserExistsException.html":{},"coverage.html":{}}}],["username",{"_index":459,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UserExistsException.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["using",{"_index":188,"title":{},"body":{"classes/ClassNameExtractor.html":{},"index.html":{}}}],["ussd",{"_index":1237,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["utf8",{"_index":181,"title":{},"body":{"classes/ClassNameExtractor.html":{}}}],["uuid",{"_index":264,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{},"entities/Order.html":{}}}],["uuid_generate_v4",{"_index":265,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{}}}],["uuidprimaryidentity",{"_index":747,"title":{"classes/UuidPrimaryIdEntity.html":{}},"body":{"entities/Order.html":{},"classes/UuidPrimaryIdEntity.html":{},"coverage.html":{}}}],["validate",{"_index":694,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsNotExist.html":{}}}],["validate(value",{"_index":697,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsNotExist.html":{}}}],["validateconfig",{"_index":333,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validateconfig(config",{"_index":1269,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validateconfig(process.env",{"_index":372,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{}}}],["validateif",{"_index":441,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["validateif((envvalues",{"_index":445,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["validateif(envvalues",{"_index":424,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["validation",{"_index":1645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validationarguments",{"_index":698,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsNotExist.html":{}}}],["validationarguments.constraints[0",{"_index":706,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsNotExist.html":{}}}],["validationarguments.constraints[1",{"_index":708,"title":{},"body":{"injectables/IsExist.html":{}}}],["validationarguments.object",{"_index":721,"title":{},"body":{"injectables/IsNotExist.html":{}}}],["validationarguments.property",{"_index":713,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsNotExist.html":{}}}],["validationentity",{"_index":718,"title":{},"body":{"injectables/IsNotExist.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["validationerror",{"_index":1638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validationoptions",{"_index":1109,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["validationpipe",{"_index":802,"title":{},"body":{"controllers/OrdersController.html":{}}}],["validationpipeoptions",{"_index":1631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator",{"_index":227,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"dependencies.html":{}}}],["validator/types/validation/validationarguments",{"_index":704,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsNotExist.html":{}}}],["validatorconstraint",{"_index":701,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsNotExist.html":{}}}],["validatorconstraintinterface",{"_index":702,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsNotExist.html":{}}}],["value",{"_index":254,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{},"classes/HashHelper.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"injectables/OrdersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value?.[pathtoproperty",{"_index":714,"title":{},"body":{"injectables/IsExist.html":{}}}],["values",{"_index":972,"title":{},"body":{"injectables/TaxService.html":{}}}],["variable",{"_index":1050,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1389,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":310,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"controllers/OrdersController.html":{},"properties.html":{}}}],["virtual_account",{"_index":1235,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["void",{"_index":152,"title":{},"body":{"classes/Base.html":{},"classes/HttpExceptionFilter.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["vultr",{"_index":366,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["wallet",{"_index":1232,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["watch",{"_index":1304,"title":{},"body":{"index.html":{}}}],["webhook",{"_index":1622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["webhookcontroller",{"_index":1619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["week",{"_index":1253,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["where('business_id",{"_index":892,"title":{},"body":{"injectables/OrdersService.html":{}}}],["whitelist",{"_index":1633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withfiletypes",{"_index":508,"title":{},"body":{"classes/FileFinder.html":{}}}],["within",{"_index":1281,"title":{},"body":{"index.html":{}}}],["workflow",{"_index":1620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["workflowforpropertypurchase",{"_index":1623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["working_directory",{"_index":311,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["workingdirectory",{"_index":386,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["world",{"_index":108,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":401,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["year",{"_index":1256,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["zone",{"_index":137,"title":{},"body":{"classes/Base.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["zoom",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AccessTokenExpiredException.html":{"url":"classes/AccessTokenExpiredException.html","title":"class - AccessTokenExpiredException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccessTokenExpiredException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/http/exceptions/access-token-expired.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/http/exceptions/access-token-expired.exception.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UnauthorizedException } from '@nestjs/common';\nimport { ErrorType } from '../../enums';\n\nexport class AccessTokenExpiredException extends UnauthorizedException {\n  constructor() {\n    super({\n      errorType: ErrorType.AccessTokenExpired,\n      message: 'Access token has expired',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nHealthModule\n\nHealthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HealthModule\n                        \n                        \n                            OrdersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { HealthModule } from './health/health.module';\nimport { DataSource, DataSourceOptions } from 'typeorm';\nimport { TypeOrmConfigService } from '@database/typeorm-config.service';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport {\n  appConfig,\n  databaseConfig,\n  mongoConfig,\n  taxConfig,\n} from '@config/index';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { OrdersModule } from '@modules/orders/orders.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [appConfig, databaseConfig, mongoConfig, taxConfig],\n      envFilePath: ['.env'],\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useClass: TypeOrmConfigService,\n      dataSourceFactory: async (options: DataSourceOptions) => {\n        return new DataSource(options).initialize();\n      },\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get('mongo.url', { infer: true }),\n      }),\n      inject: [ConfigService],\n    }),\n    HealthModule,\n    OrdersModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplicatonExistException.html":{"url":"classes/ApplicatonExistException.html","title":"class - ApplicatonExistException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplicatonExistException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/http/exceptions/application-exist.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/http/exceptions/application-exist.exception.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException } from '@nestjs/common';\nimport { ErrorType } from '@common/enums';\n\nexport class ApplicatonExistException extends ConflictException {\n  constructor() {\n    super({\n      errorType: ErrorType.TermSettingsExist,\n      message: `Application already exist`,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Base.html":{"url":"classes/Base.html","title":"class - Base","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Base\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/entities/base.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                __entity\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                setEntityName\n                            \n                            \n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        __entity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/common/entities/base.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at', type: 'timestamp with time zone', update: false, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/entities/base.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: 'deleted_at', type: 'timestamp with time zone', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/entities/base.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: 'updated_at', type: 'timestamp with time zone', onUpdate: 'now()', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/entities/base.entity.ts:27\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setEntityName\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityName()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @AfterLoad()\n                \n            \n\n                    \n                        \n                            Defined in src/common/entities/base.entity.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toJSON\n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/entities/base.entity.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { instanceToPlain } from 'class-transformer';\nimport {\n  AfterLoad,\n  BaseEntity,\n  CreateDateColumn,\n  DeleteDateColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\nexport class Base extends BaseEntity {\n  @CreateDateColumn({\n    name: 'created_at',\n    type: 'timestamp with time zone',\n    // default: 'now()',\n    update: false,\n    nullable: false,\n  })\n  createdAt: Date;\n\n  @UpdateDateColumn({\n    name: 'updated_at',\n    type: 'timestamp with time zone',\n    // default: 'now()',\n    onUpdate: 'now()',\n    nullable: false,\n  })\n  updatedAt: Date;\n\n  @DeleteDateColumn({\n    name: 'deleted_at',\n    type: 'timestamp with time zone',\n    nullable: true,\n  })\n  deletedAt: Date;\n\n  __entity?: string;\n\n  @AfterLoad()\n  setEntityName() {\n    this.__entity = this.constructor.name;\n  }\n\n  toJSON() {\n    return instanceToPlain(this);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClassNameExtractor.html":{"url":"classes/ClassNameExtractor.html","title":"class - ClassNameExtractor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClassNameExtractor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/class-name-extractor.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                extractClassNames\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        extractClassNames\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractClassNames(filePath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helpers/class-name-extractor.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as fs from \"fs\";\n\nexport class ClassNameExtractor {\n    // Function to extract class names from a TypeScript file\n    static extractClassNames(filePath: string): string[] {\n        const content = fs.readFileSync(filePath, 'utf8');\n        const classRegex = /class\\s+(\\w+)\\s+/g;\n        const classNames: string[] = [];\n        let match: RegExpExecArray | null;\n\n        // Extract class names using regular expression\n        while ((match = classRegex.exec(content)) !== null) {\n            classNames.push(match[1]);\n        }\n\n        return classNames;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderDto.html":{"url":"classes/CreateOrderDto.html","title":"class - CreateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/orders/dto/create-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                amount\n                            \n                            \n                                    \n                                    \n                                    \n                                businessId\n                            \n                            \n                                    \n                                    \n                                    \n                                departmentId\n                            \n                            \n                                    \n                                    \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 100, description: 'The amount of the order'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dto/create-order.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        businessId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '123e4567-e89b-12d3-a456-426614174000', description: 'The ID of the business that created the order'})@IsUUID()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dto/create-order.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        departmentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '123e4567-e89b-12d3-a456-426614174000', description: 'The ID of the department that created the order'})@IsUUID()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dto/create-order.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'pending', description: 'The status of the order'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dto/create-order.dto.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsNumber, IsString, IsUUID } from \"class-validator\";\n\nexport class CreateOrderDto {\n  @ApiProperty({\n    example: '123e4567-e89b-12d3-a456-426614174000',\n    description: 'The ID of the business that created the order',\n  })\n  @IsUUID()\n  @IsNotEmpty()\n  businessId: string;\n\n  @ApiProperty({\n    example: '123e4567-e89b-12d3-a456-426614174000',\n    description: 'The ID of the department that created the order',\n  })\n  @IsUUID()\n  @IsNotEmpty()\n  departmentId: string;\n\n  @ApiProperty({\n    example: 100.0,\n    description: 'The amount of the order',\n  })\n  @IsNotEmpty()\n  @IsNumber()\n  amount: number;\n\n  @ApiProperty({\n    example: 'pending',\n    description: 'The status of the order',\n  })\n  @IsNotEmpty()\n  @IsString()\n  status: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSchemaForSales1730363889037.html":{"url":"classes/CreateSchemaForSales1730363889037.html","title":"class - CreateSchemaForSales1730363889037","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSchemaForSales1730363889037\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1730363889037-create-schema-for-sales.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1730363889037-create-schema-for-sales.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1730363889037-create-schema-for-sales.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateSchemaForSales1730363889037 implements MigrationInterface {\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.createSchema('sale', true);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.dropSchema('sale', true);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTableForOrders1730365329511.html":{"url":"classes/CreateTableForOrders1730365329511.html","title":"class - CreateTableForOrders1730365329511","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTableForOrders1730365329511\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1730365329511-create-table-for-orders.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateTableForOrders1730365329511'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1730365329511-create-table-for-orders.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1730365329511-create-table-for-orders.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1730365329511-create-table-for-orders.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateTableForOrders1730365329511 implements MigrationInterface {\n  name = 'CreateTableForOrders1730365329511';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TYPE \"sale\".\"orders_status_enum\" AS ENUM('pending', 'completed', 'cancelled')`,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"sale\".\"orders\" (\"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"deleted_at\" TIMESTAMP WITH TIME ZONE, \"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"business_id\" uuid NOT NULL, \"customer_id\" uuid NOT NULL, \"amount\" numeric NOT NULL, \"status\" \"sale\".\"orders_status_enum\" NOT NULL DEFAULT 'pending', CONSTRAINT \"PK_710e2d4957aa5878dfe94e4ac2f\" PRIMARY KEY (\"id\"))`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE \"sale\".\"orders\"`);\n    await queryRunner.query(`DROP TYPE \"sale\".\"orders_status_enum\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomerExistException.html":{"url":"classes/CustomerExistException.html","title":"class - CustomerExistException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomerExistException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/http/exceptions/customer-exist.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in src/common/http/exceptions/customer-exist.exception.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException } from '@nestjs/common';\nimport { ErrorType } from '@common/enums';\n\nexport class CustomerExistException extends ConflictException {\n  constructor(name: string) {\n    super({\n      errorType: ErrorType.TermSettingsExist,\n      message: `Customer with ${name} already exist`,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultPagination.html":{"url":"interfaces/DefaultPagination.html","title":"interface - DefaultPagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DefaultPagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/libs/pagination/interfaces/default-pagination.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface designed to assign default parameters to pagination\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            defaultLimit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            defaultOrder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            defaultOrderDirection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            defaultPage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            defaultSkip\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxAllowedSize\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultLimit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultLimit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultOrder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultOrder:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultOrderDirection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultOrderDirection:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultPage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultSkip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultSkip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxAllowedSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxAllowedSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DefaultPagination {\n  defaultSkip?: number;\n  defaultPage?: number;\n  defaultLimit?: number;\n  defaultOrder?: any;\n  defaultOrderDirection?: string;\n  maxAllowedSize?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DisabledUserException.html":{"url":"classes/DisabledUserException.html","title":"class - DisabledUserException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DisabledUserException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/http/exceptions/disabled-user.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errorType: ErrorType)\n                    \n                \n                        \n                            \n                                Defined in src/common/http/exceptions/disabled-user.exception.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorType\n                                                  \n                                                        \n                                                                        ErrorType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UnauthorizedException } from '@nestjs/common';\nimport { ErrorType } from '../../enums';\n\nexport class DisabledUserException extends UnauthorizedException {\n  constructor(errorType: ErrorType) {\n    super({\n      errorType,\n      message: 'User not authorized to login',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnvironmentVariablesValidator.html":{"url":"classes/EnvironmentVariablesValidator.html","title":"class - EnvironmentVariablesValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnvironmentVariablesValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/app.config.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                API_PREFIX\n                            \n                            \n                                    \n                                    \n                                BACKEND_DOMAIN\n                            \n                            \n                                    \n                                    \n                                DESCRIPTION\n                            \n                            \n                                    \n                                    \n                                DOMAIN\n                            \n                            \n                                    \n                                    \n                                FALLBACK_LANGUAGE\n                            \n                            \n                                    \n                                    \n                                HEADER_LANGUAGE\n                            \n                            \n                                    \n                                    \n                                KEY\n                            \n                            \n                                    \n                                NAME\n                            \n                            \n                                    \n                                    \n                                NODE_ENV\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                PORT\n                            \n                            \n                                    \n                                    \n                                STORAGE_PATH\n                            \n                            \n                                    \n                                    \n                                VERSION\n                            \n                            \n                                    \n                                    \n                                WORKING_DIRECTORY\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        API_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/app.config.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BACKEND_DOMAIN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl({require_tld: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/app.config.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DESCRIPTION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/app.config.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DOMAIN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl({require_tld: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/app.config.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        FALLBACK_LANGUAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/app.config.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        HEADER_LANGUAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/app.config.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/app.config.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/app.config.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        NODE_ENV\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Environment\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(Environment)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/app.config.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(0)@Max(65535)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/app.config.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        STORAGE_PATH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/app.config.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        VERSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/app.config.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        WORKING_DIRECTORY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/app.config.ts:66\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { registerAs } from '@nestjs/config';\nimport { AppConfig } from './config.type';\nimport { validateConfig } from '@common/validators';\nimport {\n  IsEnum,\n  IsInt,\n  IsOptional,\n  IsString,\n  IsUrl,\n  Max,\n  Min,\n} from 'class-validator';\n\nenum Environment {\n  DEVELOPMENT = 'development',\n  STAGING = 'staging',\n  PRODUCTION = 'production',\n  TEST = 'test',\n  PROVISION = 'provision',\n  QA = 'qa',\n  UAT = 'uat',\n  DEMO = 'demo',\n  LOCAL = 'local',\n  DOCKER = 'docker',\n  DOCKER_COMPOSE = 'docker-compose',\n  KUBERNETES = 'kubernetes',\n  OPENSHIFT = 'openshift',\n  HEROKU = 'heroku',\n  AWS = 'aws',\n  AZURE = 'azure',\n  GOOGLE_CLOUD = 'google-cloud',\n  DIGITAL_OCEAN = 'digital-ocean',\n  LINODE = 'linode',\n  VULTR = 'vultr',\n  OTHER = 'other',\n}\n\nclass EnvironmentVariablesValidator {\n  @IsEnum(Environment)\n  @IsOptional()\n  NODE_ENV: Environment;\n\n  @IsString()\n  NAME: string;\n\n  @IsString()\n  @IsOptional()\n  DESCRIPTION: string;\n\n  @IsString()\n  @IsOptional()\n  VERSION: string;\n\n  @IsInt()\n  @Min(0)\n  @Max(65535)\n  @IsOptional()\n  PORT: number;\n\n  @IsString()\n  @IsOptional()\n  KEY: string;\n\n  @IsString()\n  @IsOptional()\n  WORKING_DIRECTORY: string;\n\n  @IsUrl({ require_tld: false })\n  @IsOptional()\n  BACKEND_DOMAIN: string;\n\n  @IsUrl({ require_tld: false })\n  @IsOptional()\n  DOMAIN: string;\n\n  @IsString()\n  @IsOptional()\n  API_PREFIX: string;\n\n  @IsString()\n  @IsOptional()\n  FALLBACK_LANGUAGE: string;\n\n  @IsString()\n  @IsOptional()\n  HEADER_LANGUAGE: string;\n\n  @IsString()\n  @IsOptional()\n  STORAGE_PATH: string;\n}\n\nexport default registerAs('app', () => {\n  validateConfig(process.env, EnvironmentVariablesValidator);\n  return {\n    nodeEnv: process.env.NODE_ENV || Environment.DEVELOPMENT,\n    name: process.env.NAME || 'app',\n    description: process.env.DESCRIPTION || 'app',\n    version: process.env.VERSION || '1.0',\n    port: process.env.PORT ? parseInt(process.env.PORT, 10) : 3000,\n    key: process.env.KEY || '',\n    workingDirectory: process.env.WORKING_DIRECTORY || process.cwd(),\n    backendDomain: process.env.BACKEND_DOMAIN ?? 'http://localhost',\n    domain: process.env.DOMAIN || 'http://localhost',\n    apiPrefix: process.env.API_PREFIX || 'api',\n    fallbackLanguage: process.env.FALLBACK_LANGUAGE || 'en',\n    headerLanguage: process.env.HEADER_LANGUAGE || 'x-custom-lang',\n    storagePath: process.env.STORAGE_PATH || '/',\n  };\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnvironmentVariablesValidator-1.html":{"url":"classes/EnvironmentVariablesValidator-1.html","title":"class - EnvironmentVariablesValidator-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnvironmentVariablesValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/database.config.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                DATABASE_CA\n                            \n                            \n                                    \n                                    \n                                DATABASE_CERT\n                            \n                            \n                                    \n                                    \n                                DATABASE_HOST\n                            \n                            \n                                    \n                                    \n                                DATABASE_KEY\n                            \n                            \n                                    \n                                    \n                                DATABASE_MAX_CONNECTIONS\n                            \n                            \n                                    \n                                    \n                                DATABASE_NAME\n                            \n                            \n                                    \n                                    \n                                    \n                                DATABASE_PASSWORD\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                DATABASE_PORT\n                            \n                            \n                                    \n                                    \n                                DATABASE_REJECT_UNAUTHORIZED\n                            \n                            \n                                    \n                                    \n                                DATABASE_SSL_ENABLED\n                            \n                            \n                                    \n                                    \n                                DATABASE_SYNCHRONIZE\n                            \n                            \n                                    \n                                    \n                                DATABASE_TYPE\n                            \n                            \n                                    \n                                    \n                                DATABASE_URL\n                            \n                            \n                                    \n                                    \n                                DATABASE_USERNAME\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_CA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/database.config.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_CERT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/database.config.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_HOST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateIf(envValues => )@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/database.config.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/database.config.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_MAX_CONNECTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/database.config.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateIf(envValues => )@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/database.config.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        DATABASE_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateIf(envValues => )@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/database.config.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        DATABASE_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateIf(envValues => )@IsInt()@Min(0)@Max(65535)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/database.config.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_REJECT_UNAUTHORIZED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/database.config.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_SSL_ENABLED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/database.config.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_SYNCHRONIZE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/database.config.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateIf(envValues => )@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/database.config.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateIf(envValues => envValues.DATABASE_URL)@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/database.config.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_USERNAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateIf(envValues => )@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/database.config.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { registerAs } from '@nestjs/config';\nimport { DatabaseConfig } from './config.type';\nimport {\n  IsOptional,\n  IsInt,\n  Min,\n  Max,\n  IsString,\n  ValidateIf,\n  IsBoolean,\n} from 'class-validator';\nimport validateConfig from '@common/validators/validate-config';\n\nclass EnvironmentVariablesValidator {\n  @ValidateIf((envValues) => envValues.DATABASE_URL)\n  @IsString()\n  DATABASE_URL: string;\n\n  @ValidateIf((envValues) => !envValues.DATABASE_URL)\n  @IsString()\n  DATABASE_TYPE: string;\n\n  @ValidateIf((envValues) => !envValues.DATABASE_URL)\n  @IsString()\n  DATABASE_HOST: string;\n\n  @ValidateIf((envValues) => !envValues.DATABASE_URL)\n  @IsInt()\n  @Min(0)\n  @Max(65535)\n  @IsOptional()\n  DATABASE_PORT: number;\n\n  @ValidateIf((envValues) => !envValues.DATABASE_URL)\n  @IsString()\n  @IsOptional()\n  DATABASE_PASSWORD: string;\n\n  @ValidateIf((envValues) => !envValues.DATABASE_URL)\n  @IsString()\n  DATABASE_NAME: string;\n\n  @ValidateIf((envValues) => !envValues.DATABASE_URL)\n  @IsString()\n  DATABASE_USERNAME: string;\n\n  @IsBoolean()\n  @IsOptional()\n  DATABASE_SYNCHRONIZE: boolean;\n\n  @IsInt()\n  @IsOptional()\n  DATABASE_MAX_CONNECTIONS: number;\n\n  @IsBoolean()\n  @IsOptional()\n  DATABASE_SSL_ENABLED: boolean;\n\n  @IsBoolean()\n  @IsOptional()\n  DATABASE_REJECT_UNAUTHORIZED: boolean;\n\n  @IsString()\n  @IsOptional()\n  DATABASE_CA: string;\n\n  @IsString()\n  @IsOptional()\n  DATABASE_KEY: string;\n\n  @IsString()\n  @IsOptional()\n  DATABASE_CERT: string;\n}\n\nexport default registerAs('database', () => {\n  validateConfig(process.env, EnvironmentVariablesValidator);\n\n  return {\n    url: process.env.DATABASE_URL,\n    type: process.env.DATABASE_TYPE,\n    host: process.env.DATABASE_HOST,\n    port: process.env.DATABASE_PORT\n      ? parseInt(process.env.DATABASE_PORT, 10)\n      : 5432,\n    password: process.env.DATABASE_PASSWORD,\n    name: process.env.DATABASE_NAME,\n    username: process.env.DATABASE_USERNAME,\n    synchronize: process.env.DATABASE_SYNCHRONIZE === 'true',\n    maxConnections: process.env.DATABASE_MAX_CONNECTIONS\n      ? parseInt(process.env.DATABASE_MAX_CONNECTIONS, 10)\n      : 100,\n    sslEnabled: process.env.DATABASE_SSL_ENABLED === 'true',\n    rejectUnauthorized: process.env.DATABASE_REJECT_UNAUTHORIZED === 'true',\n    ca: process.env.DATABASE_CA,\n    key: process.env.DATABASE_KEY,\n    cert: process.env.DATABASE_CERT,\n  };\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnvironmentVariablesValidator-2.html":{"url":"classes/EnvironmentVariablesValidator-2.html","title":"class - EnvironmentVariablesValidator-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnvironmentVariablesValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/mongo.config.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                MONGO_URL\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        MONGO_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/mongo.config.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\nimport { registerAs } from '@nestjs/config';\nimport { validateConfig } from '@common/validators';\nimport { MongoConfig } from '@config/config.type';\n\nclass EnvironmentVariablesValidator {\n  @IsString()\n  MONGO_URL: string;\n}\n\nexport default registerAs('mongo', () => {\n  validateConfig(process.env, EnvironmentVariablesValidator);\n\n  return {\n    type: 'mongodb',\n    url: process.env.MONGO_URL,\n  };\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnvironmentVariablesValidator-3.html":{"url":"classes/EnvironmentVariablesValidator-3.html","title":"class - EnvironmentVariablesValidator-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnvironmentVariablesValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/tax.config.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                TAX_URL\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        TAX_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/tax.config.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\nimport { validateConfig } from '@common/validators';\nimport { registerAs } from '@nestjs/config';\nimport { TaxConfig } from '@config/config.type';\n\nclass EnvironmentVariablesValidator {\n  @IsString()\n  TAX_URL: string;\n}\n\nexport default registerAs('tax', () => {\n  validateConfig(process.env, EnvironmentVariablesValidator);\n\n  return {\n    url: process.env.TAX_URL,\n  };\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileFinder.html":{"url":"classes/FileFinder.html","title":"class - FileFinder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileFinder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/file-finder.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                findFilesWithExtension\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        findFilesWithExtension\n                        \n                    \n                \n            \n            \n                \n                        \n                    findFilesWithExtension(dir: string, ext: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helpers/file-finder.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dir\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ext\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as fs from \"fs\";\nimport * as path from \"path\";\n\nexport class FileFinder {\n\n    // Function to recursively search for files with a specific extension\n    static findFilesWithExtension(dir: string, ext: string): string[] {\n        let files: string[] = [];\n\n        // Get all files and subdirectories in the current directory\n        const entries = fs.readdirSync(dir, { withFileTypes: true });\n\n        // Loop through each entry\n        for (const entry of entries) {\n            const fullPath = path.join(dir, entry.name);\n\n            // If it's a directory, recursively call findFilesWithExtension\n            if (entry.isDirectory()) {\n                files = files.concat(FileFinder.findFilesWithExtension(fullPath, ext));\n            } else {\n                // If it's a file and has the desired extension, add it to the files array\n                if (entry.name.endsWith(ext)) {\n                    files.push(fullPath);\n                }\n            }\n        }\n\n        return files;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForeignKeyConflictException.html":{"url":"classes/ForeignKeyConflictException.html","title":"class - ForeignKeyConflictException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForeignKeyConflictException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/http/exceptions/foreign-key-conflict.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/http/exceptions/foreign-key-conflict.exception.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException } from '@nestjs/common';\nimport { ErrorType } from '../../enums';\n\nexport class ForeignKeyConflictException extends ConflictException {\n  constructor() {\n    super({\n      errorType: ErrorType.ForeignKeyConflict,\n      message: `Foreign key conflict`,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GenerateCharacters.html":{"url":"classes/GenerateCharacters.html","title":"class - GenerateCharacters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GenerateCharacters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/generate-characters.helper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                pin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        pin\n                        \n                    \n                \n            \n            \n                \n                        \n                    pin(length: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helpers/generate-characters.helper.ts:3\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                length\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class GenerateCharacters {\n  // Pin: 1234\n  static pin(length: number): string {\n    return Math.random()\n      .toString()\n      .slice(2, length + 2);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HashHelper.html":{"url":"classes/HashHelper.html","title":"class - HashHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HashHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/hash.helper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                salt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                compare\n                            \n                            \n                                    Static\n                                    Async\n                                encrypt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        salt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/common/helpers/hash.helper.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        compare\n                        \n                    \n                \n            \n            \n                \n                        \n                    compare(plain: string, encrypted: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helpers/hash.helper.ts:21\n                        \n                    \n\n\n            \n                \n                        Compares encrypted and provided string\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                plain\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                encrypted\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Promise Returns Boolean if provided string and encrypted string are equal\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        encrypt\n                        \n                    \n                \n            \n            \n                \n                        \n                    encrypt(str: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helpers/hash.helper.ts:11\n                        \n                    \n\n\n            \n                \n                        Encrypts plain string\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Promise Returns encrypted\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as bcrypt from 'bcryptjs';\n\nexport class HashHelper {\n  private static salt = 10;\n\n  /**\n   * Encrypts plain string\n   * @param str {string}\n   * @returns Promise Returns encrypted\n   */\n  public static async encrypt(str: string): Promise {\n    return await bcrypt.hash(str, this.salt);\n  }\n\n  /**\n   * Compares encrypted and provided string\n   * @param plain {string}\n   * @param encrypted {string}\n   * @returns Promise Returns Boolean if provided string and encrypted string are equal\n   */\n  public static async compare(plain: string, encrypted: string): Promise {\n    return await bcrypt.compare(plain, encrypted);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n                    \n                        \n                            Defined in src/health/health.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\nimport {\n  DiskHealthIndicator,\n  HealthCheck,\n  HealthCheckService,\n  MemoryHealthIndicator,\n} from '@nestjs/terminus';\nimport { AllConfigType } from '@config/config.type';\nimport { ConfigService } from '@nestjs/config';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Health')\n@Controller('health')\nexport class HealthController {\n  constructor(\n    private healthCheckService: HealthCheckService,\n    private memoryHealthIndicator: MemoryHealthIndicator,\n    private diskHealthIndicator: DiskHealthIndicator,\n    private configService: ConfigService,\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  check() {\n    return this.healthCheckService.check([\n      () =>\n        this.memoryHealthIndicator.checkHeap('memory heap', 300 * 1024 * 1024),\n      // The process should not have more than 300MB RSS memory allocated\n      () =>\n        this.memoryHealthIndicator.checkRSS('memory RSS', 300 * 1024 * 1024),\n      // the used disk storage should not exceed the 50% of the available space\n      () =>\n        this.diskHealthIndicator.checkStorage('disk health', {\n          thresholdPercent: 0.5,\n          path: this.configService.get('app.storagePath', { infer: true }),\n        }),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HealthController } from './health.controller';\nimport { TerminusModule } from '@nestjs/terminus';\n\n@Module({\n  controllers: [HealthController],\n  imports: [TerminusModule],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/http/http-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/http/http-exception.filter.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        HttpException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException } from '@nestjs/common';\nimport { HttpErrorType } from './http-error-type';\nimport { ErrorType } from '../enums';\nimport { Response } from 'express';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const status = +exception.getStatus();\n\n    let { errorType, message } = exception.getResponse() as {\n      errorType: ErrorType | string;\n      message: string | string[];\n    };\n\n    if (!errorType) {\n      errorType = HttpErrorType[status];\n      errorType = errorType ?? 'UNEXPECTED_ERROR';\n    }\n\n    response.status(status).json({\n      statusCode: status,\n      errorType,\n      message,\n      timestamp: new Date().getTime(),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpResponseInterceptor.html":{"url":"injectables/HttpResponseInterceptor.html","title":"injectable - HttpResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpResponseInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/http/response.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/http/response.interceptor.ts:19\n                        \n                    \n\n\n            \n                \n                        Intercept the request and add the timestamp\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                :Response, timestamp: string }\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { ResponseDto } from '../dtos/response.dto';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class HttpResponseInterceptor implements NestInterceptor {\n  /**\n   * Intercept the request and add the timestamp\n   * @param context {ExecutionContext}\n   * @param next {CallHandler}\n   * @returns { payload:Response, timestamp: string }\n   */\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    const timestamp = new Date().getTime();\n    return next.handle().pipe(\n      map((payload) => {\n        return { payload, timestamp };\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IntegerPrimaryIdEntity.html":{"url":"classes/IntegerPrimaryIdEntity.html","title":"class - IntegerPrimaryIdEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IntegerPrimaryIdEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/entities/integer-primary-id.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    Optional\n                                __entity\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                setEntityName\n                            \n                            \n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({name: 'id', type: 'integer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/entities/integer-primary-id.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        __entity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Base\n\n                            \n                        \n                    \n                        \n                                Defined in         Base:36\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at', type: 'timestamp with time zone', update: false, nullable: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Base\n\n                            \n                        \n                    \n                        \n                                Defined in         Base:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: 'deleted_at', type: 'timestamp with time zone', nullable: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Base\n\n                            \n                        \n                    \n                        \n                                Defined in         Base:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: 'updated_at', type: 'timestamp with time zone', onUpdate: 'now()', nullable: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Base\n\n                            \n                        \n                    \n                        \n                                Defined in         Base:27\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setEntityName\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityName()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @AfterLoad()\n                \n            \n\n                    \n                        \n                            Inherited from         Base\n\n                        \n                    \n                    \n                        \n                                Defined in         Base:39\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toJSON\n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n                    \n                        \n                            Inherited from         Base\n\n                        \n                    \n                    \n                        \n                                Defined in         Base:43\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PrimaryGeneratedColumn } from 'typeorm';\nimport { Base } from '@common/entities/base.entity';\n\nexport class IntegerPrimaryIdEntity extends Base {\n  @PrimaryGeneratedColumn({ name: 'id', type: 'integer' })\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidCredentialsException.html":{"url":"classes/InvalidCredentialsException.html","title":"class - InvalidCredentialsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidCredentialsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/http/exceptions/invalid-credentials.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/http/exceptions/invalid-credentials.exception.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UnauthorizedException } from '@nestjs/common';\nimport { ErrorType } from '../../enums';\n\nexport class InvalidCredentialsException extends UnauthorizedException {\n  constructor() {\n    super({\n      errorType: ErrorType.InvalidCredentials,\n      message: 'Invalid credentials',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidCurrentPasswordException.html":{"url":"classes/InvalidCurrentPasswordException.html","title":"class - InvalidCurrentPasswordException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidCurrentPasswordException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/http/exceptions/invalid-current-password.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ForbiddenException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/http/exceptions/invalid-current-password.exception.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ForbiddenException } from '@nestjs/common';\nimport { ErrorType } from '../../enums';\n\nexport class InvalidCurrentPasswordException extends ForbiddenException {\n  constructor() {\n    super({\n      errorType: ErrorType.InvalidCurrentPassword,\n      message: 'The current password is invalid',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidCurrentPinException.html":{"url":"classes/InvalidCurrentPinException.html","title":"class - InvalidCurrentPinException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidCurrentPinException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/http/exceptions/InvalidCurrentPinException.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ForbiddenException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/http/exceptions/InvalidCurrentPinException.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ForbiddenException } from '@nestjs/common';\nimport { ErrorType } from '@common/enums';\n\nexport class InvalidCurrentPinException extends ForbiddenException {\n  constructor() {\n    super({\n      errorType: ErrorType.InvalidCurrentPin,\n      message: 'The current pin is invalid.',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidTokenException.html":{"url":"classes/InvalidTokenException.html","title":"class - InvalidTokenException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidTokenException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/http/exceptions/invalid-token.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/http/exceptions/invalid-token.exception.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UnauthorizedException } from '@nestjs/common';\nimport { ErrorType } from '../../enums';\n\nexport class InvalidTokenException extends UnauthorizedException {\n  constructor() {\n    super({ errorType: ErrorType.InvalidToken });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IsExist.html":{"url":"injectables/IsExist.html","title":"injectable - IsExist","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IsExist\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/validators/is-exists.validator.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataSource: DataSource)\n                    \n                \n                        \n                            \n                                Defined in src/common/validators/is-exists.validator.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(value: string, validationArguments: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/validators/is-exists.validator.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                validationArguments\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n} from 'class-validator';\nimport { DataSource } from 'typeorm';\nimport { InjectDataSource } from '@nestjs/typeorm';\nimport { ValidationArguments } from 'class-validator/types/validation/ValidationArguments';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\n@ValidatorConstraint({ name: 'IsExist', async: true })\nexport class IsExist implements ValidatorConstraintInterface {\n  constructor(\n    @InjectDataSource()\n    private dataSource: DataSource,\n  ) {}\n\n  async validate(value: string, validationArguments: ValidationArguments) {\n    const repository = validationArguments.constraints[0];\n    const pathToProperty = validationArguments.constraints[1];\n    const entity: unknown = await this.dataSource\n      .getRepository(repository)\n      .findOne({\n        where: {\n          [pathToProperty ? pathToProperty : validationArguments.property]:\n            pathToProperty ? value?.[pathToProperty] : value,\n        },\n      });\n\n    return Boolean(entity);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IsNotExist.html":{"url":"injectables/IsNotExist.html","title":"injectable - IsNotExist","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IsNotExist\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/validators/is-not-exists.validator.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataSource: DataSource)\n                    \n                \n                        \n                            \n                                Defined in src/common/validators/is-not-exists.validator.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(value: string, validationArguments: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/validators/is-not-exists.validator.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                validationArguments\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n} from 'class-validator';\nimport { DataSource } from 'typeorm';\nimport { ValidationArguments } from 'class-validator/types/validation/ValidationArguments';\nimport { Injectable } from '@nestjs/common';\nimport { InjectDataSource } from '@nestjs/typeorm';\n\ntype ValidationEntity =\n  | {\n      id?: number | string;\n    }\n  | undefined;\n\n@Injectable()\n@ValidatorConstraint({ name: 'IsNotExist', async: true })\nexport class IsNotExist implements ValidatorConstraintInterface {\n  constructor(\n    @InjectDataSource()\n    private dataSource: DataSource,\n  ) {}\n\n  async validate(value: string, validationArguments: ValidationArguments) {\n    const repository = validationArguments.constraints[0] as string;\n    const currentValue = validationArguments.object as ValidationEntity;\n    const entity = (await this.dataSource.getRepository(repository).findOne({\n      where: {\n        [validationArguments.property]: value,\n      },\n    })) as ValidationEntity;\n\n    if (entity?.id === currentValue?.id) {\n      return true;\n    }\n\n    return !entity;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggingInterceptor.html":{"url":"injectables/LoggingInterceptor.html","title":"injectable - LoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/logging.interceptors.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/interceptors/logging.interceptors.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/interceptors/logging.interceptors.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(LoggingInterceptor.name)\n                    \n                \n                    \n                        \n                                Defined in src/common/interceptors/logging.interceptors.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Logger,\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class LoggingInterceptor implements NestInterceptor {\n  private readonly logger = new Logger(LoggingInterceptor.name);\n\n  constructor() {}\n\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const url = context.getArgByIndex(0).originalUrl;\n    this.logger.log(`Before ${url}`);\n\n    const now = Date.now();\n    return next.handle().pipe(\n      tap(async () => {\n        this.logger.log(`After ${url}... ${Date.now() - now}ms`);\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Order.html":{"url":"entities/Order.html","title":"entity - Order","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/orders/entities/order.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amount\n                            \n                            \n                                    \n                                businessId\n                            \n                            \n                                    \n                                departmentId\n                            \n                            \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'amount', type: 'decimal'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/entities/order.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        businessId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'business_id', type: 'uuid', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/entities/order.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        departmentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'customer_id', type: 'uuid', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/entities/order.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'status', type: 'enum', enum: undefined, default: 'pending'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/entities/order.entity.ts:32\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity } from 'typeorm';\nimport { UuidPrimaryIdEntity } from '@common/entities';\n\n@Entity({ schema: 'sale', name: 'orders' })\nexport class Order extends UuidPrimaryIdEntity {\n  @Column({\n    name: 'business_id',\n    type: 'uuid',\n    nullable: false,\n  })\n  businessId: string;\n\n  @Column({\n    name: 'customer_id',\n    type: 'uuid',\n    nullable: false,\n  })\n  departmentId: string;\n\n  @Column({\n    name: 'amount',\n    type: 'decimal',\n  })\n  amount: number;\n\n  @Column({\n    name: 'status',\n    type: 'enum',\n    enum: ['pending', 'completed', 'cancelled'],\n    default: 'pending',\n  })\n  status: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderMapper.html":{"url":"classes/OrderMapper.html","title":"class - OrderMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/orders/order.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toDto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toDto\n                        \n                    \n                \n            \n            \n                \n                        \n                    toDto(entity: Order)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/orders/order.mapper.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                            Order\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         OrderResponseDto\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { OrderResponseDto } from '@modules/orders/dto/order-response.dto';\nimport { Order } from '@modules/orders/entities/order.entity';\n\nexport class OrderMapper {\n  static toDto(entity: Order): OrderResponseDto {\n    const dto = new OrderResponseDto();\n    dto.id = entity.id;\n    dto.businessId = entity.businessId;\n    dto.departmentId = entity.departmentId;\n    dto.amount = entity.amount;\n    dto.status = entity.status;\n    dto.createdAt = entity.createdAt;\n    return dto;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderResponseDto.html":{"url":"classes/OrderResponseDto.html","title":"class - OrderResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/orders/dto/order-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amount\n                            \n                            \n                                    \n                                businessId\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                departmentId\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dto/order-response.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        businessId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dto/order-response.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dto/order-response.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        departmentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dto/order-response.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dto/order-response.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dto/order-response.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class OrderResponseDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  businessId: string;\n\n  @ApiProperty()\n  departmentId: string;\n\n  @ApiProperty()\n  amount: number;\n\n  @ApiProperty()\n  status: string;\n\n  @ApiProperty()\n  createdAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrdersController.html":{"url":"controllers/OrdersController.html","title":"controller - OrdersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrdersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/orders/orders.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                calculateCreditScore\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                createOrder\n                            \n                            \n                                    \n                                    \n                                    \n                                getOrderDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        calculateCreditScore\n                        \n                    \n                \n            \n            \n                \n                        \n                    calculateCreditScore(businessId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({description: 'Calculate credit score'})@ApiOkResponse()@Get('business/:businessId/credit-score')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/orders/orders.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                businessId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        createOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrder(createOrderDto: CreateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({description: 'Create order'})@ApiGlobalResponse(OrderResponseDto)@ApiConflictResponse({description: 'Order already exist'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/orders/orders.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createOrderDto\n                                            \n                                                            CreateOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getOrderDetails\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOrderDetails(businessId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({description: 'Get order details'})@ApiOkResponse()@Get('business/:businessId/details')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/orders/orders.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                businessId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { OrdersService } from './orders.service';\nimport { CreateOrderDto } from './dto/create-order.dto';\nimport { ApiConflictResponse, ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\nimport { ApiGlobalResponse } from '@common/decorators';\nimport { OrderResponseDto } from '@modules/orders/dto/order-response.dto';\n\n@ApiTags('Orders')\n@Controller({\n  path: 'orders',\n  version: '1',\n})\nexport class OrdersController {\n  constructor(private readonly ordersService: OrdersService) {}\n\n  @ApiOperation({ description: 'Create order' })\n  @ApiGlobalResponse(OrderResponseDto)\n  @ApiConflictResponse({ description: 'Order already exist' })\n  @Post()\n  createOrder(@Body(ValidationPipe) createOrderDto: CreateOrderDto) {\n    return this.ordersService.createOrder(createOrderDto);\n  }\n\n  @ApiOperation({ description: 'Get order details' })\n  @ApiOkResponse()\n  @Get('business/:businessId/details')\n  getOrderDetails(@Param('businessId') businessId: string) {\n    return this.ordersService.getOrderDetails(businessId);\n  }\n\n  @ApiOperation({ description: 'Calculate credit score' })\n  @ApiOkResponse()\n  @Get('business/:businessId/credit-score')\n  calculateCreditScore(@Param('businessId') businessId: string) {\n    return this.ordersService.calculateCreditScore(businessId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrdersModule.html":{"url":"modules/OrdersModule.html","title":"module - OrdersModule","body":"\n                   \n\n\n\n\n    Modules\n    OrdersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_providers\n\n\n\n\nOrdersService\n\nOrdersService\n\n\n\nOrdersModule\n\nOrdersModule\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\nTaxService\n\nTaxService\n\nOrdersModule -->\n\nTaxService->OrdersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/orders/orders.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrdersService\n                        \n                        \n                            TaxService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrdersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrdersService } from './orders.service';\nimport { OrdersController } from './orders.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Order } from '@modules/orders/entities/order.entity';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { OrderSchema } from '@modules/orders/schemas/order.schema';\nimport { TaxService } from '@modules/orders/tax.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Order]),\n    MongooseModule.forFeature([{ name: 'Order', schema: OrderSchema }]),\n  ],\n  controllers: [OrdersController],\n  providers: [OrdersService, TaxService],\n})\nexport class OrdersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrdersService.html":{"url":"injectables/OrdersService.html","title":"injectable - OrdersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrdersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/orders/orders.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                calculateCreditScore\n                            \n                            \n                                    Async\n                                createOrder\n                            \n                            \n                                    Async\n                                getOrderDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orderRepository: Repository, orderModel: Model, taxService: TaxService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/orders/orders.service.ts:15\n                            \n                        \n\n                \n                    \n                            Constructs the OrdersService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        orderRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe repository for Order entities.\n\n\n                                                        \n                                                \n                                                \n                                                        orderModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Mongoose model for Order documents.\n\n\n                                                        \n                                                \n                                                \n                                                        taxService\n                                                  \n                                                        \n                                                                        TaxService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe service for handling tax-related operations.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        calculateCreditScore\n                        \n                    \n                \n            \n            \n                \n                        \n                    calculateCreditScore(businessId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/orders/orders.service.ts:87\n                        \n                    \n\n\n            \n                \n                        Calculates the credit score for a specific business.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                businessId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the business.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                An object containing the credit score.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrder(createOrderDto: CreateOrderDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/orders/orders.service.ts:35\n                        \n                    \n\n\n            \n                \n                        Creates a new order.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createOrderDto\n                                            \n                                                            CreateOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing order details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The created order as a DTO.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOrderDetails\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOrderDetails(businessId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/orders/orders.service.ts:64\n                        \n                    \n\n\n            \n                \n                        Retrieves order details for a specific business.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                businessId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the business.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                An object containing the total number of orders and the total amount.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(OrdersService.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/orders.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, InternalServerErrorException, Logger } from \"@nestjs/common\";\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\n\nimport { OrderDocument } from '@modules/orders/schemas/order.schema';\nimport { Order } from '@modules/orders/entities/order.entity';\nimport { CreateOrderDto } from '@modules/orders/dto/create-order.dto';\nimport { OrderMapper } from '@modules/orders/order.mapper';\nimport { TaxService } from '@modules/orders/tax.service';\n\n@Injectable()\nexport class OrdersService {\n  private readonly logger = new Logger(OrdersService.name);\n\n  /**\n   * Constructs the OrdersService.\n   * @param orderRepository - The repository for Order entities.\n   * @param orderModel - The Mongoose model for Order documents.\n   * @param taxService - The service for handling tax-related operations.\n   */\n  constructor(\n    @InjectRepository(Order)\n    private orderRepository: Repository,\n    @InjectModel('Order') private orderModel: Model,\n    private taxService: TaxService,\n  ) {}\n\n  /**\n   * Creates a new order.\n   * @param createOrderDto - The data transfer object containing order details.\n   * @returns The created order as a DTO.\n   */\n  async createOrder(createOrderDto: CreateOrderDto) {\n    const queryRunner =\n      this.orderRepository.manager.connection.createQueryRunner();\n    await queryRunner.connect();\n    await queryRunner.startTransaction();\n\n    try {\n      const orderEntity = this.orderRepository.create(createOrderDto);\n      const order = await queryRunner.manager.save(orderEntity);\n      await this.orderModel.create(createOrderDto);\n\n      await this.taxService.logTaxData(createOrderDto);\n      await queryRunner.commitTransaction();\n\n      return OrderMapper.toDto(order);\n    } catch (error) {\n      await queryRunner.rollbackTransaction();\n      this.logger.error('Error creating order', error);\n      throw new InternalServerErrorException('Error creating order');\n    } finally {\n      await queryRunner.release();\n    }\n  }\n\n  /**\n   * Retrieves order details for a specific business.\n   * @param businessId - The ID of the business.\n   * @returns An object containing the total number of orders and the total amount.\n   */\n  async getOrderDetails(businessId: string) {\n    try {\n      const totalOrders = await this.orderRepository.count({\n        where: { businessId },\n      });\n      const totalAmount = await this.orderRepository\n        .createQueryBuilder()\n        .select('SUM(amount)', 'sum')\n        .where('business_id = :businessId', { businessId })\n        .getRawOne();\n\n      return { totalOrders, totalAmount };\n    } catch (error) {\n      this.logger.error('Error retrieving order details', error);\n      throw new InternalServerErrorException('Error retrieving order details');\n    }\n  }\n\n  /**\n   * Calculates the credit score for a specific business.\n   * @param businessId - The ID of the business.\n   * @returns An object containing the credit score.\n   */\n  async calculateCreditScore(businessId: string) {\n    try {\n      const orders = await this.orderModel.find({ businessId }).exec();\n      return { score: Math.min(100, orders.length * 10) };\n    } catch (error) {\n      this.logger.error('Error calculating credit score', error);\n      throw new InternalServerErrorException('Error calculating credit score');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pagination.html":{"url":"classes/Pagination.html","title":"class - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/libs/pagination/pagination.helper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                of\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        of\n                        \n                    \n                \n            \n            \n                \n                        \n                    of(undefined: PaginationRequest, totalRecords: number, dtos: T[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/libs/pagination/pagination.helper.ts:12\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Return pagination response\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            PaginationRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                totalRecords\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dtos\n                                            \n                                                        T[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PaginationResponseDto\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PaginationResponseDto } from './pagination-response.dto';\nimport { PaginationRequest } from './interfaces';\n\nexport class Pagination {\n  /**\n   * Return pagination response\n   * @param PaginationRequest {PaginationRequest}\n   * @param totalRecords {number}\n   * @param dtos {t[]}\n   * @returns {PaginationResponseDto}\n   */\n  static of(\n    { limit, page, skip }: PaginationRequest,\n    totalRecords: number,\n    dtos: T[],\n  ): PaginationResponseDto {\n    const totalPages =\n      Math.floor(totalRecords / limit) + (totalRecords % limit > 0 ? 1 : 0);\n    const currentPage = +page > 0 ? +page : 1;\n    const hasNext = currentPage \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginationRequest.html":{"url":"interfaces/PaginationRequest.html","title":"interface - PaginationRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginationRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/libs/pagination/interfaces/pagination-request.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface intended for requesting results paginated\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            limit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            order\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            page\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            params\n                                        \n                                \n                                \n                                        \n                                            skip\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The index of the page where the pagination should start from.\nIt's intended for the same purpose that skip, but the latter represents an amount of\nrecords that should be skipped.\nShould be used only when needed to handle the pagination by the current page index.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        params:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PaginationRequest {\n  // Number of records to skip (where the pagination shall start)\n  skip: number;\n  /**\n   * The index of the page where the pagination should start from.\n   *\n   * It's intended for the same purpose that `skip`, but the latter represents an amount of\n   * records that should be skipped.\n   *\n   * Should be used only when needed to handle the pagination by the current page index.\n   */\n  page?: number;\n\n  // Page size\n  limit: number;\n\n  // Sort order\n  order?: { [field: string]: 'ASC' | 'DESC' };\n\n  // Other params of type T\n  params?: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationResponseDto.html":{"url":"classes/PaginationResponseDto.html","title":"class - PaginationResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/libs/pagination/pagination-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                content\n                            \n                            \n                                    \n                                currentPage\n                            \n                            \n                                    \n                                hasNext\n                            \n                            \n                                    \n                                payloadSize\n                            \n                            \n                                    \n                                skippedRecords\n                            \n                            \n                                    \n                                totalPages\n                            \n                            \n                                    \n                                totalRecords\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/libs/pagination/pagination-response.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/libs/pagination/pagination-response.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hasNext\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/libs/pagination/pagination-response.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        payloadSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/libs/pagination/pagination-response.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skippedRecords\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/libs/pagination/pagination-response.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        totalPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/libs/pagination/pagination-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        totalRecords\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/libs/pagination/pagination-response.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class PaginationResponseDto {\n  @ApiProperty({ example: 1 })\n  currentPage: number;\n  @ApiProperty({ example: 0 })\n  skippedRecords: number;\n  @ApiProperty({ example: 1 })\n  totalPages: number;\n  @ApiProperty({ example: false })\n  hasNext: boolean;\n  @ApiProperty()\n  content: T[];\n  @ApiProperty({ example: 1 })\n  payloadSize: number;\n  @ApiProperty({ example: 1 })\n  totalRecords: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PermissionExistsException.html":{"url":"classes/PermissionExistsException.html","title":"class - PermissionExistsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PermissionExistsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/http/exceptions/permission-exists.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(slug: string)\n                    \n                \n                        \n                            \n                                Defined in src/common/http/exceptions/permission-exists.exception.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        slug\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException } from '@nestjs/common';\nimport { ErrorType } from '../../enums';\n\nexport class PermissionExistsException extends ConflictException {\n  constructor(slug: string) {\n    super({\n      errorType: ErrorType.PermissionExists,\n      message: `There's a permission with slug '${slug}'`,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshTokenExpiredException.html":{"url":"classes/RefreshTokenExpiredException.html","title":"class - RefreshTokenExpiredException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshTokenExpiredException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/http/exceptions/refresh-token-expired.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/http/exceptions/refresh-token-expired.exception.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UnauthorizedException } from '@nestjs/common';\nimport { ErrorType } from '../../enums';\n\nexport class RefreshTokenExpiredException extends UnauthorizedException {\n  constructor() {\n    super({\n      errorType: ErrorType.RefreshTokenExpired,\n      message: 'Refresh token has expired',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResponseDto.html":{"url":"classes/ResponseDto.html","title":"class - ResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/response.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Dto for the response\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                payload\n                            \n                            \n                                    \n                                timestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/response.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        timestamp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1617826799860})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/response.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n/**\n * Dto for the response\n */\nexport class ResponseDto {\n  @ApiProperty()\n  payload: T;\n  @ApiProperty({ example: 1617826799860 })\n  timestamp: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleExistsException.html":{"url":"classes/RoleExistsException.html","title":"class - RoleExistsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleExistsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/http/exceptions/role-exists.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in src/common/http/exceptions/role-exists.exception.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException } from '@nestjs/common';\nimport { ErrorType } from '../../enums';\n\nexport class RoleExistsException extends ConflictException {\n  constructor(name: string) {\n    super({\n      errorType: ErrorType.RoleExists,\n      message: `There's a role with name '${name}'`,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaxService.html":{"url":"injectables/TaxService.html","title":"injectable - TaxService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaxService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/orders/tax.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                logTaxData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/orders/tax.service.ts:8\n                            \n                        \n\n                \n                    \n                            Constructs the TaxService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe service for accessing configuration values.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        logTaxData\n                        \n                    \n                \n            \n            \n                \n                        \n                    logTaxData(createOrderDto: CreateOrderDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/orders/tax.service.ts:20\n                        \n                    \n\n\n            \n                \n                        Logs tax data by sending a POST request to the configured tax URL.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createOrderDto\n                                            \n                                                            CreateOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing order details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                A promise that resolves when the tax data is logged.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { AllConfigType } from '@config/config.type';\nimport { CreateOrderDto } from '@modules/orders/dto/create-order.dto';\nimport axios from 'axios';\n\n@Injectable()\nexport class TaxService {\n  /**\n   * Constructs the TaxService.\n   * @param configService - The service for accessing configuration values.\n   */\n  constructor(private configService: ConfigService) {}\n\n  /**\n   * Logs tax data by sending a POST request to the configured tax URL.\n   * @param createOrderDto - The data transfer object containing order details.\n   * @returns A promise that resolves when the tax data is logged.\n   */\n  async logTaxData(createOrderDto: CreateOrderDto) {\n    try {\n      const response = await axios.post(\n        this.configService.get('tax.url', {\n          infer: true,\n        }),\n        createOrderDto,\n      );\n      console.log(response);\n    } catch (error) {\n      console.error('Failed to log tax data:', error.message);\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TypeOrmConfigService.html":{"url":"injectables/TypeOrmConfigService.html","title":"injectable - TypeOrmConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TypeOrmConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/typeorm-config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTypeOrmOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/database/typeorm-config.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createTypeOrmOptions\n                        \n                    \n                \n            \n            \n                \ncreateTypeOrmOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/typeorm-config.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     TypeOrmModuleOptions\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { TypeOrmModuleOptions, TypeOrmOptionsFactory } from '@nestjs/typeorm';\nimport { AllConfigType } from 'src/config/config.type';\n\n@Injectable()\nexport class TypeOrmConfigService implements TypeOrmOptionsFactory {\n  constructor(private configService: ConfigService) {}\n\n  createTypeOrmOptions(): TypeOrmModuleOptions {\n    return {\n      type: this.configService.get('database.type', { infer: true }),\n      url: this.configService.get('database.url', { infer: true }),\n      host: this.configService.get('database.host', { infer: true }),\n      port: this.configService.get('database.port', { infer: true }),\n      username: this.configService.get('database.username', { infer: true }),\n      password: this.configService.get('database.password', { infer: true }),\n      database: this.configService.get('database.name', { infer: true }),\n      synchronize: this.configService.get('database.synchronize', {\n        infer: true,\n      }),\n      dropSchema: false,\n      keepConnectionAlive: true,\n      logging:\n        this.configService.get('app.nodeEnv', { infer: true }) !== 'production',\n      entities: [__dirname + '/../**/*.entity{.ts,.js}'],\n      migrations: [__dirname + '/migrations/**/*{.ts,.js}'],\n      cli: {\n        entitiesDir: 'src',\n        migrationsDir: 'src/database/migrations',\n        subscribersDir: 'subscriber',\n      },\n      extra: {\n        // based on https://node-postgres.com/apis/pool\n        // max connection pool size\n        max: this.configService.get('database.maxConnections', { infer: true }),\n        ssl: this.configService.get('database.sslEnabled', { infer: true })\n          ? {\n              rejectUnauthorized: this.configService.get(\n                'database.rejectUnauthorized',\n                { infer: true },\n              ),\n              ca:\n                this.configService.get('database.ca', { infer: true }) ??\n                undefined,\n              key:\n                this.configService.get('database.key', { infer: true }) ??\n                undefined,\n              cert:\n                this.configService.get('database.cert', { infer: true }) ??\n                undefined,\n            }\n          : undefined,\n      },\n    } as TypeOrmModuleOptions;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOrderDto.html":{"url":"classes/UpdateOrderDto.html","title":"class - UpdateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/orders/dto/update-order.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateOrderDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateOrderDto } from './create-order.dto';\n\nexport class UpdateOrderDto extends PartialType(CreateOrderDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserExistsException.html":{"url":"classes/UserExistsException.html","title":"class - UserExistsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserExistsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/http/exceptions/user-exists.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string)\n                    \n                \n                        \n                            \n                                Defined in src/common/http/exceptions/user-exists.exception.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException } from '@nestjs/common';\nimport { ErrorType } from '../../enums';\n\nexport class UserExistsException extends ConflictException {\n  constructor(username: string) {\n    super({\n      errorType: ErrorType.UserExists,\n      message: `There's a user with email '${username}'`,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UuidPrimaryIdEntity.html":{"url":"classes/UuidPrimaryIdEntity.html","title":"class - UuidPrimaryIdEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UuidPrimaryIdEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/entities/uuid-primary-id.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    Optional\n                                __entity\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                setEntityName\n                            \n                            \n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/entities/uuid-primary-id.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        __entity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Base\n\n                            \n                        \n                    \n                        \n                                Defined in         Base:36\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at', type: 'timestamp with time zone', update: false, nullable: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Base\n\n                            \n                        \n                    \n                        \n                                Defined in         Base:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: 'deleted_at', type: 'timestamp with time zone', nullable: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Base\n\n                            \n                        \n                    \n                        \n                                Defined in         Base:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: 'updated_at', type: 'timestamp with time zone', onUpdate: 'now()', nullable: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Base\n\n                            \n                        \n                    \n                        \n                                Defined in         Base:27\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setEntityName\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityName()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @AfterLoad()\n                \n            \n\n                    \n                        \n                            Inherited from         Base\n\n                        \n                    \n                    \n                        \n                                Defined in         Base:39\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toJSON\n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n                    \n                        \n                            Inherited from         Base\n\n                        \n                    \n                    \n                        \n                                Defined in         Base:43\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Base } from '@common/entities/base.entity';\nimport { PrimaryGeneratedColumn } from 'typeorm';\n\nexport class UuidPrimaryIdEntity extends Base {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/common/constants.ts\n            \n            variable\n            AUTH_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/constants.ts\n            \n            variable\n            SKIP_AUTH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/constants.ts\n            \n            variable\n            TOKEN_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/decorators/api-global-response.decorators.ts\n            \n            variable\n            ApiGlobalResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/decorators/transform.decorators.ts\n            \n            function\n            PhoneNumberSerializer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/decorators/transform.decorators.ts\n            \n            function\n            ToArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/decorators/transform.decorators.ts\n            \n            function\n            ToBoolean\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/decorators/transform.decorators.ts\n            \n            function\n            ToInt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/decorators/transform.decorators.ts\n            \n            function\n            ToLowerCase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/decorators/transform.decorators.ts\n            \n            function\n            ToUpperCase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/decorators/transform.decorators.ts\n            \n            function\n            Trim\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/dtos/response.dto.ts\n            \n            class\n            ResponseDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/common/entities/base.entity.ts\n            \n            class\n            Base\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/common/entities/integer-primary-id.entity.ts\n            \n            class\n            IntegerPrimaryIdEntity\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/entities/uuid-primary-id.entity.ts\n            \n            class\n            UuidPrimaryIdEntity\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/helpers/class-name-extractor.ts\n            \n            class\n            ClassNameExtractor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/helpers/file-finder.ts\n            \n            class\n            FileFinder\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/helpers/generate-characters.helper.ts\n            \n            class\n            GenerateCharacters\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/helpers/hash.helper.ts\n            \n            class\n            HashHelper\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/common/http/exceptions/InvalidCurrentPinException.ts\n            \n            class\n            InvalidCurrentPinException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/http/exceptions/access-token-expired.exception.ts\n            \n            class\n            AccessTokenExpiredException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/http/exceptions/application-exist.exception.ts\n            \n            class\n            ApplicatonExistException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/http/exceptions/customer-exist.exception.ts\n            \n            class\n            CustomerExistException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/http/exceptions/disabled-user.exception.ts\n            \n            class\n            DisabledUserException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/http/exceptions/foreign-key-conflict.exception.ts\n            \n            class\n            ForeignKeyConflictException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/http/exceptions/invalid-credentials.exception.ts\n            \n            class\n            InvalidCredentialsException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/http/exceptions/invalid-current-password.exception.ts\n            \n            class\n            InvalidCurrentPasswordException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/http/exceptions/invalid-token.exception.ts\n            \n            class\n            InvalidTokenException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/http/exceptions/permission-exists.exception.ts\n            \n            class\n            PermissionExistsException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/http/exceptions/refresh-token-expired.exception.ts\n            \n            class\n            RefreshTokenExpiredException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/http/exceptions/role-exists.exception.ts\n            \n            class\n            RoleExistsException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/http/exceptions/user-exists.exception.ts\n            \n            class\n            UserExistsException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/common/http/http-error-type.ts\n            \n            variable\n            HttpErrorType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/http/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/http/response.interceptor.ts\n            \n            injectable\n            HttpResponseInterceptor\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/common/interceptors/logging.interceptors.ts\n            \n            injectable\n            LoggingInterceptor\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/common/libs/pagination/decorators/api-paginated-response.decorador.ts\n            \n            variable\n            ApiPaginatedResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/libs/pagination/decorators/pagination-params.decorator.ts\n            \n            variable\n            PaginationParams\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/libs/pagination/interfaces/default-pagination.interface.ts\n            \n            interface\n            DefaultPagination\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/common/libs/pagination/interfaces/pagination-request.interface.ts\n            \n            interface\n            PaginationRequest\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/common/libs/pagination/pagination-response.dto.ts\n            \n            class\n            PaginationResponseDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/libs/pagination/pagination.helper.ts\n            \n            class\n            Pagination\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                        src/common/libs/route-naming.ts\n            \n            variable\n            RouteNaming\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/transformers/lower-case.transformer.ts\n            \n            variable\n            lowerCaseTransformer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/types/entity-condition.type.ts\n            \n            type alias\n            EntityCondition\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/types/find-options.type.ts\n            \n            type alias\n            FindOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/types/maybe.type.ts\n            \n            type alias\n            MaybeType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/types/nullable.type.ts\n            \n            type alias\n            NullableType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/types/or-never.type.ts\n            \n            type alias\n            OrNeverType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/validators/is-exists.validator.ts\n            \n            injectable\n            IsExist\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/validators/is-not-exists.validator.ts\n            \n            injectable\n            IsNotExist\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/common/validators/is-not-exists.validator.ts\n            \n            type alias\n            ValidationEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/validators/validate-config.ts\n            \n            function\n            validateConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/validators/validation-options.ts\n            \n            variable\n            validationOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/app.config.ts\n            \n            class\n            EnvironmentVariablesValidator\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                        src/config/config.type.ts\n            \n            type alias\n            AllConfigType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/config/config.type.ts\n            \n            type alias\n            AppConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/config/config.type.ts\n            \n            type alias\n            AuthConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/config/config.type.ts\n            \n            type alias\n            DatabaseConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/config/config.type.ts\n            \n            type alias\n            MailConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/config/config.type.ts\n            \n            type alias\n            MongoConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/config/config.type.ts\n            \n            type alias\n            TaxConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/database.config.ts\n            \n            class\n            EnvironmentVariablesValidator\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/config/mongo.config.ts\n            \n            class\n            EnvironmentVariablesValidator\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/config/swagger.config.ts\n            \n            variable\n            description\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/config/swagger.config.ts\n            \n            variable\n            SwaggerConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/config/swagger.config.ts\n            \n            variable\n            title\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/tax.config.ts\n            \n            class\n            EnvironmentVariablesValidator\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/database/data-source.ts\n            \n            variable\n            AppDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/1730363889037-create-schema-for-sales.ts\n            \n            class\n            CreateSchemaForSales1730363889037\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/migrations/1730365329511-create-table-for-orders.ts\n            \n            class\n            CreateTableForOrders1730365329511\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/typeorm-config.service.ts\n            \n            injectable\n            TypeOrmConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/orders/dto/create-order.dto.ts\n            \n            class\n            CreateOrderDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/orders/dto/order-response.dto.ts\n            \n            class\n            OrderResponseDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/orders/dto/update-order.dto.ts\n            \n            class\n            UpdateOrderDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/orders/entities/order.entity.ts\n            \n            entity\n            Order\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/orders/order.mapper.ts\n            \n            class\n            OrderMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/orders/orders.controller.ts\n            \n            controller\n            OrdersController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/orders/orders.service.ts\n            \n            injectable\n            OrdersService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/modules/orders/schemas/order.schema.ts\n            \n            class\n            Order\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/modules/orders/schemas/order.schema.ts\n            \n            variable\n            OrderSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/modules/orders/schemas/order.schema.ts\n            \n            type alias\n            OrderDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/orders/tax.service.ts\n            \n            injectable\n            TaxService\n            \n                66 %\n                (2/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.3.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/mongoose : ^10.1.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^8.0.1\n        \n            @nestjs/terminus : ^10.2.3\n        \n            @nestjs/typeorm : ^10.0.2\n        \n            axios : ^1.7.7\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            env-cmd : ^10.1.0\n        \n            mongoose : ^8.7.3\n        \n            pg : ^8.13.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rimraf : ^6.0.1\n        \n            rxjs : ^7.8.1\n        \n            swagger-ui-express : ^5.0.1\n        \n            typeorm : ^0.3.20\n        \n            typeorm-extension : ^3.6.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DBErrorCode   (src/.../db-error-code.enum.ts)\n                        \n                        \n                            Environment   (src/.../app.config.ts)\n                        \n                        \n                            ErrorType   (src/.../error-type.enum.ts)\n                        \n                        \n                            Gender   (src/.../gender.enum.ts)\n                        \n                        \n                            JobType   (src/.../job-type.enum.ts)\n                        \n                        \n                            PaymentMethod   (src/.../payment-method.enum.ts)\n                        \n                        \n                            PaymentOptionEnum   (src/.../payment-option.enum.ts)\n                        \n                        \n                            PaymentStatus   (src/.../payment-status.enum.ts)\n                        \n                        \n                            RecurringIntervalUnit   (src/.../recurring-interval.unit.ts)\n                        \n                        \n                            TaskStatus   (src/.../task-status.enum.ts)\n                        \n                        \n                            TransactionStatusEnum   (src/.../transaction-status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/enums/db-error-code.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        DBErrorCode\n                    \n                \n                        \n                            \n                                 PgNotNullConstraintViolation\n                            \n                        \n                        \n                            \n                                Value : 23502\n                            \n                        \n                        \n                            \n                                 PgForeignKeyConstraintViolation\n                            \n                        \n                        \n                            \n                                Value : 23503\n                            \n                        \n                        \n                            \n                                 PgUniqueConstraintViolation\n                            \n                        \n                        \n                            \n                                Value : 23505\n                            \n                        \n            \n        \n\n    src/config/app.config.ts\n    \n        \n            \n                \n                    \n                        \n                        Environment\n                    \n                \n                        \n                            \n                                 DEVELOPMENT\n                            \n                        \n                        \n                            \n                                Value : development\n                            \n                        \n                        \n                            \n                                 STAGING\n                            \n                        \n                        \n                            \n                                Value : staging\n                            \n                        \n                        \n                            \n                                 PRODUCTION\n                            \n                        \n                        \n                            \n                                Value : production\n                            \n                        \n                        \n                            \n                                 TEST\n                            \n                        \n                        \n                            \n                                Value : test\n                            \n                        \n                        \n                            \n                                 PROVISION\n                            \n                        \n                        \n                            \n                                Value : provision\n                            \n                        \n                        \n                            \n                                 QA\n                            \n                        \n                        \n                            \n                                Value : qa\n                            \n                        \n                        \n                            \n                                 UAT\n                            \n                        \n                        \n                            \n                                Value : uat\n                            \n                        \n                        \n                            \n                                 DEMO\n                            \n                        \n                        \n                            \n                                Value : demo\n                            \n                        \n                        \n                            \n                                 LOCAL\n                            \n                        \n                        \n                            \n                                Value : local\n                            \n                        \n                        \n                            \n                                 DOCKER\n                            \n                        \n                        \n                            \n                                Value : docker\n                            \n                        \n                        \n                            \n                                 DOCKER_COMPOSE\n                            \n                        \n                        \n                            \n                                Value : docker-compose\n                            \n                        \n                        \n                            \n                                 KUBERNETES\n                            \n                        \n                        \n                            \n                                Value : kubernetes\n                            \n                        \n                        \n                            \n                                 OPENSHIFT\n                            \n                        \n                        \n                            \n                                Value : openshift\n                            \n                        \n                        \n                            \n                                 HEROKU\n                            \n                        \n                        \n                            \n                                Value : heroku\n                            \n                        \n                        \n                            \n                                 AWS\n                            \n                        \n                        \n                            \n                                Value : aws\n                            \n                        \n                        \n                            \n                                 AZURE\n                            \n                        \n                        \n                            \n                                Value : azure\n                            \n                        \n                        \n                            \n                                 GOOGLE_CLOUD\n                            \n                        \n                        \n                            \n                                Value : google-cloud\n                            \n                        \n                        \n                            \n                                 DIGITAL_OCEAN\n                            \n                        \n                        \n                            \n                                Value : digital-ocean\n                            \n                        \n                        \n                            \n                                 LINODE\n                            \n                        \n                        \n                            \n                                Value : linode\n                            \n                        \n                        \n                            \n                                 VULTR\n                            \n                        \n                        \n                            \n                                Value : vultr\n                            \n                        \n                        \n                            \n                                 OTHER\n                            \n                        \n                        \n                            \n                                Value : other\n                            \n                        \n            \n        \n\n    src/common/enums/error-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ErrorType\n                    \n                \n                        \n                            \n                                 InvalidToken\n                            \n                        \n                        \n                            \n                                Value : INVALID_TOKEN\n                            \n                        \n                        \n                            \n                                 AccessTokenExpired\n                            \n                        \n                        \n                            \n                                Value : ACCESS_TOKEN_EXPIRED\n                            \n                        \n                        \n                            \n                                 RefreshTokenExpired\n                            \n                        \n                        \n                            \n                                Value : REFRESH_TOKEN_EXPIRED\n                            \n                        \n                        \n                            \n                                 PermissionExists\n                            \n                        \n                        \n                            \n                                Value : PERMISSION_EXISTS\n                            \n                        \n                        \n                            \n                                 RoleExists\n                            \n                        \n                        \n                            \n                                Value : ROLE_EXISTS\n                            \n                        \n                        \n                            \n                                 UserExists\n                            \n                        \n                        \n                            \n                                Value : USER_EXISTS\n                            \n                        \n                        \n                            \n                                 InvalidCurrentPassword\n                            \n                        \n                        \n                            \n                                Value : INVALID_CURRENT_PASSWORD\n                            \n                        \n                        \n                            \n                                 InvalidCredentials\n                            \n                        \n                        \n                            \n                                Value : INVALID_CREDENTIALS\n                            \n                        \n                        \n                            \n                                 BlockedUser\n                            \n                        \n                        \n                            \n                                Value : BLOCKED_USER\n                            \n                        \n                        \n                            \n                                 InactiveUser\n                            \n                        \n                        \n                            \n                                Value : INACTIVE_USER\n                            \n                        \n                        \n                            \n                                 ForeignKeyConflict\n                            \n                        \n                        \n                            \n                                Value : FOREIGN_KEY_CONFLICT\n                            \n                        \n                        \n                            \n                                 AlreadyExists\n                            \n                        \n                        \n                            \n                                Value : ALREADY_EXISTS\n                            \n                        \n                        \n                            \n                                 PropertyAlreadyAllocated\n                            \n                        \n                        \n                            \n                                Value : PROPERTY_ALREADY_ALLOCATED\n                            \n                        \n                        \n                            \n                                 TermSettingsExist\n                            \n                        \n                        \n                            \n                                Value : TERM_SETTINGS_EXIST\n                            \n                        \n                        \n                            \n                                 InvalidCurrentPin\n                            \n                        \n                        \n                            \n                                Value : INVALID_CURRENT_PIN\n                            \n                        \n                        \n                            \n                                 PaymentVerificationFailed\n                            \n                        \n                        \n                            \n                                Value : PAYMENT_VERIFICATION_FAILED\n                            \n                        \n            \n        \n\n    src/common/enums/gender.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Gender\n                    \n                \n                        \n                            \n                                 Male\n                            \n                        \n                        \n                            \n                                Value : male\n                            \n                        \n                        \n                            \n                                 Female\n                            \n                        \n                        \n                            \n                                Value : female\n                            \n                        \n            \n        \n\n    src/common/enums/job-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        JobType\n                    \n                \n                        \n                            \n                                 GENERATE_PAYMENT_INVOICE\n                            \n                        \n                        \n                            \n                                Value : GENERATE_PAYMENT_INVOICE\n                            \n                        \n                        \n                            \n                                 UPDATE_PAYMENT_AMOUNT\n                            \n                        \n                        \n                            \n                                Value : UPDATE_PAYMENT_AMOUNT\n                            \n                        \n                        \n                            \n                                 NOT_EXPECTING_RESPONSE\n                            \n                        \n                        \n                            \n                                Value : NOT_EXPECTING_RESPONSE\n                            \n                        \n            \n        \n\n    src/common/enums/payment-method.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PaymentMethod\n                    \n                \n                        \n                            \n                                 CREDIT\n                            \n                        \n                        \n                            \n                                Value : credit\n                            \n                        \n                        \n                            \n                                 DEBIT\n                            \n                        \n                        \n                            \n                                Value : debit\n                            \n                        \n                        \n                            \n                                 TRANSFER\n                            \n                        \n                        \n                            \n                                Value : transfer\n                            \n                        \n                        \n                            \n                                 WALLET\n                            \n                        \n                        \n                            \n                                Value : wallet\n                            \n                        \n                        \n                            \n                                 CARD\n                            \n                        \n                        \n                            \n                                Value : card\n                            \n                        \n                        \n                            \n                                 BANK\n                            \n                        \n                        \n                            \n                                Value : bank\n                            \n                        \n                        \n                            \n                                 VIRTUAL_ACCOUNT\n                            \n                        \n                        \n                            \n                                Value : virtual_account\n                            \n                        \n                        \n                            \n                                 QR_CODE\n                            \n                        \n                        \n                            \n                                Value : qr_code\n                            \n                        \n                        \n                            \n                                 USSD\n                            \n                        \n                        \n                            \n                                Value : ussd\n                            \n                        \n                        \n                            \n                                 CASH\n                            \n                        \n                        \n                            \n                                Value : cash\n                            \n                        \n                        \n                            \n                                 CHEQUE\n                            \n                        \n                        \n                            \n                                Value : cheque\n                            \n                        \n                        \n                            \n                                 DIRECT_DEBIT\n                            \n                        \n                        \n                            \n                                Value : direct_debit\n                            \n                        \n                        \n                            \n                                 STANDING_ORDER\n                            \n                        \n                        \n                            \n                                Value : standing_order\n                            \n                        \n                        \n                            \n                                 MOBILE_MONEY\n                            \n                        \n                        \n                            \n                                Value : mobile_money\n                            \n                        \n                        \n                            \n                                 REMITA\n                            \n                        \n                        \n                            \n                                Value : remita\n                            \n                        \n                        \n                            \n                                 APPLE_PAY\n                            \n                        \n                        \n                            \n                                Value : apple_pay\n                            \n                        \n                        \n                            \n                                 GOOGLE_PAY\n                            \n                        \n                        \n                            \n                                Value : google_pay\n                            \n                        \n                        \n                            \n                                 OTHER\n                            \n                        \n                        \n                            \n                                Value : other\n                            \n                        \n                        \n                            \n                                 UNKNOWN\n                            \n                        \n                        \n                            \n                                Value : unknown\n                            \n                        \n            \n        \n\n    src/common/enums/payment-option.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PaymentOptionEnum\n                    \n                \n                        \n                            \n                                 FULL\n                            \n                        \n                        \n                            \n                                Value : full\n                            \n                        \n                        \n                            \n                                 PARTIAL\n                            \n                        \n                        \n                            \n                                Value : partial\n                            \n                        \n            \n        \n\n    src/common/enums/payment-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PaymentStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 PAID\n                            \n                        \n                        \n                            \n                                Value : paid\n                            \n                        \n                        \n                            \n                                 FAILED\n                            \n                        \n                        \n                            \n                                Value : failed\n                            \n                        \n                        \n                            \n                                 CANCELLED\n                            \n                        \n                        \n                            \n                                Value : cancelled\n                            \n                        \n                        \n                            \n                                 REFUNDED\n                            \n                        \n                        \n                            \n                                Value : refunded\n                            \n                        \n            \n        \n\n    src/common/enums/recurring-interval.unit.ts\n    \n        \n            \n                \n                    \n                        \n                        RecurringIntervalUnit\n                    \n                \n                        \n                            \n                                 DAY\n                            \n                        \n                        \n                            \n                                Value : day\n                            \n                        \n                        \n                            \n                                 WEEK\n                            \n                        \n                        \n                            \n                                Value : week\n                            \n                        \n                        \n                            \n                                 MONTH\n                            \n                        \n                        \n                            \n                                Value : month\n                            \n                        \n                        \n                            \n                                 QUARTER\n                            \n                        \n                        \n                            \n                                Value : quarter\n                            \n                        \n                        \n                            \n                                 YEAR\n                            \n                        \n                        \n                            \n                                Value : year\n                            \n                        \n            \n        \n\n    src/common/enums/task-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 APPROVED\n                            \n                        \n                        \n                            \n                                Value : approved\n                            \n                        \n                        \n                            \n                                 DECLINED\n                            \n                        \n                        \n                            \n                                Value : declined\n                            \n                        \n                        \n                            \n                                 CANCELLED\n                            \n                        \n                        \n                            \n                                Value : cancelled\n                            \n                        \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : completed\n                            \n                        \n            \n        \n\n    src/common/enums/transaction-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TransactionStatusEnum\n                    \n                \n                        \n                            \n                                 INITIATED\n                            \n                        \n                        \n                            \n                                Value : initiated\n                            \n                        \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : completed\n                            \n                        \n                        \n                            \n                                 IN_PROGRESS\n                            \n                        \n                        \n                            \n                                Value : in_progress\n                            \n                        \n                        \n                            \n                                 DISPUTED\n                            \n                        \n                        \n                            \n                                Value : disputed\n                            \n                        \n                        \n                            \n                                 CANCELLED\n                            \n                        \n                        \n                            \n                                Value : cancelled\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            PhoneNumberSerializer   (src/.../transform.decorators.ts)\n                        \n                        \n                            ToArray   (src/.../transform.decorators.ts)\n                        \n                        \n                            ToBoolean   (src/.../transform.decorators.ts)\n                        \n                        \n                            ToInt   (src/.../transform.decorators.ts)\n                        \n                        \n                            ToLowerCase   (src/.../transform.decorators.ts)\n                        \n                        \n                            ToUpperCase   (src/.../transform.decorators.ts)\n                        \n                        \n                            Trim   (src/.../transform.decorators.ts)\n                        \n                        \n                            validateConfig   (src/.../validate-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/common/decorators/transform.decorators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PhoneNumberSerializer\n                        \n                    \n                \n            \n            \n                \nPhoneNumberSerializer()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     PropertyDecorator\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ToArray\n                        \n                    \n                \n            \n            \n                \nToArray()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ToBoolean\n                        \n                    \n                \n            \n            \n                \nToBoolean()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     PropertyDecorator\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ToInt\n                        \n                    \n                \n            \n            \n                \nToInt()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                PropertyDecorator\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ToLowerCase\n                        \n                    \n                \n            \n            \n                \nToLowerCase()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     PropertyDecorator\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ToUpperCase\n                        \n                    \n                \n            \n            \n                \nToUpperCase()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     PropertyDecorator\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Trim\n                        \n                    \n                \n            \n            \n                \nTrim()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                PropertyDecorator\n\n                            \n                \n            \n        \n    \n    src/common/validators/validate-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validateConfig\n                        \n                    \n                \n            \n            \n                \nvalidateConfig(config: Record, envVariablesClass: ClassConstructor)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                envVariablesClass\n                                            \n                                                        ClassConstructor\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nInventory Management System\nSales Microservice\nThe Sales Microservice is a dedicated service within the Inventory Management System that handles sales order management, business credit scoring, and tax compliance for registered businesses.\n\nFeatures\n\nOrder Management: Creates and stores orders from department heads in Postgres and MongoDB.\nCredit Score Calculation: Calculates a credit score based on the business's transaction history.\nTax Compliance: Logs sales transactions to an external tax authority API for regulatory compliance.\n\n\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodDatabase\nExample :# create migration, Typeorm will automatically create a new migration file in the src/database/migrations directory from the current database schema based on the entities you have or have changed.\n$ npm run migration:create -- src/database/migrations/create-table-for-invoices\n\n# run migration, Typeorm will automatically run all pending migrations.\n$ npm run migration:run\n\n# revert migration, Typeorm will automatically revert the last migration file in the src/database/migrations directory.\n$ npm run migration:revert\n\n# show all migrations, Typeorm will automatically show all migrations in the src/database/migrations directory.\n$ npm run migration:show\n\n# generate migration, Typeorm will automatically generate a new migration file in the src/database/migrations directory based on the entities you have or have changed.\n$ npm run migration:generate\n\n# drop database, Typeorm will automatically drop the database schema.\n$ npm run schema:drop\n\n# Seed database, Typeorm will automatically seed the database schema.\n$ npm run seed:run\n\n# Create Seed, Typeorm will automatically create a new seed file in the src/database/seeds directory.\n$ npm run seed:create -- --name src/database/seeds/create-seed-for-logs\nRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDocker\nExample :# Run the docker-compose file\n$ docker-compose upAPI Documentation\nExample :# Swagger UI\nhttp://localhost:3000/api/v1.0/swagger\nAPI Endpoints\nCreate Order\n\nPOST /orders\nDescription: Registers a new order for a business.\nRequest Body:Example :{\n  \"businessId\": \"string\",\n  \"departmentId\": \"string\",\n  \"amount\": \"decimal\",\n  \"status\": \"string\"\n}\nResponse: Confirmation of order creation.\n\n\n\nRetrieve Order Details\n\nGET /orders/:businessId/details\nDescription: Retrieves total order count and amount for a specified business.\nResponse:Example :{\n  \"totalOrders\": \"number\",\n  \"totalAmount\": \"decimal\"\n}\n\n\n\nCalculate Credit Score\n\nGET /orders/:businessId/credit-score\nDescription: Returns a credit score based on the business’s transaction history.\nResponse:Example :{\n  \"score\": \"number\"\n}\n\n\n\nExternal API Integration\n\nDescription: Automatically sends each order to the tax authority’s API at https://taxes.free.beeceptor.com/log-tax.\nResponse: Logs the sales transaction to the external tax authority API.\nNote: The external API is a mock server and does not require authentication.\nRequest Body:Example :{\n  \"businessId\": \"string\",\n  \"departmentId\": \"string\",\n  \"amount\": \"decimal\",\n  \"status\": \"string\"\n}\nResponse: Confirmation of the sales transaction log.\nNote: The external API is a mock server and does not require authentication.\nResponse:Example :{\n  \"message\": \"string\"\n}\n\nApplication Documentation\nExample :# To generate and serve the documentation using Compodoc, follow these steps:\n\n# Generate the documentation\n$ npm run compodoc\n\n# Serve the documentation\n$ npm run compodoc:serve\n\n# Open the browser and navigate to http://localhost:8080\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrdersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_providers\n\n\n\n\nHealthModule\n\nHealthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nOrdersService\n\nOrdersService\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\nTaxService\n\nTaxService\n\nOrdersModule -->\n\nTaxService->OrdersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    35 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AllConfigType   (src/.../config.type.ts)\n                        \n                        \n                            AppConfig   (src/.../config.type.ts)\n                        \n                        \n                            AuthConfig   (src/.../config.type.ts)\n                        \n                        \n                            DatabaseConfig   (src/.../config.type.ts)\n                        \n                        \n                            EntityCondition   (src/.../entity-condition.type.ts)\n                        \n                        \n                            FindOptions   (src/.../find-options.type.ts)\n                        \n                        \n                            MailConfig   (src/.../config.type.ts)\n                        \n                        \n                            MaybeType   (src/.../maybe.type.ts)\n                        \n                        \n                            MongoConfig   (src/.../config.type.ts)\n                        \n                        \n                            NullableType   (src/.../nullable.type.ts)\n                        \n                        \n                            OrderDocument   (src/.../order.schema.ts)\n                        \n                        \n                            OrNeverType   (src/.../or-never.type.ts)\n                        \n                        \n                            TaxConfig   (src/.../config.type.ts)\n                        \n                        \n                            ValidationEntity   (src/.../is-not-exists.validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/config.type.ts\n    \n    \n        \n            \n                \n                    \n                    AllConfigType\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AppConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AuthConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DatabaseConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MailConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MongoConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TaxConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/common/types/entity-condition.type.ts\n    \n    \n        \n            \n                \n                    \n                    EntityCondition\n                \n            \n            \n                \n                            FindOptionsWhere\n\n                \n            \n        \n    \n    src/common/types/find-options.type.ts\n    \n    \n        \n            \n                \n                    \n                    FindOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/common/types/maybe.type.ts\n    \n    \n        \n            \n                \n                    \n                    MaybeType\n                \n            \n            \n                \n                        T | undefined\n\n                \n            \n        \n    \n    src/common/types/nullable.type.ts\n    \n    \n        \n            \n                \n                    \n                    NullableType\n                \n            \n            \n                \n                        T | null\n\n                \n            \n        \n    \n    src/modules/orders/schemas/order.schema.ts\n    \n    \n        \n            \n                \n                    \n                    OrderDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/common/types/or-never.type.ts\n    \n    \n        \n            \n                \n                    \n                    OrNeverType\n                \n            \n            \n                \n                        T | never\n\n                \n            \n        \n    \n    src/common/validators/is-not-exists.validator.ts\n    \n    \n        \n            \n                \n                    \n                    ValidationEntity\n                \n            \n            \n                \n                        literal type | undefined\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiGlobalResponse   (src/.../api-global-response.decorators.ts)\n                        \n                        \n                            ApiPaginatedResponse   (src/.../api-paginated-response.decorador.ts)\n                        \n                        \n                            AppDataSource   (src/.../data-source.ts)\n                        \n                        \n                            AUTH_OPTIONS   (src/.../constants.ts)\n                        \n                        \n                            description   (src/.../swagger.config.ts)\n                        \n                        \n                            HttpErrorType   (src/.../http-error-type.ts)\n                        \n                        \n                            lowerCaseTransformer   (src/.../lower-case.transformer.ts)\n                        \n                        \n                            OrderSchema   (src/.../order.schema.ts)\n                        \n                        \n                            PaginationParams   (src/.../pagination-params.decorator.ts)\n                        \n                        \n                            RouteNaming   (src/.../route-naming.ts)\n                        \n                        \n                            SKIP_AUTH   (src/.../constants.ts)\n                        \n                        \n                            SwaggerConfig   (src/.../swagger.config.ts)\n                        \n                        \n                            title   (src/.../swagger.config.ts)\n                        \n                        \n                            TOKEN_NAME   (src/.../constants.ts)\n                        \n                        \n                            validationOptions   (src/.../validation-options.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/decorators/api-global-response.decorators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiGlobalResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >(model: TModel) => {\n  return applyDecorators(\n    ApiExtraModels(ResponseDto, model),\n    ApiOkResponse({\n      schema: {\n        allOf: [\n          { $ref: getSchemaPath(ResponseDto) },\n          {\n            properties: {\n              payload: {\n                $ref: getSchemaPath(model),\n              },\n              timestamp: {\n                type: 'number',\n              },\n            },\n          },\n        ],\n      },\n    }),\n    ApiUnauthorizedResponse({ description: 'Not authenticated' }),\n    ApiForbiddenResponse({ description: 'Access denied' }),\n    ApiNotFoundResponse({ description: 'Not found' }),\n    ApiInternalServerErrorResponse({ description: 'Server error' }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/common/libs/pagination/decorators/api-paginated-response.decorador.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiPaginatedResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >(model: TModel) => {\n  return applyDecorators(\n    ApiQuery({ name: 'orderBy', type: 'String', required: false }),\n    ApiQuery({\n      name: 'orderDirection',\n      enum: ['ASC', 'DESC'],\n      required: false,\n    }),\n    ApiQuery({ name: 'page', type: 'number', required: false, example: '1' }),\n    ApiQuery({ name: 'limit', type: 'number', required: false, example: '20' }),\n    ApiExtraModels(PaginationResponseDto, model),\n    ApiOkResponse({\n      schema: {\n        allOf: [\n          { $ref: getSchemaPath(ResponseDto) },\n          {\n            properties: {\n              payload: {\n                allOf: [\n                  { $ref: getSchemaPath(PaginationResponseDto) },\n                  {\n                    properties: {\n                      content: {\n                        type: 'array',\n                        items: { $ref: getSchemaPath(model) },\n                      },\n                    },\n                  },\n                ],\n              },\n              timestamp: {\n                type: 'number',\n              },\n            },\n          },\n        ],\n      },\n    }),\n    ApiUnauthorizedResponse({ description: 'Not authenticated' }),\n    ApiForbiddenResponse({ description: 'Access denied' }),\n    ApiNotFoundResponse({ description: 'Not found' }),\n    ApiInternalServerErrorResponse({ description: 'Server error' }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/database/data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AppDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DataSource({\n  type: process.env.DATABASE_TYPE,\n  url: process.env.DATABASE_URL,\n  host: process.env.DATABASE_HOST,\n  port: process.env.DATABASE_PORT\n    ? parseInt(process.env.DATABASE_PORT, 10)\n    : 5432,\n  username: process.env.DATABASE_USERNAME,\n  password: process.env.DATABASE_PASSWORD,\n  database: process.env.DATABASE_NAME,\n  synchronize: process.env.DATABASE_SYNCHRONIZE === 'true',\n  dropSchema: false,\n  keepConnectionAlive: true,\n  logging: process.env.NODE_ENV !== 'production',\n  entities: [__dirname + '/../**/*.entity{.ts,.js}'],\n  migrations: [__dirname + '/migrations/**/*{.ts,.js}'],\n  seeds: ['src/database/seeds/**/*{.ts,.js}'],\n  seedTracking: true,\n  factories: ['src/database/factories/**/*{.ts,.js}'],\n  cli: {\n    entitiesDir: 'src',\n    migrationsDir: 'src/database/migrations',\n    subscribersDir: 'subscriber',\n  },\n  extra: {\n    // based on https://node-postgres.com/api/pool\n    // max connection pool size\n    max: process.env.DATABASE_MAX_CONNECTIONS\n      ? parseInt(process.env.DATABASE_MAX_CONNECTIONS, 10)\n      : 100,\n    ssl:\n      process.env.DATABASE_SSL_ENABLED === 'true'\n        ? {\n            rejectUnauthorized:\n              process.env.DATABASE_REJECT_UNAUTHORIZED === 'true',\n            ca: process.env.DATABASE_CA ?? undefined,\n            key: process.env.DATABASE_KEY ?? undefined,\n            cert: process.env.DATABASE_CERT ?? undefined,\n          }\n        : undefined,\n  },\n} as DataSourceOptions)\n                    \n                \n\n\n        \n    \n\n    src/common/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SecuritySchemeObject\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: 'http',\n  scheme: 'bearer',\n  bearerFormat: 'Bearer',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SKIP_AUTH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'skipAuth'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TOKEN_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'access-token'\n                    \n                \n\n\n        \n    \n\n    src/config/swagger.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'API documentation for fha payment service.'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SwaggerConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (app: INestApplication, apiVersion: string) => {\n  const options = new DocumentBuilder()\n    .setTitle(title)\n    .setDescription(description)\n    .setVersion(apiVersion)\n    .build();\n\n  const document = SwaggerModule.createDocument(app, options);\n\n  SwaggerModule.setup(`api/v${apiVersion}/swagger`, app, document);\n}\n                    \n                \n\n            \n                \n                    Setup swagger in the application\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'FHA Payment Services API Documentation'\n                    \n                \n\n\n        \n    \n\n    src/common/http/http-error-type.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HttpErrorType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  400: 'BAD_REQUEST',\n  401: 'UNAUTHORIZED',\n  402: 'PAYMENT_REQUIRED',\n  403: 'FORBIDDEN',\n  404: 'NOT_FOUND',\n  405: 'METHOD_NOT_ALLOWED',\n  406: 'NOT_ACCEPTABLE',\n  407: 'PROXY_AUTHENTICATION_REQUIRED',\n  408: 'REQUEST_TIMEOUT',\n  409: 'CONFLICT',\n  410: 'GONE',\n  411: 'LENGTH_REQUIRED',\n  412: 'PRECONDITION_FAILED',\n  413: 'PAYLOAD_TOO_LARGE',\n  414: 'URI_TOO_LONG',\n  415: 'UNSUPPORTED_MEDIA_TYPE',\n  416: 'REQUESTED_RANGE_NOT_SATISFIABLE',\n  417: 'EXPECTATION_FAILED',\n  418: 'I_AM_A_TEAPOT',\n  421: 'MISDIRECTED',\n  422: 'UNPROCESSABLE_ENTITY',\n  424: 'FAILED_DEPENDENCY',\n  429: 'TOO_MANY_REQUESTS',\n  500: 'INTERNAL_SERVER_ERROR',\n  501: 'NOT_IMPLEMENTED',\n  502: 'BAD_GATEWAY',\n  503: 'SERVICE_UNAVAILABLE',\n  504: 'GATEWAY_TIMEOUT',\n  505: 'HTTP_VERSION_NOT_SUPPORTED',\n}\n                    \n                \n\n\n        \n    \n\n    src/common/transformers/lower-case.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        lowerCaseTransformer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  params: TransformFnParams,\n): MaybeType => params.value?.toLowerCase().trim()\n                    \n                \n\n\n        \n    \n\n    src/modules/orders/schemas/order.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OrderSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Order)\n                    \n                \n\n\n        \n    \n\n    src/common/libs/pagination/decorators/pagination-params.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PaginationParams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (\n    data: DefaultPagination = {\n      defaultSkip: 0,\n      defaultPage: 0,\n      defaultLimit: 10,\n      defaultOrder: {},\n      defaultOrderDirection: 'DESC',\n      maxAllowedSize: 100,\n    },\n    ctx: ExecutionContext,\n  ) => {\n    let {\n      query: { skip, page, limit, orderBy, orderDirection, ...params },\n    } = ctx.switchToHttp().getRequest();\n\n    const { defaultSkip, defaultPage, defaultLimit, defaultOrder, defaultOrderDirection, maxAllowedSize } = data;\n\n    const order = orderBy ? { [orderBy]: orderDirection ? orderDirection : defaultOrderDirection } : defaultOrder;\n\n    limit = limit && limit > 0 ? +limit : defaultLimit;\n\n    if (!skip) {\n      if (page) {\n        skip = (+page - 1) * +limit;\n        skip = skip >= 0 ? skip : 0;\n      } else {\n        page = defaultPage;\n        skip = defaultSkip;\n      }\n    } else {\n      page = Math.floor(+skip / limit);\n    }\n\n    limit = +limit \n                    \n                \n\n            \n                \n                    Decorator intended for building a PaginationRequest object based on the query string parameters\n\n                \n            \n\n        \n    \n\n    src/common/libs/route-naming.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RouteNaming\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    PermissionsController: {\n        getPermissions: 'Get a paginated permission list',\n        getPermissionById: 'Get permission by id',\n        createPermission: 'Create new permission',\n        updatePermission: 'Update permission by id',\n    },\n    RolesController: {\n        getRoles: 'Get a paginated role list',\n        getRoleById: 'Get role by id',\n        createRole: 'Create new role',\n        updateRole: 'Update role by id',\n        deleteRole: 'Delete role by id',\n    },\n    UsersController: {\n        getUsers: 'Get a paginated user list',\n        getUserById: 'Get user by id',\n        createUser: 'Create new user',\n        updateUser: 'Update user by id',\n        changePassword: 'Change user password',\n    },\n    CustomersController: {\n        getCustomers: 'Get a paginated customer list',\n        getCustomerById: 'Get customer by id',\n        createCustomer: 'Create new customer',\n        updateCustomer: 'Update customer by id',\n        changePassword: 'Change customer password',\n    },\n    InvoiceController: {\n        getInvoices: 'Get a paginated invoice list',\n        getInvoiceStatistics: 'Get invoice statistics for admin',\n        getInvoiceForProperty: 'Get invoice for a property with status PURCHASE_REQUEST',\n        getInvoiceById: 'Get invoice by id',\n        createInvoiceAndGeneratePayment: 'Create new invoice and payment',\n        createInvoiceOnly: 'Create new invoice only',\n        selectPaymentOption: 'Select payment option',\n        updateInvoice: 'Update invoice by id',\n        deleteInvoice: 'Delete invoice by id',\n    },\n    PaymentsController: {\n        create: 'Create new payment',\n        findAll: 'Get a paginated payment list',\n        findAllForCustomerProperty: 'Get a paginated payment list for a customer property',\n        findAllPayments: 'Get a paginated payment list',\n        getPaymentsAsCsv: 'Get payments as csv',\n        getPaymentsAsPdf: 'Get payments as pdf',\n        findOne: 'Get payment by id',\n    },\n    RequestForPaymentController: {\n        create: 'Create new request for payment',\n        findAll: 'Get a paginated request for payment list',\n        findOne: 'Get request for payment by id',\n        update: 'Update request for payment by id',\n        remove: 'Delete request for payment by id',\n    },\n    RevenueHeadsController: {\n        getRevenueHeads: 'Get a paginated list of revenue heads',\n        getRevenueHeadById: 'Get revenue head by id',\n        createRevenueHead: 'Create new revenue head',\n        updateRevenueHead: 'Update revenue head by id',\n        removeRevenueHead: 'Delete revenue head by id',\n        uploadFile: 'Upload revenue head file',\n    },\n    CountriesController: {\n        findAll: 'Get a paginated country list',\n    },\n    LgasController: {\n        findAll: 'Get a paginated LGA list',\n    },\n    StatesController: {\n        findAll: 'Get a paginated state list',\n    },\n    OpenPropertyPaymentController: {\n        findAllRevenueHead: 'Get a paginated list of revenue heads',\n        findProperty: 'Get a paginated list of properties',\n        saveCustomerProperty: 'Save customer property',\n        confirmPayment: 'Confirm payment',\n    },\n    CategoriesController: {\n        getCategories: 'Get a paginated category list',\n        getCategoryById: 'Get category by id',\n        createCategory: 'Create new category',\n        updateCategory: 'Update category by id',\n        removeCategory: 'Delete category by id',\n    },\n    EstatesController: {\n        getEstates: 'Get a paginated estate list',\n        getEstateById: 'Get estate by id',\n        createEstate: 'Create new estate',\n        updateEstate: 'Update estate by id',\n        removeEstate: 'Delete estate by id',\n    },\n    PropertiesController: {\n        findOne: 'Get property by id',\n        save: 'Save property',\n        findAll: 'Get a paginated property list',\n        findAllCustomerProperties: 'Get a paginated list of customer properties',\n        findAllCustomerPropertiesByCustomerId: 'Get a paginated list of customer properties by customer id',\n        statistics: 'Get property statistics',\n        adminStatistics: 'Get property statistics for admin',\n        findById: 'Get property by id',\n        update: 'Update property by id',\n    },\n    StatusesController: {\n        getStatuses: 'Get a paginated status list',\n        getStatusById: 'Get status by id',\n        createStatus: 'Create new status',\n        updateStatus: 'Update status by id',\n        removeStatus: 'Delete status by id',\n    },\n    ApplicationsController: {\n        create: 'Create new application to purchase property',\n        houseTypes: 'Get a paginated list of house types',\n    },\n    FilesController: {\n        upload: 'Upload file',\n        download: 'Download file',\n    },\n    WebhookController: {\n        workflow: 'Initiate workflow through webhook',\n        workflowForPropertyPurchase: 'Initiate workflow for property purchase through webhook',\n        paymentsCallback: 'Payments callback',\n    },\n    TasksController: {\n        create: 'Create new task',\n        findAll: 'Get a paginated task list',\n        getStatistics: 'Get task statistics',\n        findOne: 'Get task by id',\n        approve: 'Approve task',\n        reject: 'Reject task',\n    },\n    AppController: {\n        getHello: 'Get hello',\n    },\n    HealthController: {\n        check: 'Check health',\n    },\n}\n                    \n                \n\n\n        \n    \n\n    src/common/validators/validation-options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validationOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValidationPipeOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  transform: true,\n  whitelist: true,\n  errorHttpStatusCode: HttpStatus.UNPROCESSABLE_ENTITY,\n  exceptionFactory: (errors: ValidationError[]) =>\n    new HttpException(\n      {\n        status: false,\n        errors: errors.reduce(\n          (accumulator, currentValue) => ({\n            ...accumulator,\n            [currentValue.property]: Object.values(\n              currentValue.constraints ?? {},\n            ).join(', '),\n          }),\n          {},\n        ),\n        message: 'Validation failed',\n      },\n      HttpStatus.UNPROCESSABLE_ENTITY,\n    ),\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
