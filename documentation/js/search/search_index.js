var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AccessTokenExpiredException.html",[0,0.251,1,2.966]],["body/classes/AccessTokenExpiredException.html",[0,0.332,1,4.844,2,0.762,3,0.253,4,0.227,5,0.176,6,5.411,7,4.795,8,3.926,9,2.038,10,4.428,11,2.023,12,0.423,13,4.386,14,0.414,15,0.017,16,1.014,17,2.336,18,2.301,19,0.253,20,2.082,21,5.083,22,1.985,23,4.386,24,4.386,25,0.014,26,0.014]],["title/controllers/AppController.html",[27,2.18,28,2.5]],["body/controllers/AppController.html",[0,0.329,3,0.251,4,0.225,5,0.175,12,0.419,14,0.412,15,0.017,16,1.007,19,0.251,25,0.014,26,0.014,27,3.543,28,4.063,29,2.863,30,4.352,31,0.611,32,1.627,33,5.471,34,1.879,35,5.044,36,1.258,37,1.19,38,4.108,39,4.352,40,3.555,41,3.555,42,1.315,43,5.044]],["title/modules/AppModule.html",[44,2.18,45,2.707]],["body/modules/AppModule.html",[0,0.224,3,0.171,4,0.153,5,0.119,14,0.48,15,0.017,16,0.684,19,0.171,25,0.011,26,0.011,28,3.644,29,2.744,38,4.03,39,2.959,42,0.894,44,3.177,45,5.068,46,2.078,47,2.232,48,2.649,49,2.649,50,2.232,51,4.324,52,2.649,53,2.959,54,2.959,55,2.959,56,4.328,57,4.328,58,3.734,59,2.649,60,2.417,61,3.429,62,4.695,63,3.429,64,3.429,65,2.417,66,4.171,67,1.476,68,3.407,69,3.429,70,3.429,71,5.598,72,4.285,73,1.729,74,2.959,75,1.946,76,3.407,77,3.407,78,3.407,79,3.407,80,3.429,81,2.959,82,2.417,83,3.429,84,3.429,85,3.429,86,1.98,87,3.429,88,3.429,89,2.959,90,3.429,91,3.429,92,3.429,93,2.581,94,2.959,95,1.729,96,3.429,97,3.429,98,3.429,99,3.429,100,3.429,101,2.417,102,3.429]],["title/injectables/AppService.html",[38,2.327,103,1.305]],["body/injectables/AppService.html",[0,0.344,3,0.263,4,0.235,5,0.182,12,0.438,14,0.347,15,0.017,16,1.051,19,0.263,25,0.014,26,0.014,31,0.638,32,1.671,33,5.553,36,1.314,37,1.222,38,3.884,42,1.373,103,2.179,104,2.654,105,4.543,106,5.266,107,4.543,108,5.266]],["title/classes/ApplicatonExistException.html",[0,0.251,109,2.966]],["body/classes/ApplicatonExistException.html",[0,0.334,2,0.768,3,0.255,4,0.229,5,0.177,9,2.048,11,2.03,12,0.426,14,0.416,15,0.017,16,1.022,17,2.348,19,0.255,20,2.098,22,2,25,0.014,26,0.014,109,4.868,110,5.437,111,3.957,112,4.137,113,4.42,114,3.957,115,4.42,116,3.957,117,3.957,118,3.957]],["title/classes/Base.html",[0,0.251,119,2.5]],["body/classes/Base.html",[0,0.311,2,0.503,3,0.167,4,0.15,5,0.116,9,1.548,12,0.549,14,0.314,15,0.017,19,0.167,25,0.01,26,0.01,31,0.407,32,1.242,34,2.244,36,1.189,37,0.908,42,0.876,67,1.446,86,1.951,119,3.101,120,2.898,121,5.536,122,1.356,123,0.995,124,4.275,125,3.902,126,4.275,127,4.275,128,4.652,129,4.652,130,0.819,131,3.36,132,4.656,133,2.595,134,3.358,135,3.527,136,4.299,137,4.656,138,3.358,139,3.527,140,4.656,141,3.36,142,2.595,143,3.358,144,3.36,145,2.595,146,3.358,147,3.68,148,3.921,149,3.36,150,4.275,151,3.36,152,2.368,153,3.36,154,3.36,155,2.898,156,4.764,157,4.764,158,4.764,159,0.961,160,2.05,161,3.36,162,3.36,163,3.36]],["title/classes/ClassNameExtractor.html",[0,0.251,164,2.966]],["body/classes/ClassNameExtractor.html",[0,0.413,2,0.651,3,0.217,4,0.194,5,0.197,12,0.361,14,0.287,15,0.017,19,0.217,25,0.012,26,0.012,31,0.526,32,1.48,36,1.084,37,1.36,42,1.133,123,0.908,130,0.497,159,1.098,164,4.385,165,4.898,166,3.749,167,3.832,168,5.678,169,5.678,170,4.346,171,1.037,172,4.346,173,4.898,174,3.356,175,5.678,176,5.678,177,4.346,178,2.721,179,3.356,180,4.346,181,4.346,182,4.346,183,4.346,184,5.678,185,5.678,186,4.346,187,4.385,188,3.749,189,4.346,190,4.346,191,4.346,192,4.346]],["title/classes/CreateOrderDto.html",[0,0.251,193,2.18]],["body/classes/CreateOrderDto.html",[0,0.323,2,0.53,3,0.176,4,0.158,5,0.123,12,0.513,14,0.326,15,0.017,19,0.176,25,0.011,26,0.011,31,0.429,34,2.296,37,1.281,122,1.407,130,0.705,193,2.805,194,5.595,195,2.734,196,3.93,197,3.707,198,4.399,199,3.93,200,1.758,201,4.761,202,2.495,203,3.184,204,3.54,205,3.54,206,6.164,207,6.164,208,6.164,209,6.164,210,6.164,211,3.291,212,4.264,213,5.318,214,4.943,215,3.54,216,4.943,217,3.54,218,3.217,219,3.54,220,3.54,221,4.571,222,1.89,223,6.485,224,4.943,225,3.217,226,5.695,227,1.89,228,4.012,229,2.791,230,3.54]],["title/classes/CreateSchemaForSales1730363889037.html",[0,0.251,231,2.966]],["body/classes/CreateSchemaForSales1730363889037.html",[0,0.279,2,0.641,3,0.213,4,0.191,5,0.148,12,0.467,14,0.282,15,0.017,19,0.213,25,0.012,26,0.012,31,0.518,32,1.464,36,1.401,67,1.84,86,2.301,93,3.793,123,1.173,130,0.643,159,0.975,171,1.341,231,4.338,232,5.413,233,3.561,234,3.802,235,3.688,236,2.999,237,5.413,238,5.487,239,4.846,240,4.846,241,4.846,242,6.412,243,4.275,244,4.696,245,4.846,246,4.275,247,3.188,248,4.275,249,4.275]],["title/classes/CreateTableForOrders1730365329511.html",[0,0.251,250,2.966]],["body/classes/CreateTableForOrders1730365329511.html",[0,0.223,2,0.511,3,0.17,4,0.152,5,0.118,12,0.464,14,0.225,15,0.017,19,0.17,25,0.01,26,0.01,31,0.413,32,1.256,36,1.202,37,0.65,67,1.468,93,3.545,122,1.371,123,1.006,130,0.732,134,2.405,135,2.981,136,3.634,137,3.935,143,2.405,146,2.405,148,3.135,159,1.11,160,2.752,171,1.15,187,5.27,196,2.068,199,2.068,211,2.572,218,2.221,233,3.768,236,2.572,237,4.816,238,5.127,239,4.155,240,4.155,241,4.155,242,6.113,244,4.275,245,4.155,247,3.442,250,4.684,251,5.233,252,5.127,253,2.943,254,1.822,255,3.412,256,3.412,257,3.412,258,4.816,259,5.583,260,3.412,261,2.635,262,2.635,263,4.816,264,4.816,265,3.412,266,2.943,267,2.943,268,3.412,269,3.412,270,3.412,271,2.405,272,1.936,273,4.816]],["title/classes/CustomerExistException.html",[0,0.251,274,2.966]],["body/classes/CustomerExistException.html",[0,0.322,2,0.739,3,0.246,4,0.22,5,0.171,9,2,11,1.466,12,0.41,14,0.406,15,0.017,16,0.984,17,2.293,19,0.246,20,2.02,22,1.925,25,0.013,26,0.013,37,1.279,111,3.808,112,4.067,113,4.254,114,3.808,115,4.254,117,3.808,118,3.808,123,1.03,130,0.564,159,1.165,171,1.177,274,4.754,275,5.31,276,5.31,277,4.254]],["title/interfaces/DefaultPagination.html",[278,2.5,279,2.707]],["body/interfaces/DefaultPagination.html",[3,0.219,4,0.196,5,0.152,15,0.016,19,0.219,25,0.012,26,0.012,31,0.532,37,1.211,122,1.626,123,1.595,130,0.819,160,1.889,171,1.048,200,2.716,203,1.987,278,3.72,279,4.028,280,3.093,281,3.787,282,3.787,283,4.389,284,4.389,285,2.857,286,5.807,287,5.807,288,5.807,289,5.807,290,5.807,291,5.807]],["title/classes/DisabledUserException.html",[0,0.251,292,2.966]],["body/classes/DisabledUserException.html",[0,0.324,2,0.744,3,0.248,4,0.222,5,0.172,9,2.01,10,4.383,11,1.477,12,0.413,14,0.408,15,0.017,16,0.992,17,2.753,18,2.249,19,0.248,20,2.035,22,1.94,25,0.013,26,0.013,123,1.038,130,0.568,159,0.862,171,1.186,292,4.776,293,5.335,294,4.286,295,6.184,296,4.968,297,3.837,298,4.968,299,4.968]],["title/classes/EnvironmentVariablesValidator.html",[0,0.251,300,1.936]],["body/classes/EnvironmentVariablesValidator.html",[0,0.231,2,0.338,3,0.113,4,0.101,5,0.078,12,0.566,14,0.326,15,0.017,19,0.113,25,0.008,26,0.008,31,0.274,34,2.538,37,1.394,42,0.589,73,1.139,76,1.592,122,1.008,130,0.779,139,1.891,159,0.858,160,0.972,200,1.26,203,2.238,225,4.303,227,1.206,272,2.806,300,2.201,301,1.745,302,4.368,303,4.368,304,4.944,305,4.368,306,4.368,307,4.368,308,3.485,309,4.368,310,3.819,311,4.368,312,5.319,313,2.259,314,3.541,315,3.541,316,2.259,317,2.259,318,2.259,319,2.259,320,2.259,321,2.259,322,2.259,323,3.768,324,2.259,325,2.259,326,1.949,327,2.259,328,2.259,329,2.259,330,2.259,331,1.592,332,1.949,333,1.369,334,1.745,335,2.259,336,3.055,337,5.878,338,4.368,339,1.592,340,1.949,341,1.745,342,2.735,343,3.055,344,2.305,345,2.735,346,3.055,347,3.055,348,3.055,349,3.055,350,3.055,351,3.768,352,1.949,353,1.949,354,3.055,355,3.055,356,3.055,357,3.055,358,3.055,359,1.949,360,1.949,361,1.949,362,1.949,363,1.949,364,1.949,365,3.055,366,3.055,367,2.259,368,1.949,369,1.949,370,3.541,371,2.259,372,1.592,373,2.259,374,1.949,375,2.259,376,2.259,377,3.055,378,2.259,379,2.259,380,2.259,381,2.259,382,2.259,383,1.471,384,2.259,385,2.259,386,2.259,387,2.259,388,2.259,389,2.259,390,2.259,391,3.541,392,2.259,393,2.259,394,2.259,395,1.949,396,2.259,397,2.259,398,2.259,399,2.259,400,2.259,401,1.949,402,2.259,403,2.259,404,2.259,405,2.259]],["title/classes/EnvironmentVariablesValidator-1.html",[0,0.21,300,1.62,406,1.948]],["body/classes/EnvironmentVariablesValidator-1.html",[0,0.246,2,0.367,3,0.122,4,0.109,5,0.085,12,0.583,14,0.341,15,0.017,19,0.122,25,0.008,26,0.008,31,0.297,34,2.612,37,1.381,42,0.638,73,1.234,77,1.725,86,1.883,122,1.073,130,0.81,159,0.425,160,1.053,200,1.836,202,1.725,225,4.565,227,1.307,272,1.389,300,2.317,308,1.725,312,4.454,326,2.112,331,1.725,332,2.112,333,1.484,336,3.965,337,5.722,339,1.725,340,2.112,368,2.112,369,2.112,372,1.725,383,2.453,407,2.112,408,4.596,409,4.596,410,4.596,411,4.596,412,4.596,413,4.596,414,4.596,415,4.596,416,4.596,417,4.596,418,4.596,419,4.596,420,4.596,421,4.596,422,2.448,423,2.448,424,6.133,425,2.448,426,2.448,427,2.448,428,2.448,429,2.448,430,2.448,431,2.448,432,4.547,433,4.596,434,2.448,435,2.448,436,2.448,437,2.448,438,2.448,439,2.448,440,2.448,441,2.448,442,5.162,443,2.448,444,2.112,445,6.133,446,6.133,447,2.448,448,1.389,449,2.112,450,2.112,451,1.725,452,2.112,453,2.112,454,2.112,455,2.112,456,1.725,457,2.112,458,2.112,459,1.725,460,2.112,461,1.891,462,2.112,463,2.448,464,2.112,465,2.112,466,2.448,467,2.112,468,1.891,469,2.112,470,1.891,471,2.112,472,2.112,473,1.891,474,2.112]],["title/classes/EnvironmentVariablesValidator-2.html",[0,0.21,300,1.62,475,2.482]],["body/classes/EnvironmentVariablesValidator-2.html",[0,0.392,2,0.71,3,0.236,4,0.212,5,0.164,12,0.394,14,0.457,15,0.017,19,0.236,25,0.013,26,0.013,31,0.574,34,1.764,37,1.144,42,1.235,73,2.387,78,3.338,122,1.708,130,0.687,160,2.038,225,4.288,227,2.529,300,3.32,331,3.338,333,2.87,334,3.658,372,3.338,448,2.688,476,4.086,477,6.587,478,4.736,479,3.338,480,4.736,481,4.736,482,4.736]],["title/classes/EnvironmentVariablesValidator-3.html",[0,0.21,300,1.62,483,2.773]],["body/classes/EnvironmentVariablesValidator-3.html",[0,0.393,2,0.715,3,0.238,4,0.213,5,0.165,12,0.397,14,0.458,15,0.017,19,0.238,25,0.013,26,0.013,31,0.578,34,1.777,37,1.149,42,1.244,73,2.404,79,3.362,122,1.716,130,0.546,160,2.053,225,4.302,227,2.547,300,3.331,331,3.362,333,2.891,334,3.684,372,3.362,448,2.707,479,3.362,484,4.116,485,6.609,486,4.77,487,4.77,488,4.77]],["title/classes/FileFinder.html",[0,0.251,489,2.966]],["body/classes/FileFinder.html",[0,0.255,2,0.585,3,0.195,4,0.175,5,0.183,12,0.325,14,0.349,15,0.017,19,0.195,25,0.012,26,0.012,31,0.473,32,1.379,36,0.975,37,1.391,42,1.019,86,1.601,123,0.816,130,0.447,159,0.678,167,3.635,171,0.933,173,4.564,174,3.018,178,2.581,489,4.086,490,4.564,491,3.371,492,5.998,493,5.29,494,6.428,495,3.907,496,3.907,497,4.086,498,5.29,499,3.907,500,6.924,501,3.371,502,4.564,503,3.907,504,2.368,505,4.564,506,5.29,507,3.907,508,3.907,509,3.371,510,3.371,511,3.907,512,5.29,513,3.907,514,3.907,515,3.907,516,4.564,517,3.907,518,3.907,519,3.907,520,3.907,521,3.371,522,3.371,523,3.907,524,3.907]],["title/classes/ForeignKeyConflictException.html",[0,0.251,525,2.966]],["body/classes/ForeignKeyConflictException.html",[0,0.332,2,0.762,3,0.253,4,0.227,5,0.176,9,2.038,11,2.023,12,0.423,14,0.414,15,0.017,16,1.014,17,2.336,18,2.301,19,0.253,20,2.082,22,1.985,25,0.014,26,0.014,112,4.123,272,3.861,525,4.844,526,5.411,527,4.386,528,5.083,529,5.083,530,5.083,531,4.386]],["title/classes/GenerateCharacters.html",[0,0.251,532,2.966]],["body/classes/GenerateCharacters.html",[0,0.324,2,0.744,3,0.248,4,0.222,5,0.172,12,0.413,15,0.017,19,0.248,25,0.013,26,0.013,31,0.602,32,1.612,36,1.239,37,1.179,42,1.295,123,1.038,130,0.568,159,0.862,167,4.08,171,1.186,200,2.395,475,3.837,532,4.776,533,5.335,534,4.286,535,5.809,536,6.184,537,4.968,538,6.184,539,4.968,540,4.968,541,4.968,542,4.968]],["title/classes/HashHelper.html",[0,0.251,543,2.966]],["body/classes/HashHelper.html",[0,0.224,2,0.515,3,0.171,4,0.154,5,0.119,12,0.466,14,0.227,15,0.017,19,0.171,25,0.011,26,0.011,31,0.417,32,1.262,36,1.742,37,1.46,42,1.262,93,3.554,122,1.378,123,1.011,130,0.641,159,0.841,160,1.48,167,4.302,171,1.156,200,1.223,238,3.74,244,4.921,247,2.749,254,1.836,383,3.152,432,3.74,543,3.74,544,2.966,545,3.397,546,5.606,547,4.843,548,4.843,549,3.438,550,4.843,551,7.274,552,3.438,553,4.843,554,6.086,555,6.086,556,4.843,557,4.843,558,3.438,559,4.843,560,4.843,561,3.438,562,2.966,563,3.397,564,3.438,565,3.438,566,3.438]],["title/controllers/HealthController.html",[27,2.18,567,2.5]],["body/controllers/HealthController.html",[0,0.253,3,0.193,4,0.173,5,0.134,11,1.152,12,0.322,14,0.442,15,0.017,16,0.773,19,0.193,25,0.011,26,0.011,27,2.198,29,2.198,31,0.469,32,1.371,34,1.443,36,0.966,42,1.01,72,4.208,73,1.952,86,1.586,101,2.73,222,2.068,479,2.73,497,2.991,545,3.881,567,3.423,568,3.341,569,3.873,570,4.537,571,4.946,572,3.873,573,3.873,574,5.971,575,5.259,576,5.971,577,5.971,578,2.991,579,2.521,580,3.341,581,3.873,582,3.873,583,3.873,584,3.873,585,3.873,586,5.259,587,6.404,588,3.873,589,3.341,590,3.873,591,5.259,592,3.873,593,3.873,594,3.873,595,3.341,596,3.873,597,3.873,598,3.873,599,3.341,600,3.341,601,3.873,602,3.873,603,3.873,604,3.873,605,3.873]],["title/modules/HealthModule.html",[44,2.18,56,2.5]],["body/modules/HealthModule.html",[0,0.346,3,0.265,4,0.237,5,0.184,14,0.458,15,0.017,16,1.059,19,0.265,25,0.014,26,0.014,29,3.656,44,3.656,46,3.217,56,4.192,62,4.1,567,4.513,578,4.1,606,5.309,607,5.309,608,6.441]],["title/classes/HttpExceptionFilter.html",[0,0.251,609,2.966]],["body/classes/HttpExceptionFilter.html",[0,0.256,2,0.589,3,0.196,4,0.176,5,0.136,12,0.327,14,0.425,15,0.017,16,0.784,17,2.722,18,1.779,19,0.196,22,2.349,25,0.012,26,0.012,31,0.476,32,1.385,36,0.981,37,1.147,95,1.981,123,0.821,130,0.608,135,2.099,152,2.77,159,0.682,171,0.938,178,2.589,199,3.219,236,2.836,451,4.24,609,4.102,610,4.102,611,3.391,612,6.016,613,5.19,614,5.312,615,5.559,616,6.443,617,3.931,618,3.931,619,3.036,620,3.391,621,2.382,622,3.219,623,3.391,624,3.931,625,3.391,626,3.931,627,3.931,628,3.931,629,3.931,630,3.931,631,3.931,632,3.931,633,3.931,634,3.391]],["title/injectables/HttpResponseInterceptor.html",[103,1.305,635,2.966]],["body/injectables/HttpResponseInterceptor.html",[0,0.26,3,0.198,4,0.178,5,0.138,12,0.331,14,0.427,15,0.017,16,0.794,19,0.198,25,0.012,26,0.012,31,0.482,32,1.396,36,1.336,37,1.021,42,1.396,95,2.005,103,1.82,104,2.005,123,0.831,130,0.455,135,3.716,159,0.69,171,0.95,178,1.712,236,2.124,521,4.62,563,3.245,622,2.411,634,3.432,635,4.136,636,3.432,637,5.83,638,3.432,639,5.219,640,5.586,641,5.83,642,3.978,643,4.136,644,5.222,645,5.222,646,4.62,647,2.804,648,3.978,649,3.978,650,3.432,651,3.073,652,3.978,653,3.432,654,3.978,655,3.073]],["title/classes/IntegerPrimaryIdEntity.html",[0,0.251,656,2.966]],["body/classes/IntegerPrimaryIdEntity.html",[0,0.236,2,0.542,3,0.18,4,0.162,5,0.125,9,1.631,12,0.577,14,0.331,15,0.017,19,0.18,25,0.011,26,0.011,31,0.438,32,1.308,34,2.435,36,1.252,37,0.69,67,1.557,86,1.482,119,4.673,122,1.428,123,1.048,124,3.876,125,3.537,126,3.876,127,3.876,128,4.45,129,4.45,130,0.832,132,4.061,133,2.794,134,2.55,135,3.076,136,3.75,137,4.061,138,2.55,139,3.076,140,4.061,142,2.794,143,2.55,145,2.794,146,2.55,147,2.794,148,2.355,150,2.794,152,2.55,159,0.628,200,1.785,211,3.49,271,3.537,656,3.876,657,4.329,658,2.794,659,3.618,660,5.018,661,3.121,662,5.835,663,3.121,664,3.121,665,3.121,666,3.121,667,3.121,668,3.121,669,4.329,670,3.121]],["title/classes/InvalidCredentialsException.html",[0,0.251,671,2.966]],["body/classes/InvalidCredentialsException.html",[0,0.336,2,0.771,3,0.256,4,0.23,5,0.178,9,2.053,10,4.451,11,2.033,12,0.428,14,0.417,15,0.017,16,1.026,17,2.353,18,2.328,19,0.256,20,2.107,22,2.008,25,0.014,26,0.014,671,4.879,672,4.453,673,4.437,674,5.143,675,5.143,676,3.972,677,5.143]],["title/classes/InvalidCurrentPasswordException.html",[0,0.251,678,2.966]],["body/classes/InvalidCurrentPasswordException.html",[0,0.332,2,0.762,3,0.253,4,0.227,5,0.176,9,2.038,11,2.023,12,0.423,14,0.414,15,0.017,16,1.014,17,2.336,18,2.301,19,0.253,20,2.082,22,1.985,25,0.014,26,0.014,456,3.583,504,4.123,672,4.421,676,3.926,678,4.844,679,4.386,680,5.869,681,5.083,682,5.083]],["title/classes/InvalidCurrentPinException.html",[0,0.251,683,2.966]],["body/classes/InvalidCurrentPinException.html",[0,0.337,2,0.774,3,0.257,4,0.231,5,0.179,9,2.058,11,2.037,12,0.429,14,0.418,15,0.017,16,1.03,17,2.359,19,0.257,20,2.115,22,2.016,25,0.014,26,0.014,114,3.988,504,3.129,535,4.454,676,3.988,680,5.91,683,4.891,684,4.454,685,5.163,686,5.163]],["title/classes/InvalidTokenException.html",[0,0.251,687,2.966]],["body/classes/InvalidTokenException.html",[0,0.34,2,0.78,3,0.259,4,0.233,5,0.18,9,2.068,10,4.474,11,2.044,12,0.433,14,0.42,15,0.017,16,1.039,17,2.37,18,2.356,19,0.259,20,2.132,25,0.014,26,0.014,672,4.485,687,4.915,688,4.49,689,5.204,690,5.204]],["title/injectables/IsExist.html",[103,1.305,691,2.966]],["body/injectables/IsExist.html",[0,0.385,3,0.189,4,0.169,5,0.131,11,1.539,12,0.43,14,0.438,15,0.017,16,0.755,19,0.189,25,0.011,26,0.011,31,0.458,32,1.349,36,0.944,37,1.124,42,0.986,65,4.833,67,1.628,75,2.148,86,1.55,93,3.386,103,1.759,104,1.907,123,1.081,130,0.592,159,1.024,171,1.236,178,2.538,227,2.02,236,2.02,247,2.148,254,2.764,545,2.293,691,4.556,692,4.158,693,2.667,694,4.466,695,3.265,696,3.784,697,4.466,698,6.057,699,3.265,700,3.648,701,4.466,702,4.466,703,4.466,704,3.265,705,2.923,706,3.265,707,6.342,708,3.784,709,2.293,710,3.784,711,3.784,712,3.265,713,3.265,714,3.784,715,3.784]],["title/injectables/IsNotExist.html",[103,1.305,716,2.966]],["body/injectables/IsNotExist.html",[0,0.379,3,0.183,4,0.164,5,0.127,11,1.507,12,0.421,14,0.433,15,0.017,16,0.732,19,0.183,25,0.011,26,0.011,31,0.444,32,1.321,36,0.915,37,1.252,42,1.321,65,4.788,67,1.578,75,2.082,86,2.075,93,3.342,103,1.722,104,1.849,123,1.058,130,0.664,159,1.007,171,1.209,178,2.497,200,1.305,211,1.959,227,1.959,236,1.959,247,2.082,254,2.705,545,2.223,692,4.091,693,2.585,694,4.371,695,3.165,697,4.371,698,6.007,699,3.165,700,2.585,701,4.371,702,4.371,703,4.371,704,3.165,705,2.833,706,3.165,709,3.07,713,3.165,716,4.483,717,3.668,718,4.483,719,2.388,720,3.165,721,3.668,722,3.668,723,3.668,724,3.668]],["title/injectables/LoggingInterceptor.html",[103,1.305,725,2.966]],["body/injectables/LoggingInterceptor.html",[0,0.263,3,0.201,4,0.18,5,0.14,11,1.811,12,0.506,14,0.402,15,0.017,16,0.804,19,0.201,25,0.012,26,0.012,31,0.488,32,1.407,36,1.005,41,4.292,42,1.05,95,2.721,103,1.835,104,2.03,122,1.536,123,0.841,130,0.461,148,2.621,159,0.699,160,1.733,171,0.961,178,2.323,236,2.15,254,2.15,448,3.456,545,3.691,637,4.658,638,4.658,639,5.025,640,5.254,641,5.614,644,3.474,645,5.254,646,4.658,650,3.474,651,3.11,653,3.474,725,4.17,726,3.474,727,5.614,728,5.399,729,4.027,730,5.399,731,4.027,732,4.027,733,4.027,734,5.399,735,4.027,736,4.027,737,4.027]],["title/entities/Order.html",[229,1.739,709,2.327]],["body/entities/Order.html",[0,0.245,3,0.188,4,0.168,5,0.13,9,1.223,12,0.526,14,0.34,15,0.017,19,0.188,25,0.011,26,0.011,31,0.456,34,2.357,37,1.305,67,1.619,122,1.467,130,0.853,139,3.378,140,4.459,159,1.15,160,2.218,196,4.017,197,3.828,198,4.543,199,4.017,200,1.834,218,3.828,229,2.334,234,2.28,261,2.906,262,2.906,264,5.459,266,4.448,267,4.448,341,4.887,709,3.124,719,2.449,738,2.28,739,3.246,740,6.327,741,5.156,742,3.762,743,3.762,744,3.762,745,3.762,746,6.628,747,3.634,748,3.762,749,3.762,750,2.906]],["title/classes/OrderMapper.html",[0,0.251,751,2.707]],["body/classes/OrderMapper.html",[0,0.297,2,0.683,3,0.227,4,0.204,5,0.158,12,0.379,14,0.386,15,0.017,19,0.227,25,0.013,26,0.013,31,0.552,32,1.526,36,1.137,42,1.188,95,2.296,123,0.951,130,0.521,159,0.791,167,3.92,171,1.088,178,1.96,229,3.091,709,2.761,751,4.126,752,3.931,753,5.854,754,5.854,755,4.556,756,4.444,757,3.931,758,3.519,759,3.519,760,4.522,761,4.556,762,4.556,763,4.556,764,4.556,765,4.556,766,4.556,767,4.556,768,4.556,769,4.556,770,4.556,771,4.556,772,4.556]],["title/classes/OrderResponseDto.html",[0,0.251,756,2.5]],["body/classes/OrderResponseDto.html",[0,0.269,2,0.618,3,0.206,4,0.184,5,0.143,12,0.585,14,0.272,15,0.017,19,0.206,25,0.012,26,0.012,31,0.5,34,2.62,37,1.39,122,1.562,125,4.346,130,0.805,132,3.868,196,3.737,197,4.013,198,4.762,199,3.737,200,1.952,211,3.292,221,5.365,222,2.204,756,3.572,773,6.194,774,3.188,775,4.128,776,4.128,777,4.128,778,3.561,779,3.561,780,3.561]],["title/controllers/OrdersController.html",[27,2.18,781,2.707]],["body/controllers/OrdersController.html",[0,0.218,3,0.166,4,0.149,5,0.116,12,0.458,14,0.435,15,0.017,16,0.665,19,0.166,25,0.01,26,0.01,27,2.689,29,1.892,31,0.404,32,1.235,34,2.053,36,1.375,37,1.256,40,2.35,41,2.35,42,1.437,117,3.66,118,2.575,123,1.151,130,0.631,159,0.957,171,1.316,193,3.74,197,3.907,203,2.718,222,1.78,229,2.871,233,2.689,310,2.575,406,2.02,497,2.575,563,2.02,580,2.876,750,2.575,756,2.17,757,2.876,758,2.575,781,3.34,782,2.876,783,4.088,784,4.088,785,4.088,786,2.876,787,5.513,788,4.739,789,3.66,790,3.334,791,4.756,792,3.334,793,2.876,794,3.334,795,3.334,796,3.334,797,2.876,798,3.334,799,3.334,800,4.088,801,3.334,802,3.334,803,3.341,804,2.876,805,3.334,806,2.35,807,4.739,808,4.756,809,6.003,810,2.575,811,3.334,812,3.334,813,3.334,814,3.334,815,3.334,816,2.575,817,3.334,818,3.334,819,3.334,820,3.334,821,3.334,822,3.334]],["title/modules/OrdersModule.html",[44,2.18,57,2.5]],["body/modules/OrdersModule.html",[0,0.274,3,0.209,4,0.187,5,0.145,14,0.483,15,0.017,16,0.837,19,0.209,25,0.012,26,0.012,29,3.148,44,3.527,46,2.541,47,2.73,48,3.239,49,3.239,50,2.73,51,4.8,52,3.239,57,4.762,58,4.284,59,3.239,60,2.956,62,3.239,74,3.618,75,2.38,81,3.618,82,2.956,159,0.728,229,2.511,234,2.541,759,3.239,781,4.38,803,4.282,804,3.618,823,3.618,824,3.618,825,4.282,826,4.194,827,4.194,828,4.284,829,3.618,830,3.618,831,4.194,832,4.194]],["title/injectables/OrdersService.html",[103,1.305,803,2.327]],["body/injectables/OrdersService.html",[0,0.138,3,0.105,4,0.094,5,0.073,11,0.998,12,0.432,14,0.419,15,0.017,16,0.421,19,0.105,25,0.007,26,0.007,31,0.256,32,0.875,36,1.38,37,1.055,41,2.945,42,1.089,67,0.908,75,1.198,82,1.488,93,3.312,95,2.4,103,1.141,104,1.064,122,0.955,123,0.994,130,0.545,159,0.826,160,0.908,171,1.137,178,2.236,193,3.14,196,2.034,197,3.919,200,1.194,203,2.155,211,2.542,212,5.195,213,2.896,229,3.074,247,2.949,254,1.127,383,1.374,501,4.108,545,3.353,563,3.353,621,1.279,622,1.279,700,2.945,705,4.273,727,4.108,738,2.034,750,3.227,751,1.488,759,1.63,760,2.592,783,2.896,784,2.896,785,2.896,786,2.896,789,3.677,791,4.483,793,2.896,797,2.896,803,2.885,806,1.488,816,3.677,825,3.649,829,1.821,830,1.821,833,1.821,834,2.111,835,4.761,836,4.774,837,3.356,838,2.896,839,4.178,840,3.605,841,3.356,842,2.592,843,3.356,844,3.605,845,3.356,846,3.356,847,2.111,848,3.356,849,4.273,850,4.774,851,2.111,852,3.356,853,3.677,854,2.592,855,2.111,856,3.356,857,4.761,858,3.356,859,2.111,860,2.111,861,1.63,862,1.821,863,2.111,864,2.111,865,2.111,866,2.111,867,2.111,868,2.111,869,2.111,870,2.111,871,1.821,872,2.111,873,2.111,874,1.821,875,2.111,876,2.111,877,1.63,878,2.111,879,3.356,880,2.111,881,3.356,882,2.111,883,2.111,884,2.111,885,2.111,886,2.111,887,2.111,888,2.111,889,2.111,890,2.111,891,2.111]],["title/classes/Pagination.html",[0,0.251,285,2.5]],["body/classes/Pagination.html",[0,0.257,2,0.591,3,0.197,4,0.176,5,0.137,12,0.328,14,0.351,15,0.017,19,0.197,25,0.012,26,0.012,31,0.478,32,1.387,36,1.328,42,1.387,123,0.823,130,0.609,159,0.684,167,3.651,171,1.271,178,2.593,200,2.295,280,2.779,285,4.385,406,3.225,563,3.651,622,3.225,758,3.045,892,3.401,893,3.943,894,4.518,895,5.812,896,6.451,897,4.385,898,3.943,899,4.547,900,4.653,901,4.653,902,3.045,903,3.401,904,3.943,905,4.247,906,4.592,907,3.401]],["title/interfaces/PaginationRequest.html",[278,2.5,894,2.5]],["body/interfaces/PaginationRequest.html",[3,0.183,4,0.164,5,0.127,15,0.017,19,0.183,25,0.013,26,0.011,31,0.796,37,0.699,122,1.442,123,1.419,130,0.812,196,3.07,200,2.593,203,1.661,229,2.974,278,3.298,280,2.585,285,4.276,504,3.07,516,4.371,595,4.371,894,3.298,897,2.388,900,4.834,901,5.562,902,5.377,908,3.165,909,3.165,910,5.007,911,3.668,912,2.833,913,5.667,914,4.371,915,5.007,916,5.066,917,5.066,918,5.066,919,5.066,920,5.804,921,5.066,922,5.066,923,5.066,924,3.668,925,2.833,926,3.668,927,3.668,928,3.165,929,3.165]],["title/classes/PaginationResponseDto.html",[0,0.251,899,2.707]],["body/classes/PaginationResponseDto.html",[0,0.241,2,0.553,3,0.184,4,0.165,5,0.128,12,0.58,14,0.243,15,0.017,19,0.184,25,0.011,26,0.011,31,0.447,34,2.597,122,1.447,130,0.798,139,2.716,179,4.496,200,2.596,201,5.255,221,5.082,222,1.969,228,4.429,406,4.305,432,3.928,774,2.849,778,3.182,779,3.182,780,3.182,895,5.022,897,3.31,899,3.585,903,5.022,905,3.585,906,5.022,907,5.022,930,6.129,931,5.821,932,5.821,933,3.689,934,3.689,935,3.689,936,3.689]],["title/classes/PermissionExistsException.html",[0,0.251,937,2.966]],["body/classes/PermissionExistsException.html",[0,0.322,2,0.739,3,0.246,4,0.22,5,0.171,9,2,11,1.466,12,0.41,14,0.406,15,0.017,16,0.984,17,2.293,18,2.232,19,0.246,20,2.02,22,1.925,25,0.013,26,0.013,37,1.279,112,4.067,123,1.03,130,0.564,159,0.856,171,1.177,937,4.754,938,5.31,939,3.475,940,6.155,941,3.808,942,6.71,943,4.931,944,3.808,945,4.254]],["title/classes/RefreshTokenExpiredException.html",[0,0.251,946,2.966]],["body/classes/RefreshTokenExpiredException.html",[0,0.332,2,0.762,3,0.253,4,0.227,5,0.176,7,4.795,8,3.926,9,2.038,10,4.428,11,2.023,12,0.423,13,4.386,14,0.414,15,0.017,16,1.014,17,2.336,18,2.301,19,0.253,20,2.082,22,1.985,24,4.386,25,0.014,26,0.014,946,4.844,947,5.411,948,5.083,949,5.083]],["title/classes/ResponseDto.html",[0,0.251,647,2.707]],["body/classes/ResponseDto.html",[0,0.316,2,0.725,3,0.241,4,0.216,5,0.168,12,0.506,14,0.319,15,0.017,19,0.241,25,0.013,26,0.013,31,0.586,34,2.266,122,1.731,130,0.696,135,3.553,200,2.164,201,3.739,203,2.191,221,4.92,222,2.584,228,3.151,622,3.687,647,4.288,655,5.139,760,4.699,897,3.96,950,4.176,951,4.841,952,6.084,953,4.841]],["title/classes/RoleExistsException.html",[0,0.251,954,2.966]],["body/classes/RoleExistsException.html",[0,0.322,2,0.739,3,0.246,4,0.22,5,0.171,9,2,11,1.466,12,0.41,14,0.406,15,0.017,16,0.984,17,2.293,18,2.232,19,0.246,20,2.02,22,1.925,25,0.013,26,0.013,37,1.279,112,4.067,123,1.03,130,0.564,159,1.22,171,1.177,276,5.31,939,3.475,941,3.808,944,3.808,954,4.754,955,5.31,956,4.931,957,4.254]],["title/injectables/TaxService.html",[103,1.305,825,2.327]],["body/injectables/TaxService.html",[0,0.223,3,0.171,4,0.153,5,0.119,11,1.017,12,0.401,14,0.422,15,0.017,16,0.683,19,0.171,25,0.01,26,0.01,31,0.414,32,1.258,36,1.204,40,2.411,72,4.813,73,1.724,86,1.401,93,2.985,101,2.411,103,1.64,104,1.724,123,1.008,130,0.552,159,0.837,171,1.152,178,1.472,193,3.875,203,2.184,229,2.184,244,3.401,247,1.941,448,2.739,479,2.411,563,2.924,579,2.226,613,2.951,621,2.073,622,2.073,643,3.727,800,4.163,806,2.411,816,3.727,825,3.68,838,4.163,842,3.727,844,5.891,849,3.727,850,4.163,853,5.274,854,3.727,862,2.951,871,4.163,874,4.163,958,2.951,959,4.825,960,2.951,961,3.421,962,4.825,963,4.825,964,4.825,965,3.421,966,4.163,967,4.825,968,4.825,969,4.825,970,4.163,971,3.421,972,3.421,973,3.421,974,3.421,975,3.421,976,3.421,977,3.421]],["title/injectables/TypeOrmConfigService.html",[68,2.707,103,1.305]],["body/injectables/TypeOrmConfigService.html",[0,0.202,3,0.154,4,0.138,5,0.107,11,0.919,12,0.373,14,0.383,15,0.017,16,0.617,19,0.154,25,0.01,26,0.01,31,0.375,32,1.17,36,0.771,40,2.179,42,0.806,68,3.163,72,4.527,73,1.558,75,1.755,86,3.041,101,5.199,103,1.526,104,1.558,123,0.646,130,0.514,139,1.651,159,0.537,171,0.738,236,1.651,272,1.755,308,2.179,339,3.163,344,2.012,448,1.755,451,2.179,456,2.179,459,2.179,461,2.388,468,2.388,470,2.388,473,2.388,579,2.012,719,3.774,738,1.873,877,2.388,925,2.388,960,2.667,978,4.559,979,2.667,980,5.798,981,3.092,982,3.092,983,5.798,984,4.488,985,3.092,986,3.092,987,3.092,988,3.092,989,3.092,990,3.092,991,3.092,992,2.388,993,3.092,994,3.092,995,2.667,996,2.667,997,3.092,998,3.872,999,2.667,1000,2.388,1001,2.667,1002,2.667,1003,2.667,1004,2.667,1005,2.667,1006,2.388,1007,2.667,1008,2.667,1009,2.667,1010,2.388,1011,2.667,1012,3.092,1013,2.667,1014,2.667,1015,3.092,1016,2.667,1017,3.092,1018,3.092,1019,3.092,1020,3.092,1021,3.092,1022,3.092]],["title/classes/UpdateOrderDto.html",[0,0.251,1023,2.966]],["body/classes/UpdateOrderDto.html",[0,0.356,2,0.818,3,0.272,4,0.244,5,0.189,9,2.129,14,0.432,15,0.017,19,0.272,25,0.014,26,0.014,193,3.1,195,4.219,222,2.917,233,3.1,806,3.85,1023,5.061,1024,4.713,1025,6.553,1026,5.463]],["title/classes/UserExistsException.html",[0,0.251,1027,2.966]],["body/classes/UserExistsException.html",[0,0.322,2,0.739,3,0.246,4,0.22,5,0.171,9,2,11,1.466,12,0.41,14,0.406,15,0.017,16,0.984,17,2.293,18,2.232,19,0.246,20,2.02,22,1.925,25,0.013,26,0.013,37,1.279,112,4.067,123,1.03,130,0.564,159,0.856,171,1.177,297,3.808,459,4.338,939,3.475,941,3.808,944,3.808,1027,4.754,1028,5.31,1029,6.155,1030,4.931,1031,4.931]],["title/classes/UuidPrimaryIdEntity.html",[0,0.251,747,2.707]],["body/classes/UuidPrimaryIdEntity.html",[0,0.241,2,0.554,3,0.184,4,0.165,5,0.128,9,1.656,12,0.58,14,0.336,15,0.017,19,0.184,25,0.011,26,0.011,31,0.448,32,1.328,34,2.454,36,1.271,37,1.111,67,1.592,86,1.515,119,4.696,122,1.45,123,1.064,124,3.936,125,3.592,126,3.936,127,3.936,128,4.502,129,4.502,130,0.813,132,4.109,133,2.857,134,2.607,135,3.113,136,3.794,137,4.109,138,2.607,139,3.113,140,4.109,142,2.857,143,2.607,145,2.857,146,2.607,147,2.857,148,2.408,150,2.857,152,2.607,211,3.113,271,3.592,658,2.857,661,3.191,662,5.876,663,3.191,664,3.191,665,3.191,666,3.191,667,3.191,668,3.191,669,3.191,670,3.191,747,3.592,1032,4.396,1033,5.096]],["title/coverage.html",[1034,4.038]],["body/coverage.html",[0,0.479,1,1.247,5,0.056,6,1.393,7,1.901,8,2.083,15,0.017,25,0.006,26,0.006,27,1.971,28,1.051,30,1.393,38,0.978,50,1.051,68,1.138,76,1.138,77,1.138,78,1.138,79,1.138,95,0.814,103,1.844,105,1.393,109,1.247,110,1.393,111,2.083,119,1.051,120,1.393,130,0.737,159,0.28,164,1.247,165,1.393,166,1.393,174,4.354,193,0.916,194,1.393,195,2.083,202,1.901,203,0.731,229,1.221,231,1.247,232,1.393,233,1.531,234,0.978,235,1.393,250,1.247,251,1.393,252,2.083,253,1.393,271,1.901,272,0.916,274,1.247,275,1.393,278,1.755,279,1.138,281,1.393,282,1.393,285,1.051,292,1.247,293,1.393,294,1.393,300,2.045,301,1.247,333,0.978,407,1.393,476,1.393,484,1.393,489,1.247,490,1.393,491,1.393,504,0.978,525,1.247,526,1.393,527,1.393,532,1.247,533,1.393,534,1.393,543,1.247,544,1.393,567,1.051,568,1.393,579,1.051,599,2.997,609,1.247,610,2.083,611,1.393,619,1.247,621,0.978,635,1.247,636,1.393,647,1.138,656,1.247,657,1.393,658,2.083,671,1.247,672,2.448,673,1.393,678,1.247,679,1.393,683,1.247,684,1.393,687,1.247,688,1.393,691,1.247,692,2.448,693,2.448,709,0.978,716,1.247,718,1.247,725,1.247,726,1.393,739,1.393,747,1.138,751,1.138,752,1.393,756,1.051,773,1.393,774,2.083,781,1.138,782,1.393,803,0.978,810,1.247,825,0.978,828,1.247,833,1.393,861,1.247,892,1.393,894,1.051,899,1.138,905,5.481,908,1.393,909,1.393,912,1.247,930,1.393,937,1.247,938,1.393,939,2.448,946,1.247,947,1.393,950,1.393,954,1.247,955,1.393,958,1.393,978,1.393,979,1.393,1023,1.247,1024,1.393,1027,1.247,1028,1.393,1032,1.393,1034,1.247,1035,1.247,1036,1.614,1037,1.614,1038,6.956,1039,2.997,1040,6.44,1041,1.393,1042,7.395,1043,1.393,1044,1.393,1045,1.393,1046,1.393,1047,1.393,1048,4.466,1049,1.393,1050,1.393,1051,1.393,1052,1.393,1053,1.393,1054,1.393,1055,1.393,1056,2.697,1057,1.614,1058,2.697,1059,3.473,1060,1.614,1061,1.393,1062,2.697,1063,3.473,1064,1.393,1065,1.393,1066,1.393,1067,1.393,1068,1.393,1069,1.393,1070,2.697,1071,1.614,1072,1.614,1073,1.614,1074,1.393,1075,1.393,1076,1.393,1077,1.393,1078,1.393,1079,1.393,1080,1.393,1081,1.393,1082,6.343,1083,1.393,1084,1.393,1085,1.393,1086,1.393,1087,1.393,1088,1.247,1089,1.393,1090,1.393,1091,1.393,1092,1.393,1093,1.393,1094,4.057,1095,1.393,1096,1.393,1097,1.393,1098,1.393,1099,1.393,1100,1.614,1101,4.466,1102,1.393,1103,1.393,1104,1.614,1105,2.997,1106,1.393,1107,1.393,1108,1.393,1109,1.393,1110,1.393,1111,1.393,1112,1.614,1113,2.697,1114,1.614,1115,2.683,1116,1.614,1117,1.614,1118,1.614]],["title/dependencies.html",[47,3.004,1119,2.773]],["body/dependencies.html",[0,0.384,15,0.017,16,0.916,25,0.013,26,0.013,47,2.986,67,2.53,73,2.312,75,2.604,82,3.233,89,3.958,155,3.958,222,2.449,227,2.449,502,3.958,562,3.958,578,3.543,623,5.073,651,3.543,840,3.958,970,3.958,1120,6.49,1121,4.588,1122,4.588,1123,5.88,1124,4.588,1125,4.588,1126,4.588,1127,4.588,1128,4.588,1129,4.588,1130,4.588,1131,4.588,1132,4.588,1133,4.588,1134,4.588,1135,4.588,1136,4.588,1137,4.588,1138,4.588,1139,4.588,1140,4.588,1141,4.588,1142,3.958,1143,4.588,1144,4.588,1145,4.588,1146,4.588]],["title/miscellaneous/enumerations.html",[1147,1.716,1148,3.982]],["body/miscellaneous/enumerations.html",[15,0.017,17,1.249,25,0.007,26,0.007,31,0.255,218,3.096,254,4.23,261,3.674,262,4.27,301,1.628,323,2.892,342,2.589,343,2.892,344,2.182,345,2.589,346,2.892,347,2.892,348,2.892,349,2.892,350,2.892,351,3.601,352,1.818,353,1.818,354,2.892,355,2.892,356,2.892,357,2.892,358,2.892,359,1.818,360,1.818,361,1.818,362,1.818,363,1.818,364,1.818,365,2.892,366,2.892,621,2.031,700,2.363,789,2.589,854,2.589,1147,1.125,1148,1.818,1149,3.352,1150,2.108,1151,3.352,1152,2.108,1153,2.108,1154,4.757,1155,3.352,1156,2.108,1157,3.352,1158,2.108,1159,3.352,1160,4.174,1161,3.352,1162,3.352,1163,3.352,1164,3.352,1165,5.529,1166,3.352,1167,2.108,1168,3.352,1169,3.352,1170,2.108,1171,3.352,1172,2.108,1173,2.108,1174,2.108,1175,2.108,1176,2.108,1177,2.108,1178,2.108,1179,2.108,1180,2.108,1181,2.108,1182,2.108,1183,2.108,1184,2.108,1185,2.108,1186,2.108,1187,2.108,1188,2.108,1189,2.108,1190,2.108,1191,2.108,1192,2.108,1193,2.108,1194,2.108,1195,2.108,1196,2.108,1197,2.108,1198,2.108,1199,2.108,1200,2.108,1201,2.108,1202,2.108,1203,2.108,1204,2.108,1205,2.108,1206,2.108,1207,2.108,1208,2.108,1209,2.108,1210,2.108,1211,2.108,1212,2.108,1213,2.108,1214,3.352,1215,3.352,1216,2.108,1217,3.352,1218,3.352,1219,3.352,1220,4.174,1221,3.352,1222,3.352,1223,3.352,1224,3.352,1225,3.352,1226,3.352,1227,3.352,1228,3.352,1229,3.352,1230,3.352,1231,3.352,1232,3.352,1233,3.352,1234,3.352,1235,3.352,1236,2.892,1237,3.352,1238,3.352,1239,2.892,1240,3.352,1241,2.108,1242,3.352,1243,3.352,1244,3.352,1245,3.352,1246,3.352,1247,2.108,1248,3.352,1249,3.352,1250,2.108,1251,3.352,1252,3.352,1253,3.352]],["title/miscellaneous/functions.html",[1147,1.716,1254,3.982]],["body/miscellaneous/functions.html",[15,0.016,25,0.013,26,0.013,31,0.543,36,1.827,50,4.176,123,0.935,130,0.512,159,0.777,171,1.069,333,3.509,444,3.864,1048,3.864,1049,5.536,1050,5.536,1051,5.536,1052,5.536,1053,5.536,1054,5.536,1055,5.536,1095,3.864,1096,4.995,1111,3.864,1147,2.391,1254,3.864,1255,4.479,1256,7.321,1257,4.479,1258,7.498,1259,4.479,1260,5.79,1261,5.79,1262,5.79]],["title/index.html",[31,0.389,1263,3.214,1264,3.214]],["body/index.html",[4,0.118,5,0.186,15,0.017,25,0.009,26,0.009,60,3.791,67,2.793,95,2.433,116,3.093,136,3.141,159,0.46,188,2.286,218,1.725,228,3.501,233,3.052,234,2.925,252,2.047,342,2.047,344,1.725,345,3.093,401,2.286,504,1.606,505,4.982,509,2.286,571,4.154,589,4.164,738,2.427,915,2.286,966,2.286,992,4.46,1000,3.727,1006,4.154,1010,3.093,1034,2.047,1035,2.047,1236,2.286,1265,2.65,1266,2.65,1267,2.65,1268,5.378,1269,2.286,1270,7.187,1271,2.65,1272,7.336,1273,2.65,1274,4.004,1275,2.65,1276,2.65,1277,6.305,1278,6.492,1279,4.004,1280,2.65,1281,2.65,1282,2.65,1283,2.65,1284,4.004,1285,2.65,1286,2.65,1287,4.004,1288,2.65,1289,4.004,1290,2.65,1291,4.004,1292,2.65,1293,5.774,1294,2.65,1295,2.65,1296,2.65,1297,2.65,1298,4.826,1299,2.65,1300,2.65,1301,2.65,1302,2.65,1303,2.65,1304,2.65,1305,2.65,1306,2.65,1307,2.65,1308,5.378,1309,4.004,1310,2.65,1311,2.65,1312,2.65,1313,4.64,1314,4.004,1315,2.65,1316,2.65,1317,2.65,1318,2.65,1319,2.65,1320,2.65,1321,4.826,1322,2.65,1323,2.65,1324,2.65,1325,2.286,1326,2.65,1327,2.65,1328,2.65,1329,2.65,1330,2.65,1331,2.65,1332,2.65,1333,4.004,1334,2.65,1335,2.65,1336,2.65,1337,2.65,1338,4.004,1339,2.65,1340,2.65,1341,2.65,1342,4.004,1343,4.004,1344,4.004,1345,2.65,1346,2.65,1347,2.65,1348,2.65,1349,2.65,1350,2.65,1351,2.65,1352,2.286,1353,2.65,1354,2.65,1355,2.65,1356,2.286,1357,2.65,1358,2.65,1359,2.65,1360,2.65,1361,2.65,1362,2.65,1363,2.286]],["title/modules.html",[46,3.169]],["body/modules.html",[15,0.015,25,0.015,26,0.015,45,4.034,46,3.469,56,3.725,57,3.725,600,4.938,1313,5.813,1325,4.938,1364,6.737,1365,6.737,1366,7.16]],["title/overview.html",[1367,4.511]],["body/overview.html",[2,0.715,15,0.016,25,0.013,26,0.013,29,2.707,38,4.005,44,2.707,45,5.296,46,2.891,47,3.105,48,3.684,49,3.684,50,3.105,51,3.684,52,3.684,53,4.116,54,4.116,55,4.116,56,4.302,57,4.835,58,4.656,59,3.684,60,3.362,104,2.404,280,3.362,406,2.891,475,3.684,483,5.201,738,2.891,803,4.005,823,4.116,824,4.116,825,4.005,1367,4.116,1368,4.77,1369,4.77]],["title/properties.html",[122,1.314,1119,2.773]],["body/properties.html",[15,0.017,25,0.015,26,0.015,122,1.658,203,2.637,310,4.499,1356,5.025,1363,5.025,1370,5.825,1371,5.825]],["title/miscellaneous/typealiases.html",[1147,1.716,1372,4.616]],["body/miscellaneous/typealiases.html",[15,0.015,25,0.012,26,0.012,31,0.52,76,3.968,77,3.968,78,3.968,79,3.968,130,0.859,187,3.313,579,3.664,692,3.023,693,3.968,718,4.348,719,3.664,861,4.348,897,4.09,914,6.416,1080,3.7,1081,4.857,1083,4.857,1084,3.7,1085,4.857,1086,4.857,1087,3.7,1088,4.348,1089,3.7,1090,4.857,1091,3.7,1092,4.857,1093,4.857,1101,3.7,1102,4.857,1103,4.857,1115,3.313,1147,2.29,1373,4.289,1374,7.247,1375,4.289,1376,4.289,1377,4.289,1378,4.289,1379,3.7,1380,4.289,1381,4.289,1382,4.289,1383,4.289]],["title/miscellaneous/variables.html",[1147,1.716,1384,3.982]],["body/miscellaneous/variables.html",[5,0.082,7,0.689,15,0.017,22,0.382,23,2.043,25,0.004,26,0.004,28,0.637,31,0.118,33,0.755,37,0.76,42,0.455,65,0.689,66,0.844,86,1.634,94,1.508,95,2.879,107,0.844,116,1.35,122,1.046,130,0.641,135,0.933,138,3.683,139,1.962,159,0.5,160,2.362,171,0.233,178,1.239,179,0.755,199,2.417,200,1.024,202,1.232,203,2.134,211,3.573,228,1.137,229,0.443,233,3.297,234,1.059,254,2.931,272,0.555,277,4.066,279,0.689,286,2.043,287,2.043,288,2.043,289,2.043,290,2.043,291,1.508,297,2.556,308,0.689,339,1.232,341,0.755,344,0.637,374,0.844,377,1.508,383,1.542,395,1.508,406,1.059,448,0.555,449,0.844,450,0.844,451,0.689,452,0.844,453,0.844,454,0.844,455,0.844,456,1.669,457,0.844,458,0.844,459,0.689,460,0.844,461,0.755,462,0.844,464,0.844,465,0.844,467,0.844,468,0.755,469,0.844,470,0.755,471,0.844,472,0.844,473,0.755,474,0.844,510,1.508,522,0.844,531,0.844,567,0.637,570,0.844,571,1.35,610,0.755,615,0.844,619,1.35,620,0.844,621,1.745,625,0.844,639,0.755,643,2.556,655,1.35,712,2.485,719,1.875,720,0.844,738,0.593,808,1.508,810,1.35,828,1.35,836,2.485,842,0.755,849,1.829,853,1.35,877,0.755,894,0.637,900,3.64,901,2.838,902,3.08,905,2.332,910,0.844,912,4.884,913,1.508,925,0.755,928,0.844,929,1.508,945,2.485,957,2.855,992,0.755,995,0.844,996,0.844,998,1.508,999,0.844,1000,0.755,1001,0.844,1002,0.844,1003,0.844,1004,0.844,1005,0.844,1006,0.755,1007,0.844,1008,0.844,1009,0.844,1010,1.35,1011,0.844,1013,0.844,1014,0.844,1016,0.844,1035,1.35,1039,0.844,1041,1.508,1043,1.508,1044,1.508,1045,0.844,1046,1.508,1047,1.508,1061,1.508,1064,0.844,1065,1.508,1066,1.508,1067,0.844,1068,1.508,1069,1.508,1074,0.844,1075,1.508,1076,1.508,1077,0.844,1078,1.508,1079,1.508,1088,0.755,1097,0.844,1098,1.508,1099,1.508,1105,0.844,1106,1.508,1107,1.508,1108,0.844,1109,1.508,1110,1.508,1115,0.755,1142,0.844,1147,0.522,1239,0.844,1269,0.844,1352,0.844,1379,0.844,1384,0.844,1385,1.747,1386,0.978,1387,2.368,1388,2.368,1389,0.978,1390,0.978,1391,0.978,1392,0.978,1393,0.978,1394,1.747,1395,1.747,1396,0.978,1397,2.368,1398,3.309,1399,1.747,1400,1.747,1401,1.747,1402,1.747,1403,1.747,1404,1.747,1405,1.747,1406,1.747,1407,1.747,1408,1.747,1409,2.88,1410,2.88,1411,2.88,1412,2.88,1413,0.978,1414,0.978,1415,0.978,1416,0.978,1417,0.978,1418,0.978,1419,0.978,1420,0.978,1421,0.978,1422,0.978,1423,0.978,1424,0.978,1425,1.747,1426,0.978,1427,0.978,1428,1.747,1429,5.49,1430,0.978,1431,0.978,1432,0.978,1433,0.978,1434,0.978,1435,0.978,1436,0.978,1437,1.747,1438,0.978,1439,0.978,1440,0.978,1441,0.978,1442,0.978,1443,0.978,1444,0.978,1445,0.978,1446,0.978,1447,0.978,1448,0.978,1449,0.978,1450,0.978,1451,0.978,1452,0.978,1453,0.978,1454,0.978,1455,0.978,1456,0.978,1457,0.978,1458,0.978,1459,0.978,1460,0.978,1461,0.978,1462,0.978,1463,0.978,1464,0.978,1465,0.978,1466,0.978,1467,0.978,1468,0.978,1469,0.978,1470,0.978,1471,0.978,1472,0.978,1473,0.978,1474,0.978,1475,0.978,1476,0.978,1477,0.978,1478,0.978,1479,0.978,1480,0.978,1481,0.978,1482,0.978,1483,0.978,1484,0.978,1485,0.978,1486,0.978,1487,0.978,1488,0.978,1489,0.978,1490,0.978,1491,0.978,1492,0.978,1493,0.978,1494,0.978,1495,0.978,1496,0.978,1497,0.978,1498,0.978,1499,0.978,1500,0.978,1501,0.978,1502,1.747,1503,0.978,1504,0.978,1505,0.978,1506,0.978,1507,0.978,1508,0.978,1509,6.2,1510,0.978,1511,0.978,1512,0.978,1513,0.978,1514,0.978,1515,0.978,1516,0.978,1517,0.978,1518,0.978,1519,3.988,1520,0.978,1521,0.978,1522,0.978,1523,0.978,1524,0.978,1525,1.747,1526,1.747,1527,0.978,1528,0.978,1529,0.978,1530,0.978,1531,0.978,1532,0.978,1533,0.978,1534,4.261,1535,0.978,1536,3.309,1537,1.747,1538,0.978,1539,5.072,1540,0.978,1541,0.978,1542,0.978,1543,0.978,1544,0.978,1545,0.978,1546,0.978,1547,0.978,1548,0.978,1549,0.978,1550,3.988,1551,0.978,1552,0.978,1553,0.978,1554,2.368,1555,0.978,1556,0.978,1557,0.978,1558,0.978,1559,0.978,1560,0.978,1561,0.978,1562,3.988,1563,1.747,1564,0.978,1565,3.309,1566,0.978,1567,0.978,1568,0.978,1569,0.978,1570,2.368,1571,0.978,1572,0.978,1573,0.978,1574,0.978,1575,0.978,1576,0.978,1577,0.978,1578,0.978,1579,0.978,1580,0.978,1581,2.368,1582,0.978,1583,0.978,1584,0.978,1585,0.978,1586,3.309,1587,0.978,1588,0.978,1589,0.978,1590,0.978,1591,0.978,1592,0.978,1593,3.309,1594,0.978,1595,0.978,1596,0.978,1597,0.978,1598,0.978,1599,0.978,1600,0.978,1601,0.978,1602,0.978,1603,0.978,1604,0.978,1605,0.978,1606,0.978,1607,0.978,1608,0.978,1609,0.978,1610,1.747,1611,0.978,1612,0.978,1613,0.978,1614,0.978,1615,1.747,1616,0.978,1617,2.368,1618,1.747,1619,1.747,1620,0.978,1621,0.978,1622,0.978,1623,0.978,1624,3.674,1625,0.978,1626,1.747,1627,1.747,1628,0.978,1629,0.978,1630,0.978,1631,0.978,1632,1.747,1633,0.978,1634,1.747,1635,0.978,1636,0.978,1637,1.747,1638,0.978,1639,0.978,1640,0.978,1641,0.978]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplicatonExistException.html":{},"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateOrderDto.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/CustomerExistException.html":{},"interfaces/DefaultPagination.html":{},"classes/DisabledUserException.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/FileFinder.html":{},"classes/ForeignKeyConflictException.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"classes/InvalidTokenException.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"entities/Order.html":{},"classes/OrderMapper.html":{},"classes/OrderResponseDto.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"interfaces/PaginationRequest.html":{},"classes/PaginationResponseDto.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/ResponseDto.html":{},"classes/RoleExistsException.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateOrderDto.html":{},"classes/UserExistsException.html":{},"classes/UuidPrimaryIdEntity.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":905,"title":{},"body":{"classes/Pagination.html":{},"classes/PaginationResponseDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":1370,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":1131,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1138,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":1145,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":604,"title":{},"body":{"controllers/HealthController.html":{}}}],["0.5.1",{"_index":1130,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1042,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1100,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1104,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1038,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1094,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1063,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1112,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1116,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1058,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1059,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":406,"title":{"classes/EnvironmentVariablesValidator-1.html":{}},"body":{"controllers/OrdersController.html":{},"classes/Pagination.html":{},"classes/PaginationResponseDto.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.0",{"_index":380,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["1.7.7",{"_index":1128,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1070,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1062,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1057,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1072,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":383,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/HashHelper.html":{},"injectables/OrdersService.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":1120,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":1127,"title":{},"body":{"dependencies.html":{}}}],["10.1.0",{"_index":1123,"title":{},"body":{"dependencies.html":{}}}],["10.2.3",{"_index":1126,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":202,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["100.0",{"_index":230,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["1024",{"_index":587,"title":{},"body":{"controllers/HealthController.html":{}}}],["1234",{"_index":539,"title":{},"body":{"classes/GenerateCharacters.html":{}}}],["123e4567",{"_index":206,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["12d3",{"_index":208,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["14",{"_index":1071,"title":{},"body":{"coverage.html":{}}}],["1617826799860",{"_index":952,"title":{},"body":{"classes/ResponseDto.html":{}}}],["2",{"_index":475,"title":{"classes/EnvironmentVariablesValidator-2.html":{}},"body":{"classes/GenerateCharacters.html":{},"overview.html":{}}}],["2.4.3",{"_index":1129,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1117,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1060,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":1073,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23502",{"_index":1175,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["23503",{"_index":1177,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["23505",{"_index":1179,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["3",{"_index":483,"title":{"classes/EnvironmentVariablesValidator-3.html":{}},"body":{"overview.html":{}}}],["3.3.0",{"_index":1121,"title":{},"body":{"dependencies.html":{}}}],["3.6.2",{"_index":1146,"title":{},"body":{"dependencies.html":{}}}],["300",{"_index":586,"title":{},"body":{"controllers/HealthController.html":{}}}],["3000",{"_index":384,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["300mb",{"_index":590,"title":{},"body":{"controllers/HealthController.html":{}}}],["33",{"_index":1056,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":1369,"title":{},"body":{"overview.html":{}}}],["4/6",{"_index":1114,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["401",{"_index":1443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["402",{"_index":1445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["403",{"_index":1447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["404",{"_index":1449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["405",{"_index":1451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["406",{"_index":1453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["407",{"_index":1455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["408",{"_index":1457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["409",{"_index":1459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["410",{"_index":1460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["411",{"_index":1462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["412",{"_index":1464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["413",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["414",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["415",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["416",{"_index":1472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["417",{"_index":1474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["418",{"_index":1476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["421",{"_index":1478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["422",{"_index":1480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["424",{"_index":1482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["426614174000",{"_index":210,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["429",{"_index":1484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.0.1",{"_index":1144,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":599,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["500",{"_index":1486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["501",{"_index":1488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["502",{"_index":1490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["503",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["504",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["505",{"_index":1496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5432",{"_index":455,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/variables.html":{}}}],["6.0.1",{"_index":1140,"title":{},"body":{"dependencies.html":{}}}],["66",{"_index":1113,"title":{},"body":{"coverage.html":{}}}],["7.8.1",{"_index":1141,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1368,"title":{},"body":{"overview.html":{}}}],["8.0.1",{"_index":1125,"title":{},"body":{"dependencies.html":{}}}],["8.13.1",{"_index":1135,"title":{},"body":{"dependencies.html":{}}}],["8.7.3",{"_index":1133,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":998,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["__entity",{"_index":124,"title":{},"body":{"classes/Base.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["a456",{"_index":209,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["access",{"_index":23,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"miscellaneous/variables.html":{}}}],["access_token_expired",{"_index":1184,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["accessing",{"_index":962,"title":{},"body":{"injectables/TaxService.html":{}}}],["accesstokenexpired",{"_index":1183,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["accesstokenexpiredexception",{"_index":1,"title":{"classes/AccessTokenExpiredException.html":{}},"body":{"classes/AccessTokenExpiredException.html":{},"coverage.html":{}}}],["accumulator",{"_index":1637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["add",{"_index":521,"title":{},"body":{"classes/FileFinder.html":{},"injectables/HttpResponseInterceptor.html":{}}}],["admin",{"_index":1537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["adminstatistics",{"_index":1601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["afterload",{"_index":150,"title":{},"body":{"classes/Base.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["alias",{"_index":1082,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":1373,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allconfigtype",{"_index":579,"title":{},"body":{"controllers/HealthController.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["allocated",{"_index":593,"title":{},"body":{"controllers/HealthController.html":{}}}],["allof",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["already",{"_index":117,"title":{},"body":{"classes/ApplicatonExistException.html":{},"classes/CustomerExistException.html":{},"controllers/OrdersController.html":{}}}],["already_exists",{"_index":1204,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["alreadyexists",{"_index":1203,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["amazing",{"_index":1349,"title":{},"body":{"index.html":{}}}],["amount",{"_index":196,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateTableForOrders1730365329511.html":{},"entities/Order.html":{},"classes/OrderResponseDto.html":{},"injectables/OrdersService.html":{},"interfaces/PaginationRequest.html":{}}}],["api",{"_index":395,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/variables.html":{}}}],["api_prefix",{"_index":302,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["apiconflictresponse",{"_index":807,"title":{},"body":{"controllers/OrdersController.html":{}}}],["apiextramodels(paginationresponsedto",{"_index":1414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiextramodels(responsedto",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiforbiddenresponse",{"_index":1403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiglobalresponse",{"_index":810,"title":{},"body":{"controllers/OrdersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiglobalresponse(orderresponsedto",{"_index":813,"title":{},"body":{"controllers/OrdersController.html":{}}}],["apiinternalservererrorresponse",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apinotfoundresponse",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiokresponse",{"_index":808,"title":{},"body":{"controllers/OrdersController.html":{},"miscellaneous/variables.html":{}}}],["apioperation",{"_index":809,"title":{},"body":{"controllers/OrdersController.html":{}}}],["apioperation({description",{"_index":787,"title":{},"body":{"controllers/OrdersController.html":{}}}],["apipaginatedresponse",{"_index":1066,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiprefix",{"_index":393,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["apiproperty",{"_index":221,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/OrderResponseDto.html":{},"classes/PaginationResponseDto.html":{},"classes/ResponseDto.html":{}}}],["apiproperty({example",{"_index":201,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/PaginationResponseDto.html":{},"classes/ResponseDto.html":{}}}],["apiquery",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apitags",{"_index":580,"title":{},"body":{"controllers/HealthController.html":{},"controllers/OrdersController.html":{}}}],["apitags('health",{"_index":581,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags('orders",{"_index":812,"title":{},"body":{"controllers/OrdersController.html":{}}}],["apiunauthorizedresponse",{"_index":1401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiversion",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":377,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/variables.html":{}}}],["app.controller",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appconfig",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"classes/EnvironmentVariablesValidator.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["appcontroller",{"_index":28,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appdatasource",{"_index":1110,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apple_pay",{"_index":1234,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["application",{"_index":116,"title":{},"body":{"classes/ApplicatonExistException.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["applicationscontroller",{"_index":1609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicatonexistexception",{"_index":109,"title":{"classes/ApplicatonExistException.html":{}},"body":{"classes/ApplicatonExistException.html":{},"coverage.html":{}}}],["applydecorators",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":45,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approve",{"_index":1626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approved",{"_index":1248,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["appservice",{"_index":38,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentshost",{"_index":616,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["array",{"_index":522,"title":{},"body":{"classes/FileFinder.html":{},"miscellaneous/variables.html":{}}}],["asc",{"_index":928,"title":{},"body":{"interfaces/PaginationRequest.html":{},"miscellaneous/variables.html":{}}}],["assign",{"_index":284,"title":{},"body":{"interfaces/DefaultPagination.html":{}}}],["async",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/HashHelper.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/OrdersService.html":{},"injectables/TaxService.html":{}}}],["auth_options",{"_index":1041,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authconfig",{"_index":1102,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["authenticated",{"_index":1402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["author",{"_index":1356,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorized",{"_index":298,"title":{},"body":{"classes/DisabledUserException.html":{}}}],["automatically",{"_index":1278,"title":{},"body":{"index.html":{}}}],["available",{"_index":600,"title":{},"body":{"controllers/HealthController.html":{},"modules.html":{}}}],["await",{"_index":247,"title":{},"body":{"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/HashHelper.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/OrdersService.html":{},"injectables/TaxService.html":{}}}],["aws",{"_index":357,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["axios",{"_index":970,"title":{},"body":{"injectables/TaxService.html":{},"dependencies.html":{}}}],["axios.post",{"_index":972,"title":{},"body":{"injectables/TaxService.html":{}}}],["azure",{"_index":358,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["backend_domain",{"_index":303,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["backenddomain",{"_index":389,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["backers",{"_index":1350,"title":{},"body":{"index.html":{}}}],["bad_gateway",{"_index":1491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bad_request",{"_index":1442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bank",{"_index":1224,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["base",{"_index":119,"title":{"classes/Base.html":{}},"body":{"classes/Base.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{},"coverage.html":{}}}],["base:18",{"_index":664,"title":{},"body":{"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["base:27",{"_index":666,"title":{},"body":{"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["base:34",{"_index":665,"title":{},"body":{"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["base:36",{"_index":663,"title":{},"body":{"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["base:39",{"_index":667,"title":{},"body":{"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["base:43",{"_index":668,"title":{},"body":{"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["based",{"_index":1010,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["baseentity",{"_index":121,"title":{},"body":{"classes/Base.html":{}}}],["bcrypt",{"_index":561,"title":{},"body":{"classes/HashHelper.html":{}}}],["bcrypt.compare(plain",{"_index":566,"title":{},"body":{"classes/HashHelper.html":{}}}],["bcrypt.hash(str",{"_index":564,"title":{},"body":{"classes/HashHelper.html":{}}}],["bcryptjs",{"_index":562,"title":{},"body":{"classes/HashHelper.html":{},"dependencies.html":{}}}],["bearer",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blocked_user",{"_index":1198,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["blockeduser",{"_index":1197,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["board",{"_index":1341,"title":{},"body":{"index.html":{}}}],["body",{"_index":801,"title":{},"body":{"controllers/OrdersController.html":{}}}],["boolean",{"_index":432,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"classes/HashHelper.html":{},"classes/PaginationResponseDto.html":{}}}],["boolean(entity",{"_index":715,"title":{},"body":{"injectables/IsExist.html":{}}}],["bootstrap",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1366,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1364,"title":{},"body":{"modules.html":{}}}],["build",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["business",{"_index":212,"title":{},"body":{"classes/CreateOrderDto.html":{},"injectables/OrdersService.html":{}}}],["business_id",{"_index":266,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{},"entities/Order.html":{}}}],["businessid",{"_index":197,"title":{},"body":{"classes/CreateOrderDto.html":{},"entities/Order.html":{},"classes/OrderResponseDto.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["ca",{"_index":470,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["calculate",{"_index":788,"title":{},"body":{"controllers/OrdersController.html":{}}}],["calculatecreditscore",{"_index":783,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["calculatecreditscore(@param('businessid",{"_index":821,"title":{},"body":{"controllers/OrdersController.html":{}}}],["calculatecreditscore(businessid",{"_index":786,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["calculates",{"_index":848,"title":{},"body":{"injectables/OrdersService.html":{}}}],["call",{"_index":517,"title":{},"body":{"classes/FileFinder.html":{}}}],["callback",{"_index":1622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callhandler",{"_index":641,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{},"injectables/LoggingInterceptor.html":{}}}],["cancelled",{"_index":262,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{},"entities/Order.html":{},"miscellaneous/enumerations.html":{}}}],["card",{"_index":1223,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["case.transformer.ts",{"_index":1078,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cash",{"_index":1228,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["catch",{"_index":613,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/TaxService.html":{}}}],["catch((error",{"_index":875,"title":{},"body":{"injectables/OrdersService.html":{}}}],["catch(exception",{"_index":614,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":624,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["categoriescontroller",{"_index":1584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["category",{"_index":1586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cert",{"_index":473,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["change",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["changed",{"_index":1279,"title":{},"body":{"index.html":{}}}],["changepassword",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["channel",{"_index":1316,"title":{},"body":{"index.html":{}}}],["characters.helper.ts",{"_index":534,"title":{},"body":{"classes/GenerateCharacters.html":{},"coverage.html":{}}}],["characters.helper.ts:3",{"_index":537,"title":{},"body":{"classes/GenerateCharacters.html":{}}}],["check",{"_index":571,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["cheque",{"_index":1229,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["class",{"_index":0,"title":{"classes/AccessTokenExpiredException.html":{},"classes/ApplicatonExistException.html":{},"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateOrderDto.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/CustomerExistException.html":{},"classes/DisabledUserException.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/FileFinder.html":{},"classes/ForeignKeyConflictException.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"classes/HttpExceptionFilter.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"classes/InvalidTokenException.html":{},"classes/OrderMapper.html":{},"classes/OrderResponseDto.html":{},"classes/Pagination.html":{},"classes/PaginationResponseDto.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/ResponseDto.html":{},"classes/RoleExistsException.html":{},"classes/UpdateOrderDto.html":{},"classes/UserExistsException.html":{},"classes/UuidPrimaryIdEntity.html":{}},"body":{"classes/AccessTokenExpiredException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplicatonExistException.html":{},"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateOrderDto.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/CustomerExistException.html":{},"classes/DisabledUserException.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/FileFinder.html":{},"classes/ForeignKeyConflictException.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"classes/InvalidTokenException.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"entities/Order.html":{},"classes/OrderMapper.html":{},"classes/OrderResponseDto.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"classes/PaginationResponseDto.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/ResponseDto.html":{},"classes/RoleExistsException.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateOrderDto.html":{},"classes/UserExistsException.html":{},"classes/UuidPrimaryIdEntity.html":{},"coverage.html":{},"dependencies.html":{}}}],["class\\s+(\\w+)\\s+/g",{"_index":183,"title":{},"body":{"classes/ClassNameExtractor.html":{}}}],["classconstructor",{"_index":1262,"title":{},"body":{"miscellaneous/functions.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"classes/ApplicatonExistException.html":{},"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateOrderDto.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/CustomerExistException.html":{},"classes/DisabledUserException.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/FileFinder.html":{},"classes/ForeignKeyConflictException.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"classes/HttpExceptionFilter.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"classes/InvalidTokenException.html":{},"classes/OrderMapper.html":{},"classes/OrderResponseDto.html":{},"classes/Pagination.html":{},"classes/PaginationResponseDto.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/ResponseDto.html":{},"classes/RoleExistsException.html":{},"classes/UpdateOrderDto.html":{},"classes/UserExistsException.html":{},"classes/UuidPrimaryIdEntity.html":{},"overview.html":{}}}],["classnameextractor",{"_index":164,"title":{"classes/ClassNameExtractor.html":{}},"body":{"classes/ClassNameExtractor.html":{},"coverage.html":{}}}],["classnames",{"_index":184,"title":{},"body":{"classes/ClassNameExtractor.html":{}}}],["classnames.push(match[1",{"_index":192,"title":{},"body":{"classes/ClassNameExtractor.html":{}}}],["classregex",{"_index":182,"title":{},"body":{"classes/ClassNameExtractor.html":{}}}],["classregex.exec(content",{"_index":191,"title":{},"body":{"classes/ClassNameExtractor.html":{}}}],["cli",{"_index":1002,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["cloud",{"_index":361,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["cluster_appmodule",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_ordersmodule",{"_index":823,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_ordersmodule_providers",{"_index":824,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cmd",{"_index":1132,"title":{},"body":{"dependencies.html":{}}}],["code.enum.ts",{"_index":1151,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["column",{"_index":746,"title":{},"body":{"entities/Order.html":{}}}],["column({name",{"_index":740,"title":{},"body":{"entities/Order.html":{}}}],["come",{"_index":1305,"title":{},"body":{"index.html":{}}}],["common/decorators",{"_index":811,"title":{},"body":{"controllers/OrdersController.html":{}}}],["common/entities",{"_index":748,"title":{},"body":{"entities/Order.html":{}}}],["common/entities/base.entity",{"_index":670,"title":{},"body":{"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["common/enums",{"_index":114,"title":{},"body":{"classes/ApplicatonExistException.html":{},"classes/CustomerExistException.html":{},"classes/InvalidCurrentPinException.html":{}}}],["common/validators",{"_index":334,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{}}}],["common/validators/validate",{"_index":443,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["compare",{"_index":547,"title":{},"body":{"classes/HashHelper.html":{}}}],["compare(plain",{"_index":550,"title":{},"body":{"classes/HashHelper.html":{}}}],["compares",{"_index":553,"title":{},"body":{"classes/HashHelper.html":{}}}],["completed",{"_index":261,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{},"entities/Order.html":{},"miscellaneous/enumerations.html":{}}}],["compose",{"_index":353,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["condition.type.ts",{"_index":1081,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["config",{"_index":444,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/functions.html":{}}}],["config.service",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["config.service.ts",{"_index":979,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"coverage.html":{}}}],["config.service.ts:10",{"_index":982,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["config.service.ts:7",{"_index":981,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["config.ts",{"_index":1096,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["config.type",{"_index":332,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{}}}],["config/config.type",{"_index":479,"title":{},"body":{"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"controllers/HealthController.html":{},"injectables/TaxService.html":{}}}],["config/index",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{}}}],["configservice.get('mongo.url",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":963,"title":{},"body":{"injectables/TaxService.html":{}}}],["configured",{"_index":968,"title":{},"body":{"injectables/TaxService.html":{}}}],["confirm",{"_index":1583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirmpayment",{"_index":1582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["conflict",{"_index":531,"title":{},"body":{"classes/ForeignKeyConflictException.html":{},"miscellaneous/variables.html":{}}}],["conflict.exception.ts",{"_index":527,"title":{},"body":{"classes/ForeignKeyConflictException.html":{},"coverage.html":{}}}],["conflict.exception.ts:4",{"_index":528,"title":{},"body":{"classes/ForeignKeyConflictException.html":{}}}],["conflictexception",{"_index":112,"title":{},"body":{"classes/ApplicatonExistException.html":{},"classes/CustomerExistException.html":{},"classes/ForeignKeyConflictException.html":{},"classes/PermissionExistsException.html":{},"classes/RoleExistsException.html":{},"classes/UserExistsException.html":{}}}],["connection",{"_index":1013,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["console.error('failed",{"_index":975,"title":{},"body":{"injectables/TaxService.html":{}}}],["console.log(response",{"_index":974,"title":{},"body":{"injectables/TaxService.html":{}}}],["const",{"_index":178,"title":{},"body":{"classes/ClassNameExtractor.html":{},"classes/FileFinder.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"classes/OrderMapper.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"injectables/TaxService.html":{},"miscellaneous/variables.html":{}}}],["constraint",{"_index":269,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{}}}],["constructor",{"_index":11,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"classes/ApplicatonExistException.html":{},"classes/CustomerExistException.html":{},"classes/DisabledUserException.html":{},"classes/ForeignKeyConflictException.html":{},"controllers/HealthController.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"classes/InvalidTokenException.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"injectables/OrdersService.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/RoleExistsException.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UserExistsException.html":{}}}],["constructor(configservice",{"_index":960,"title":{},"body":{"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{}}}],["constructor(datasource",{"_index":695,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsNotExist.html":{}}}],["constructor(errortype",{"_index":295,"title":{},"body":{"classes/DisabledUserException.html":{}}}],["constructor(name",{"_index":276,"title":{},"body":{"classes/CustomerExistException.html":{},"classes/RoleExistsException.html":{}}}],["constructor(orderrepository",{"_index":834,"title":{},"body":{"injectables/OrdersService.html":{}}}],["constructor(private",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"controllers/OrdersController.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{}}}],["constructor(slug",{"_index":940,"title":{},"body":{"classes/PermissionExistsException.html":{}}}],["constructor(username",{"_index":1029,"title":{},"body":{"classes/UserExistsException.html":{}}}],["constructs",{"_index":838,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/TaxService.html":{}}}],["containing",{"_index":850,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/TaxService.html":{}}}],["content",{"_index":179,"title":{},"body":{"classes/ClassNameExtractor.html":{},"classes/PaginationResponseDto.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":644,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{},"injectables/LoggingInterceptor.html":{}}}],["context.getargbyindex(0).originalurl",{"_index":732,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["controller",{"_index":27,"title":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/OrdersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/OrdersController.html":{},"coverage.html":{}}}],["controller('health",{"_index":582,"title":{},"body":{"controllers/HealthController.html":{}}}],["controllers",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"overview.html":{}}}],["countriescontroller",{"_index":1571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["country",{"_index":1572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["courses",{"_index":1323,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":1034,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":233,"title":{},"body":{"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"controllers/OrdersController.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["createcategory",{"_index":1588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createcustomer",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["created",{"_index":213,"title":{},"body":{"classes/CreateOrderDto.html":{},"injectables/OrdersService.html":{}}}],["created_at",{"_index":134,"title":{},"body":{"classes/Base.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["createdat",{"_index":125,"title":{},"body":{"classes/Base.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/OrderResponseDto.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["createdatecolumn",{"_index":156,"title":{},"body":{"classes/Base.html":{}}}],["createdatecolumn({name",{"_index":133,"title":{},"body":{"classes/Base.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["createestate",{"_index":1595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createinvoiceandgeneratepayment",{"_index":1542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createinvoiceonly",{"_index":1543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createorder",{"_index":784,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["createorder(@body(validationpipe",{"_index":814,"title":{},"body":{"controllers/OrdersController.html":{}}}],["createorder(createorderdto",{"_index":793,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["createorderdto",{"_index":193,"title":{"classes/CreateOrderDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"injectables/TaxService.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["createparamdecorator",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpermission",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createquerybuilder",{"_index":883,"title":{},"body":{"injectables/OrdersService.html":{}}}],["createrevenuehead",{"_index":1566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createrole",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":852,"title":{},"body":{"injectables/OrdersService.html":{}}}],["createschemaforsales1730363889037",{"_index":231,"title":{"classes/CreateSchemaForSales1730363889037.html":{}},"body":{"classes/CreateSchemaForSales1730363889037.html":{},"coverage.html":{}}}],["createstatus",{"_index":1606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createtablefororders1730365329511",{"_index":250,"title":{"classes/CreateTableForOrders1730365329511.html":{}},"body":{"classes/CreateTableForOrders1730365329511.html":{},"coverage.html":{}}}],["createtypeormoptions",{"_index":980,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["createuser",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["credentials",{"_index":677,"title":{},"body":{"classes/InvalidCredentialsException.html":{}}}],["credentials.exception.ts",{"_index":673,"title":{},"body":{"classes/InvalidCredentialsException.html":{},"coverage.html":{}}}],["credentials.exception.ts:4",{"_index":674,"title":{},"body":{"classes/InvalidCredentialsException.html":{}}}],["credit",{"_index":789,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"miscellaneous/enumerations.html":{}}}],["csv",{"_index":1555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx",{"_index":625,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":627,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":504,"title":{},"body":{"classes/FileFinder.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"interfaces/PaginationRequest.html":{},"coverage.html":{},"index.html":{}}}],["currentpage",{"_index":906,"title":{},"body":{"classes/Pagination.html":{},"classes/PaginationResponseDto.html":{}}}],["currentvalue",{"_index":720,"title":{},"body":{"injectables/IsNotExist.html":{},"miscellaneous/variables.html":{}}}],["currentvalue.constraints",{"_index":1640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentvalue.property",{"_index":1638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentvalue?.id",{"_index":724,"title":{},"body":{"injectables/IsNotExist.html":{}}}],["custom",{"_index":402,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["customer",{"_index":277,"title":{},"body":{"classes/CustomerExistException.html":{},"miscellaneous/variables.html":{}}}],["customer_id",{"_index":267,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{},"entities/Order.html":{}}}],["customerexistexception",{"_index":274,"title":{"classes/CustomerExistException.html":{}},"body":{"classes/CustomerExistException.html":{},"coverage.html":{}}}],["customerscontroller",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":853,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/TaxService.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":992,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["database.rejectunauthorized",{"_index":1019,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["database/typeorm",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["database_ca",{"_index":408,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["database_cert",{"_index":409,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["database_host",{"_index":410,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["database_key",{"_index":411,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["database_max_connections",{"_index":412,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["database_name",{"_index":413,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["database_password",{"_index":414,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["database_port",{"_index":415,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["database_reject_unauthorized",{"_index":416,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["database_ssl_enabled",{"_index":417,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["database_synchronize",{"_index":418,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["database_type",{"_index":419,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["database_url",{"_index":420,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["database_username",{"_index":421,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["databaseconfig",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["datasource",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"miscellaneous/variables.html":{}}}],["datasource(options).initialize",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["datasourcefactory",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["datasourceoptions",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":132,"title":{},"body":{"classes/Base.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/OrderResponseDto.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["date().gettime",{"_index":634,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{}}}],["date.now",{"_index":734,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["day",{"_index":1242,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dberrorcode",{"_index":1149,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["debit",{"_index":1221,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["decimal",{"_index":741,"title":{},"body":{"entities/Order.html":{}}}],["declarations",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"overview.html":{}}}],["declined",{"_index":1249,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["decorator",{"_index":1505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"classes/Base.html":{},"classes/CreateOrderDto.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"controllers/HealthController.html":{},"classes/IntegerPrimaryIdEntity.html":{},"entities/Order.html":{},"classes/OrderResponseDto.html":{},"controllers/OrdersController.html":{},"classes/PaginationResponseDto.html":{},"classes/ResponseDto.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["deeper",{"_index":1318,"title":{},"body":{"index.html":{}}}],["default",{"_index":160,"title":{},"body":{"classes/Base.html":{},"classes/CreateTableForOrders1730365329511.html":{},"interfaces/DefaultPagination.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/HashHelper.html":{},"injectables/LoggingInterceptor.html":{},"entities/Order.html":{},"injectables/OrdersService.html":{},"miscellaneous/variables.html":{}}}],["defaultlimit",{"_index":286,"title":{},"body":{"interfaces/DefaultPagination.html":{},"miscellaneous/variables.html":{}}}],["defaultorder",{"_index":287,"title":{},"body":{"interfaces/DefaultPagination.html":{},"miscellaneous/variables.html":{}}}],["defaultorderdirection",{"_index":288,"title":{},"body":{"interfaces/DefaultPagination.html":{},"miscellaneous/variables.html":{}}}],["defaultpage",{"_index":289,"title":{},"body":{"interfaces/DefaultPagination.html":{},"miscellaneous/variables.html":{}}}],["defaultpagination",{"_index":279,"title":{"interfaces/DefaultPagination.html":{}},"body":{"interfaces/DefaultPagination.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultskip",{"_index":290,"title":{},"body":{"interfaces/DefaultPagination.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ApplicatonExistException.html":{},"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateOrderDto.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/CustomerExistException.html":{},"classes/DisabledUserException.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/FileFinder.html":{},"classes/ForeignKeyConflictException.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"controllers/HealthController.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"classes/InvalidTokenException.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"entities/Order.html":{},"classes/OrderMapper.html":{},"classes/OrderResponseDto.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"classes/PaginationResponseDto.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/ResponseDto.html":{},"classes/RoleExistsException.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UserExistsException.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["delete",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deleted_at",{"_index":143,"title":{},"body":{"classes/Base.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["deletedat",{"_index":126,"title":{},"body":{"classes/Base.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["deletedatecolumn",{"_index":157,"title":{},"body":{"classes/Base.html":{}}}],["deletedatecolumn({name",{"_index":142,"title":{},"body":{"classes/Base.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["deleteinvoice",{"_index":1548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deleterole",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo",{"_index":349,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["denied",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["department",{"_index":216,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["departmentid",{"_index":198,"title":{},"body":{"classes/CreateOrderDto.html":{},"entities/Order.html":{},"classes/OrderResponseDto.html":{}}}],["dependencies",{"_index":47,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":929,"title":{},"body":{"interfaces/PaginationRequest.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":203,"title":{},"body":{"classes/CreateOrderDto.html":{},"interfaces/DefaultPagination.html":{},"classes/EnvironmentVariablesValidator.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"interfaces/PaginationRequest.html":{},"classes/ResponseDto.html":{},"injectables/TaxService.html":{},"coverage.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["designed",{"_index":283,"title":{},"body":{"interfaces/DefaultPagination.html":{}}}],["desired",{"_index":520,"title":{},"body":{"classes/FileFinder.html":{}}}],["details",{"_index":816,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"injectables/TaxService.html":{}}}],["details'})@apiokresponse()@get('business/:businessid/details",{"_index":798,"title":{},"body":{"controllers/OrdersController.html":{}}}],["development",{"_index":342,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["devtools",{"_index":1328,"title":{},"body":{"index.html":{}}}],["digital",{"_index":363,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["digital_ocean",{"_index":362,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["dir",{"_index":496,"title":{},"body":{"classes/FileFinder.html":{}}}],["direct_debit",{"_index":1230,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["directory",{"_index":505,"title":{},"body":{"classes/FileFinder.html":{},"index.html":{}}}],["disableduserexception",{"_index":292,"title":{"classes/DisabledUserException.html":{}},"body":{"classes/DisabledUserException.html":{},"coverage.html":{}}}],["discord",{"_index":1315,"title":{},"body":{"index.html":{}}}],["disk",{"_index":596,"title":{},"body":{"controllers/HealthController.html":{}}}],["diskhealthindicator",{"_index":574,"title":{},"body":{"controllers/HealthController.html":{}}}],["disputed",{"_index":1253,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dive",{"_index":1317,"title":{},"body":{"index.html":{}}}],["docker",{"_index":351,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["docker_compose",{"_index":352,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["document",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":1035,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["documentbuilder",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documents",{"_index":841,"title":{},"body":{"injectables/OrdersService.html":{}}}],["domain",{"_index":304,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["down",{"_index":239,"title":{},"body":{"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{}}}],["down(queryrunner",{"_index":241,"title":{},"body":{"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{}}}],["download",{"_index":1615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["drop",{"_index":1291,"title":{},"body":{"index.html":{}}}],["dropschema",{"_index":995,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["dto",{"_index":760,"title":{},"body":{"classes/OrderMapper.html":{},"injectables/OrdersService.html":{},"classes/ResponseDto.html":{}}}],["dto.amount",{"_index":767,"title":{},"body":{"classes/OrderMapper.html":{}}}],["dto.businessid",{"_index":763,"title":{},"body":{"classes/OrderMapper.html":{}}}],["dto.createdat",{"_index":771,"title":{},"body":{"classes/OrderMapper.html":{}}}],["dto.departmentid",{"_index":765,"title":{},"body":{"classes/OrderMapper.html":{}}}],["dto.id",{"_index":761,"title":{},"body":{"classes/OrderMapper.html":{}}}],["dto.status",{"_index":769,"title":{},"body":{"classes/OrderMapper.html":{}}}],["dto/create",{"_index":805,"title":{},"body":{"controllers/OrdersController.html":{}}}],["dtos",{"_index":896,"title":{},"body":{"classes/Pagination.html":{}}}],["dtos/response.dto",{"_index":648,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{}}}],["e2e",{"_index":1300,"title":{},"body":{"index.html":{}}}],["e89b",{"_index":207,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["each",{"_index":511,"title":{},"body":{"classes/FileFinder.html":{}}}],["email",{"_index":1031,"title":{},"body":{"classes/UserExistsException.html":{}}}],["en",{"_index":398,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["encrypt",{"_index":548,"title":{},"body":{"classes/HashHelper.html":{}}}],["encrypt(str",{"_index":557,"title":{},"body":{"classes/HashHelper.html":{}}}],["encrypted",{"_index":551,"title":{},"body":{"classes/HashHelper.html":{}}}],["encrypts",{"_index":559,"title":{},"body":{"classes/HashHelper.html":{}}}],["enterprise",{"_index":1332,"title":{},"body":{"index.html":{}}}],["entities",{"_index":738,"title":{},"body":{"entities/Order.html":{},"injectables/OrdersService.html":{},"injectables/TypeOrmConfigService.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entitiesdir",{"_index":1003,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":709,"title":{"entities/Order.html":{}},"body":{"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"entities/Order.html":{},"classes/OrderMapper.html":{},"coverage.html":{}}}],["entity.amount",{"_index":768,"title":{},"body":{"classes/OrderMapper.html":{}}}],["entity.businessid",{"_index":764,"title":{},"body":{"classes/OrderMapper.html":{}}}],["entity.createdat",{"_index":772,"title":{},"body":{"classes/OrderMapper.html":{}}}],["entity.departmentid",{"_index":766,"title":{},"body":{"classes/OrderMapper.html":{}}}],["entity.id",{"_index":762,"title":{},"body":{"classes/OrderMapper.html":{}}}],["entity.status",{"_index":770,"title":{},"body":{"classes/OrderMapper.html":{}}}],["entity?.id",{"_index":723,"title":{},"body":{"injectables/IsNotExist.html":{}}}],["entitycondition",{"_index":1083,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["entity{.ts,.js",{"_index":999,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["entries",{"_index":506,"title":{},"body":{"classes/FileFinder.html":{}}}],["entry",{"_index":512,"title":{},"body":{"classes/FileFinder.html":{}}}],["entry.isdirectory",{"_index":518,"title":{},"body":{"classes/FileFinder.html":{}}}],["entry.name",{"_index":515,"title":{},"body":{"classes/FileFinder.html":{}}}],["entry.name.endswith(ext",{"_index":523,"title":{},"body":{"classes/FileFinder.html":{}}}],["enum",{"_index":341,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"entities/Order.html":{},"miscellaneous/variables.html":{}}}],["enum('pending",{"_index":260,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{}}}],["enumerations",{"_index":1148,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":18,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"classes/DisabledUserException.html":{},"classes/ForeignKeyConflictException.html":{},"classes/HttpExceptionFilter.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidTokenException.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/RoleExistsException.html":{},"classes/UserExistsException.html":{}}}],["env",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["envfilepath",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":323,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["environment.development",{"_index":375,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["environmentvariablesvalidator",{"_index":300,"title":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{}},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"coverage.html":{}}}],["envvalues.database_url",{"_index":446,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["envvalues.database_url)@isstring",{"_index":438,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["envvariablesclass",{"_index":1261,"title":{},"body":{"miscellaneous/functions.html":{}}}],["equal",{"_index":556,"title":{},"body":{"classes/HashHelper.html":{}}}],["error",{"_index":621,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/OrdersService.html":{},"injectables/TaxService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error.message",{"_index":977,"title":{},"body":{"injectables/TaxService.html":{}}}],["errorhttpstatuscode",{"_index":1631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errors",{"_index":1634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errors.reduce",{"_index":1636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortype",{"_index":17,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"classes/ApplicatonExistException.html":{},"classes/CustomerExistException.html":{},"classes/DisabledUserException.html":{},"classes/ForeignKeyConflictException.html":{},"classes/HttpExceptionFilter.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"classes/InvalidTokenException.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/RoleExistsException.html":{},"classes/UserExistsException.html":{},"miscellaneous/enumerations.html":{}}}],["errortype.accesstokenexpired",{"_index":21,"title":{},"body":{"classes/AccessTokenExpiredException.html":{}}}],["errortype.foreignkeyconflict",{"_index":529,"title":{},"body":{"classes/ForeignKeyConflictException.html":{}}}],["errortype.invalidcredentials",{"_index":675,"title":{},"body":{"classes/InvalidCredentialsException.html":{}}}],["errortype.invalidcurrentpassword",{"_index":682,"title":{},"body":{"classes/InvalidCurrentPasswordException.html":{}}}],["errortype.invalidcurrentpin",{"_index":686,"title":{},"body":{"classes/InvalidCurrentPinException.html":{}}}],["errortype.invalidtoken",{"_index":690,"title":{},"body":{"classes/InvalidTokenException.html":{}}}],["errortype.permissionexists",{"_index":943,"title":{},"body":{"classes/PermissionExistsException.html":{}}}],["errortype.refreshtokenexpired",{"_index":948,"title":{},"body":{"classes/RefreshTokenExpiredException.html":{}}}],["errortype.roleexists",{"_index":956,"title":{},"body":{"classes/RoleExistsException.html":{}}}],["errortype.termsettingsexist",{"_index":115,"title":{},"body":{"classes/ApplicatonExistException.html":{},"classes/CustomerExistException.html":{}}}],["errortype.userexists",{"_index":1030,"title":{},"body":{"classes/UserExistsException.html":{}}}],["estate",{"_index":1593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["estatescontroller",{"_index":1591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example",{"_index":228,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/PaginationResponseDto.html":{},"classes/ResponseDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["exceed",{"_index":598,"title":{},"body":{"controllers/HealthController.html":{}}}],["exception",{"_index":618,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":611,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:8",{"_index":617,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getresponse",{"_index":629,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":628,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptionfactory",{"_index":1633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exceptionfilter",{"_index":612,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exec",{"_index":889,"title":{},"body":{"injectables/OrdersService.html":{}}}],["executioncontext",{"_index":639,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":118,"title":{},"body":{"classes/ApplicatonExistException.html":{},"classes/CustomerExistException.html":{},"controllers/OrdersController.html":{}}}],["exist'})@post",{"_index":795,"title":{},"body":{"controllers/OrdersController.html":{}}}],["exist.exception.ts",{"_index":111,"title":{},"body":{"classes/ApplicatonExistException.html":{},"classes/CustomerExistException.html":{},"coverage.html":{}}}],["exist.exception.ts:4",{"_index":113,"title":{},"body":{"classes/ApplicatonExistException.html":{},"classes/CustomerExistException.html":{}}}],["exists.exception.ts",{"_index":939,"title":{},"body":{"classes/PermissionExistsException.html":{},"classes/RoleExistsException.html":{},"classes/UserExistsException.html":{},"coverage.html":{}}}],["exists.exception.ts:4",{"_index":941,"title":{},"body":{"classes/PermissionExistsException.html":{},"classes/RoleExistsException.html":{},"classes/UserExistsException.html":{}}}],["exists.validator.ts",{"_index":693,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["exists.validator.ts:12",{"_index":696,"title":{},"body":{"injectables/IsExist.html":{}}}],["exists.validator.ts:18",{"_index":699,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsNotExist.html":{}}}],["exists.validator.ts:24",{"_index":717,"title":{},"body":{"injectables/IsNotExist.html":{}}}],["expectation_failed",{"_index":1475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["experience",{"_index":1320,"title":{},"body":{"index.html":{}}}],["expired",{"_index":24,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"classes/RefreshTokenExpiredException.html":{}}}],["expired.exception.ts",{"_index":8,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"classes/RefreshTokenExpiredException.html":{},"coverage.html":{}}}],["expired.exception.ts:4",{"_index":13,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"classes/RefreshTokenExpiredException.html":{}}}],["export",{"_index":19,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplicatonExistException.html":{},"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateOrderDto.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/CustomerExistException.html":{},"interfaces/DefaultPagination.html":{},"classes/DisabledUserException.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/FileFinder.html":{},"classes/ForeignKeyConflictException.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"classes/InvalidTokenException.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"entities/Order.html":{},"classes/OrderMapper.html":{},"classes/OrderResponseDto.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"interfaces/PaginationRequest.html":{},"classes/PaginationResponseDto.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/ResponseDto.html":{},"classes/RoleExistsException.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateOrderDto.html":{},"classes/UserExistsException.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["exports",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"overview.html":{}}}],["express",{"_index":623,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"dependencies.html":{}}}],["expression",{"_index":190,"title":{},"body":{"classes/ClassNameExtractor.html":{}}}],["ext",{"_index":494,"title":{},"body":{"classes/FileFinder.html":{}}}],["extends",{"_index":9,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"classes/ApplicatonExistException.html":{},"classes/Base.html":{},"classes/CustomerExistException.html":{},"classes/DisabledUserException.html":{},"classes/ForeignKeyConflictException.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"classes/InvalidTokenException.html":{},"entities/Order.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/RoleExistsException.html":{},"classes/UpdateOrderDto.html":{},"classes/UserExistsException.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["extension",{"_index":502,"title":{},"body":{"classes/FileFinder.html":{},"dependencies.html":{}}}],["extra",{"_index":1009,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["extract",{"_index":175,"title":{},"body":{"classes/ClassNameExtractor.html":{}}}],["extractclassnames",{"_index":168,"title":{},"body":{"classes/ClassNameExtractor.html":{}}}],["extractclassnames(filepath",{"_index":169,"title":{},"body":{"classes/ClassNameExtractor.html":{}}}],["extractor.ts",{"_index":166,"title":{},"body":{"classes/ClassNameExtractor.html":{},"coverage.html":{}}}],["extractor.ts:5",{"_index":170,"title":{},"body":{"classes/ClassNameExtractor.html":{}}}],["factories",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["failed",{"_index":1239,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["failed_dependency",{"_index":1483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fallback_language",{"_index":305,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["fallbacklanguage",{"_index":396,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["false",{"_index":139,"title":{},"body":{"classes/Base.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/IntegerPrimaryIdEntity.html":{},"entities/Order.html":{},"classes/PaginationResponseDto.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UuidPrimaryIdEntity.html":{},"miscellaneous/variables.html":{}}}],["false})@isoptional",{"_index":315,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["female",{"_index":1215,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["few",{"_index":1303,"title":{},"body":{"index.html":{}}}],["fha",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["field",{"_index":927,"title":{},"body":{"interfaces/PaginationRequest.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplicatonExistException.html":{},"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateOrderDto.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/CustomerExistException.html":{},"interfaces/DefaultPagination.html":{},"classes/DisabledUserException.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/FileFinder.html":{},"classes/ForeignKeyConflictException.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"classes/InvalidTokenException.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"entities/Order.html":{},"classes/OrderMapper.html":{},"classes/OrderResponseDto.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"interfaces/PaginationRequest.html":{},"classes/PaginationResponseDto.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/ResponseDto.html":{},"classes/RoleExistsException.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateOrderDto.html":{},"classes/UserExistsException.html":{},"classes/UuidPrimaryIdEntity.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["filefinder",{"_index":489,"title":{"classes/FileFinder.html":{}},"body":{"classes/FileFinder.html":{},"coverage.html":{}}}],["filepath",{"_index":172,"title":{},"body":{"classes/ClassNameExtractor.html":{}}}],["files",{"_index":500,"title":{},"body":{"classes/FileFinder.html":{}}}],["files.concat(filefinder.findfileswithextension(fullpath",{"_index":519,"title":{},"body":{"classes/FileFinder.html":{}}}],["files.push(fullpath",{"_index":524,"title":{},"body":{"classes/FileFinder.html":{}}}],["filescontroller",{"_index":1614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findall",{"_index":1550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findallcustomerproperties",{"_index":1599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findallcustomerpropertiesbycustomerid",{"_index":1600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findallforcustomerproperty",{"_index":1551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findallpayments",{"_index":1552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findallrevenuehead",{"_index":1578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findbyid",{"_index":1602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["finder.ts",{"_index":491,"title":{},"body":{"classes/FileFinder.html":{},"coverage.html":{}}}],["finder.ts:7",{"_index":495,"title":{},"body":{"classes/FileFinder.html":{}}}],["findfileswithextension",{"_index":492,"title":{},"body":{"classes/FileFinder.html":{}}}],["findfileswithextension(dir",{"_index":493,"title":{},"body":{"classes/FileFinder.html":{}}}],["findone",{"_index":712,"title":{},"body":{"injectables/IsExist.html":{},"miscellaneous/variables.html":{}}}],["findoptions",{"_index":1086,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["findoptionswhere",{"_index":1382,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["findproperty",{"_index":1579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["follow",{"_index":1335,"title":{},"body":{"index.html":{}}}],["forbidden",{"_index":1448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbiddenexception",{"_index":680,"title":{},"body":{"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{}}}],["foreign",{"_index":530,"title":{},"body":{"classes/ForeignKeyConflictException.html":{}}}],["foreign_key_conflict",{"_index":1202,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["foreignkeyconflict",{"_index":1201,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["foreignkeyconflictexception",{"_index":525,"title":{"classes/ForeignKeyConflictException.html":{}},"body":{"classes/ForeignKeyConflictException.html":{},"coverage.html":{}}}],["found",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["framework",{"_index":1311,"title":{},"body":{"index.html":{}}}],["fs",{"_index":173,"title":{},"body":{"classes/ClassNameExtractor.html":{},"classes/FileFinder.html":{}}}],["fs.readdirsync(dir",{"_index":507,"title":{},"body":{"classes/FileFinder.html":{}}}],["fs.readfilesync(filepath",{"_index":180,"title":{},"body":{"classes/ClassNameExtractor.html":{}}}],["full",{"_index":1236,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["fullpath",{"_index":513,"title":{},"body":{"classes/FileFinder.html":{}}}],["function",{"_index":174,"title":{},"body":{"classes/ClassNameExtractor.html":{},"classes/FileFinder.html":{},"coverage.html":{}}}],["functions",{"_index":1254,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gateway_timeout",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gender",{"_index":1155,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["generate",{"_index":1289,"title":{},"body":{"index.html":{}}}],["generate_payment_invoice",{"_index":1217,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["generatecharacters",{"_index":532,"title":{"classes/GenerateCharacters.html":{}},"body":{"classes/GenerateCharacters.html":{},"coverage.html":{}}}],["get('business/:businessid/credit",{"_index":820,"title":{},"body":{"controllers/OrdersController.html":{}}}],["get('business/:businessid/details",{"_index":817,"title":{},"body":{"controllers/OrdersController.html":{}}}],["get()@healthcheck",{"_index":572,"title":{},"body":{"controllers/HealthController.html":{}}}],["getcategories",{"_index":1585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcategorybyid",{"_index":1587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcustomerbyid",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcustomers",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getestatebyid",{"_index":1594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getestates",{"_index":1592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gethello",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"miscellaneous/variables.html":{}}}],["getinvoicebyid",{"_index":1541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getinvoiceforproperty",{"_index":1538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getinvoices",{"_index":1533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getinvoicestatistics",{"_index":1535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getorderdetails",{"_index":785,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["getorderdetails(@param('businessid",{"_index":818,"title":{},"body":{"controllers/OrdersController.html":{}}}],["getorderdetails(businessid",{"_index":797,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["getpaymentsascsv",{"_index":1553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getpaymentsaspdf",{"_index":1556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getpermissionbyid",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getpermissions",{"_index":1508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getrawone",{"_index":887,"title":{},"body":{"injectables/OrdersService.html":{}}}],["getrepository(repository",{"_index":711,"title":{},"body":{"injectables/IsExist.html":{}}}],["getrevenueheadbyid",{"_index":1564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getrevenueheads",{"_index":1561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getrolebyid",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getroles",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(model",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(paginationresponsedto",{"_index":1415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(responsedto",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getstatistics",{"_index":1625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getstatusbyid",{"_index":1605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getstatuses",{"_index":1604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getting",{"_index":1263,"title":{"index.html":{}},"body":{}}],["getuserbyid",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getusers",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["global",{"_index":1046,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gone",{"_index":1461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["google",{"_index":360,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["google_cloud",{"_index":359,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["google_pay",{"_index":1235,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["graph",{"_index":1325,"title":{},"body":{"index.html":{},"modules.html":{}}}],["grow",{"_index":1346,"title":{},"body":{"index.html":{}}}],["handle",{"_index":923,"title":{},"body":{"interfaces/PaginationRequest.html":{}}}],["handling",{"_index":843,"title":{},"body":{"injectables/OrdersService.html":{}}}],["hands",{"_index":1319,"title":{},"body":{"index.html":{}}}],["handy",{"_index":1306,"title":{},"body":{"index.html":{}}}],["hashhelper",{"_index":543,"title":{"classes/HashHelper.html":{}},"body":{"classes/HashHelper.html":{},"coverage.html":{}}}],["hasnext",{"_index":907,"title":{},"body":{"classes/Pagination.html":{},"classes/PaginationResponseDto.html":{}}}],["head",{"_index":1565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["header_language",{"_index":306,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["headerlanguage",{"_index":399,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["heads",{"_index":1563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["health",{"_index":570,"title":{},"body":{"controllers/HealthController.html":{},"miscellaneous/variables.html":{}}}],["health.controller",{"_index":607,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":575,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":576,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":567,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["healthmodule",{"_index":56,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["heap",{"_index":585,"title":{},"body":{"controllers/HealthController.html":{}}}],["hello",{"_index":107,"title":{},"body":{"injectables/AppService.html":{},"miscellaneous/variables.html":{}}}],["help",{"_index":1330,"title":{},"body":{"index.html":{}}}],["here",{"_index":1354,"title":{},"body":{"index.html":{}}}],["heroku",{"_index":356,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["host",{"_index":451,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"classes/HttpExceptionFilter.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["host.switchtohttp",{"_index":626,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["house",{"_index":1612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["housetypes",{"_index":1611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http",{"_index":620,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["http://localhost",{"_index":391,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["http_version_not_supported",{"_index":1497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httperrortype",{"_index":619,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httperrortype[status",{"_index":630,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpexception",{"_index":615,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["httpexceptionfilter",{"_index":609,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["httpresponseinterceptor",{"_index":635,"title":{"injectables/HttpResponseInterceptor.html":{}},"body":{"injectables/HttpResponseInterceptor.html":{},"coverage.html":{}}}],["https://nestjs.com",{"_index":1360,"title":{},"body":{"index.html":{}}}],["https://node",{"_index":1011,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["httpstatus.unprocessable_entity",{"_index":1632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i_am_a_teapot",{"_index":1477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":211,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/IntegerPrimaryIdEntity.html":{},"injectables/IsNotExist.html":{},"classes/OrderResponseDto.html":{},"injectables/OrdersService.html":{},"classes/UuidPrimaryIdEntity.html":{},"miscellaneous/variables.html":{}}}],["id.entity.ts",{"_index":658,"title":{},"body":{"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{},"coverage.html":{}}}],["id.entity.ts:6",{"_index":661,"title":{},"body":{"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["identifier",{"_index":1036,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":236,"title":{},"body":{"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"injectables/TypeOrmConfigService.html":{}}}],["import",{"_index":14,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplicatonExistException.html":{},"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateOrderDto.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/CustomerExistException.html":{},"classes/DisabledUserException.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/FileFinder.html":{},"classes/ForeignKeyConflictException.html":{},"classes/HashHelper.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"classes/InvalidTokenException.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"entities/Order.html":{},"classes/OrderMapper.html":{},"classes/OrderResponseDto.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"classes/PaginationResponseDto.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/ResponseDto.html":{},"classes/RoleExistsException.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateOrderDto.html":{},"classes/UserExistsException.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["imports",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OrdersModule.html":{}}}],["in_progress",{"_index":1252,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["inactive_user",{"_index":1200,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["inactiveuser",{"_index":1199,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["index",{"_index":31,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateOrderDto.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"interfaces/DefaultPagination.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/FileFinder.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"controllers/HealthController.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/IntegerPrimaryIdEntity.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"entities/Order.html":{},"classes/OrderMapper.html":{},"classes/OrderResponseDto.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"interfaces/PaginationRequest.html":{},"classes/PaginationResponseDto.html":{},"classes/ResponseDto.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UuidPrimaryIdEntity.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["infer",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplicatonExistException.html":{},"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateOrderDto.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/CustomerExistException.html":{},"interfaces/DefaultPagination.html":{},"classes/DisabledUserException.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/FileFinder.html":{},"classes/ForeignKeyConflictException.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"classes/InvalidTokenException.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"entities/Order.html":{},"classes/OrderMapper.html":{},"classes/OrderResponseDto.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"interfaces/PaginationRequest.html":{},"classes/PaginationResponseDto.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/ResponseDto.html":{},"classes/RoleExistsException.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateOrderDto.html":{},"classes/UserExistsException.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["inherited",{"_index":662,"title":{},"body":{"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["initiate",{"_index":1618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initiated",{"_index":1251,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["inject",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":103,"title":{"injectables/AppService.html":{},"injectables/HttpResponseInterceptor.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"injectables/OrdersService.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{}},"body":{"injectables/AppService.html":{},"injectables/HttpResponseInterceptor.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"injectables/OrdersService.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"coverage.html":{}}}],["injectables",{"_index":104,"title":{},"body":{"injectables/AppService.html":{},"injectables/HttpResponseInterceptor.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"injectables/OrdersService.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"overview.html":{}}}],["injectdatasource",{"_index":703,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsNotExist.html":{}}}],["injectmodel",{"_index":860,"title":{},"body":{"injectables/OrdersService.html":{}}}],["injectmodel('order",{"_index":865,"title":{},"body":{"injectables/OrdersService.html":{}}}],["injectrepository",{"_index":859,"title":{},"body":{"injectables/OrdersService.html":{}}}],["injectrepository(order",{"_index":864,"title":{},"body":{"injectables/OrdersService.html":{}}}],["installcompile",{"_index":1271,"title":{},"body":{"index.html":{}}}],["instancetoplain",{"_index":154,"title":{},"body":{"classes/Base.html":{}}}],["instancetoplain(this",{"_index":163,"title":{},"body":{"classes/Base.html":{}}}],["integer",{"_index":660,"title":{},"body":{"classes/IntegerPrimaryIdEntity.html":{}}}],["integerprimaryidentity",{"_index":656,"title":{"classes/IntegerPrimaryIdEntity.html":{}},"body":{"classes/IntegerPrimaryIdEntity.html":{},"coverage.html":{}}}],["intended",{"_index":910,"title":{},"body":{"interfaces/PaginationRequest.html":{},"miscellaneous/variables.html":{}}}],["interact",{"_index":1326,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":637,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{},"injectables/LoggingInterceptor.html":{}}}],["intercept(context",{"_index":638,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{},"injectables/LoggingInterceptor.html":{}}}],["interface",{"_index":278,"title":{"interfaces/DefaultPagination.html":{},"interfaces/PaginationRequest.html":{}},"body":{"interfaces/DefaultPagination.html":{},"interfaces/PaginationRequest.html":{},"coverage.html":{}}}],["interfaces",{"_index":280,"title":{},"body":{"interfaces/DefaultPagination.html":{},"classes/Pagination.html":{},"interfaces/PaginationRequest.html":{},"overview.html":{}}}],["internal_server_error",{"_index":1487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interval.unit.ts",{"_index":1168,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid",{"_index":676,"title":{},"body":{"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{}}}],["invalid_credentials",{"_index":1196,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid_current_password",{"_index":1194,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid_current_pin",{"_index":1210,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid_token",{"_index":1182,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalidcredentials",{"_index":1195,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalidcredentialsexception",{"_index":671,"title":{"classes/InvalidCredentialsException.html":{}},"body":{"classes/InvalidCredentialsException.html":{},"coverage.html":{}}}],["invalidcurrentpassword",{"_index":1193,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalidcurrentpasswordexception",{"_index":678,"title":{"classes/InvalidCurrentPasswordException.html":{}},"body":{"classes/InvalidCurrentPasswordException.html":{},"coverage.html":{}}}],["invalidcurrentpin",{"_index":1209,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalidcurrentpinexception",{"_index":683,"title":{"classes/InvalidCurrentPinException.html":{}},"body":{"classes/InvalidCurrentPinException.html":{},"coverage.html":{}}}],["invalidtoken",{"_index":1181,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalidtokenexception",{"_index":687,"title":{"classes/InvalidTokenException.html":{}},"body":{"classes/InvalidTokenException.html":{},"coverage.html":{}}}],["inventory",{"_index":1265,"title":{},"body":{"index.html":{}}}],["invoice",{"_index":1534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invoicecontroller",{"_index":1532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invoices",{"_index":1282,"title":{},"body":{"index.html":{}}}],["isboolean",{"_index":442,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["isboolean()@isoptional",{"_index":433,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["isenum",{"_index":335,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["isenum(environment",{"_index":367,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["isenum(environment)@isoptional",{"_index":324,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["isexist",{"_index":691,"title":{"injectables/IsExist.html":{}},"body":{"injectables/IsExist.html":{},"coverage.html":{}}}],["isglobal",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":336,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{}}}],["isint()@isoptional",{"_index":427,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["isint()@min(0)@max(65535)@isoptional",{"_index":326,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{}}}],["isnotempty",{"_index":223,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["isnotexist",{"_index":716,"title":{"injectables/IsNotExist.html":{}},"body":{"injectables/IsNotExist.html":{},"coverage.html":{}}}],["isnumber",{"_index":224,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["isoptional",{"_index":337,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{}}}],["isstring",{"_index":225,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{}}}],["isstring()@isoptional",{"_index":312,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{}}}],["isurl",{"_index":338,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["isurl({require_tld",{"_index":314,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["isuuid",{"_index":226,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["it's",{"_index":516,"title":{},"body":{"classes/FileFinder.html":{},"interfaces/PaginationRequest.html":{}}}],["items",{"_index":1416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["job",{"_index":1338,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":1340,"title":{},"body":{"index.html":{}}}],["jobtype",{"_index":1157,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["join",{"_index":1352,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["kamil",{"_index":1357,"title":{},"body":{"index.html":{}}}],["keepconnectionalive",{"_index":996,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["key",{"_index":272,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/ForeignKeyConflictException.html":{},"injectables/TypeOrmConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["kubernetes",{"_index":354,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["lang",{"_index":403,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["last",{"_index":1285,"title":{},"body":{"index.html":{}}}],["latter",{"_index":918,"title":{},"body":{"interfaces/PaginationRequest.html":{}}}],["learn",{"_index":1310,"title":{},"body":{"index.html":{}}}],["legend",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"overview.html":{}}}],["length",{"_index":538,"title":{},"body":{"classes/GenerateCharacters.html":{}}}],["length_required",{"_index":1463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lga",{"_index":1574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lgascontroller",{"_index":1573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["license",{"_index":1363,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1344,"title":{},"body":{"index.html":{}}}],["limit",{"_index":900,"title":{},"body":{"classes/Pagination.html":{},"interfaces/PaginationRequest.html":{},"miscellaneous/variables.html":{}}}],["linkedin",{"_index":1336,"title":{},"body":{"index.html":{}}}],["linode",{"_index":365,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["list",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["literal",{"_index":914,"title":{},"body":{"interfaces/PaginationRequest.html":{},"miscellaneous/typealiases.html":{}}}],["load",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["local",{"_index":350,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["log",{"_index":976,"title":{},"body":{"injectables/TaxService.html":{}}}],["logged",{"_index":874,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/TaxService.html":{}}}],["logger",{"_index":727,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"injectables/OrdersService.html":{}}}],["logger(logginginterceptor.name",{"_index":730,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["logger(ordersservice.name",{"_index":858,"title":{},"body":{"injectables/OrdersService.html":{}}}],["logging",{"_index":877,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["logginginterceptor",{"_index":725,"title":{"injectables/LoggingInterceptor.html":{}},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["login",{"_index":299,"title":{},"body":{"classes/DisabledUserException.html":{}}}],["logs",{"_index":966,"title":{},"body":{"injectables/TaxService.html":{},"index.html":{}}}],["logtaxdata",{"_index":959,"title":{},"body":{"injectables/TaxService.html":{}}}],["logtaxdata(createorderdto",{"_index":871,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/TaxService.html":{}}}],["looking",{"_index":1337,"title":{},"body":{"index.html":{}}}],["loop",{"_index":509,"title":{},"body":{"classes/FileFinder.html":{},"index.html":{}}}],["lowercasetransformer",{"_index":1079,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mailconfig",{"_index":1103,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["male",{"_index":1214,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["management",{"_index":1266,"title":{},"body":{"index.html":{}}}],["map",{"_index":649,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{}}}],["map((payload",{"_index":654,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{}}}],["match",{"_index":185,"title":{},"body":{"classes/ClassNameExtractor.html":{}}}],["matching",{"_index":26,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplicatonExistException.html":{},"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateOrderDto.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/CustomerExistException.html":{},"interfaces/DefaultPagination.html":{},"classes/DisabledUserException.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/FileFinder.html":{},"classes/ForeignKeyConflictException.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"classes/InvalidTokenException.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"entities/Order.html":{},"classes/OrderMapper.html":{},"classes/OrderResponseDto.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"interfaces/PaginationRequest.html":{},"classes/PaginationResponseDto.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/ResponseDto.html":{},"classes/RoleExistsException.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateOrderDto.html":{},"classes/UserExistsException.html":{},"classes/UuidPrimaryIdEntity.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.floor(+skip",{"_index":1504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["math.floor(totalrecords",{"_index":904,"title":{},"body":{"classes/Pagination.html":{}}}],["math.min(100",{"_index":890,"title":{},"body":{"injectables/OrdersService.html":{}}}],["math.random",{"_index":540,"title":{},"body":{"classes/GenerateCharacters.html":{}}}],["max",{"_index":339,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["max(65535",{"_index":369,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{}}}],["maxallowedsize",{"_index":291,"title":{},"body":{"interfaces/DefaultPagination.html":{},"miscellaneous/variables.html":{}}}],["maxconnections",{"_index":463,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["maybetype",{"_index":1088,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["memory",{"_index":592,"title":{},"body":{"controllers/HealthController.html":{}}}],["memoryhealthindicator",{"_index":577,"title":{},"body":{"controllers/HealthController.html":{}}}],["message",{"_index":22,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"classes/ApplicatonExistException.html":{},"classes/CustomerExistException.html":{},"classes/DisabledUserException.html":{},"classes/ForeignKeyConflictException.html":{},"classes/HttpExceptionFilter.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/RoleExistsException.html":{},"classes/UserExistsException.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":1137,"title":{},"body":{"dependencies.html":{}}}],["method.enum.ts",{"_index":1161,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["method_not_allowed",{"_index":1452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["methods",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/FileFinder.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"controllers/HealthController.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/IntegerPrimaryIdEntity.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"classes/OrderMapper.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["migration",{"_index":1277,"title":{},"body":{"index.html":{}}}],["migration:create",{"_index":1280,"title":{},"body":{"index.html":{}}}],["migration:generate",{"_index":1290,"title":{},"body":{"index.html":{}}}],["migration:revert",{"_index":1286,"title":{},"body":{"index.html":{}}}],["migration:run",{"_index":1283,"title":{},"body":{"index.html":{}}}],["migration:show",{"_index":1288,"title":{},"body":{"index.html":{}}}],["migrationinterface",{"_index":237,"title":{},"body":{"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{}}}],["migrations",{"_index":1000,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["migrations/**/*{.ts,.js",{"_index":1001,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["migrationsdir",{"_index":1005,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["min",{"_index":340,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{}}}],["min(0",{"_index":368,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{}}}],["miscellaneous",{"_index":1147,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misdirected",{"_index":1479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":1343,"title":{},"body":{"index.html":{}}}],["mobile_money",{"_index":1232,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mode",{"_index":1274,"title":{},"body":{"index.html":{}}}],["model",{"_index":836,"title":{},"body":{"injectables/OrdersService.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":44,"title":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OrdersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OrdersModule.html":{},"overview.html":{}}}],["modules",{"_index":46,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OrdersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/orders/dto/create",{"_index":862,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/TaxService.html":{}}}],["modules/orders/dto/order",{"_index":757,"title":{},"body":{"classes/OrderMapper.html":{},"controllers/OrdersController.html":{}}}],["modules/orders/entities/order.entity",{"_index":759,"title":{},"body":{"classes/OrderMapper.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{}}}],["modules/orders/order.mapper",{"_index":863,"title":{},"body":{"injectables/OrdersService.html":{}}}],["modules/orders/orders.module",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/orders/schemas/order.schema",{"_index":829,"title":{},"body":{"modules/OrdersModule.html":{},"injectables/OrdersService.html":{}}}],["modules/orders/tax.service",{"_index":830,"title":{},"body":{"modules/OrdersModule.html":{},"injectables/OrdersService.html":{}}}],["mongo_url",{"_index":477,"title":{},"body":{"classes/EnvironmentVariablesValidator-2.html":{}}}],["mongoconfig",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["mongodb",{"_index":481,"title":{},"body":{"classes/EnvironmentVariablesValidator-2.html":{}}}],["mongoose",{"_index":840,"title":{},"body":{"injectables/OrdersService.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":832,"title":{},"body":{"modules/OrdersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["month",{"_index":1244,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["more",{"_index":589,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["myśliwiec",{"_index":1358,"title":{},"body":{"index.html":{}}}],["name",{"_index":159,"title":{},"body":{"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/CustomerExistException.html":{},"classes/DisabledUserException.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/FileFinder.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/IntegerPrimaryIdEntity.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"entities/Order.html":{},"classes/OrderMapper.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"classes/PermissionExistsException.html":{},"classes/RoleExistsException.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UserExistsException.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":176,"title":{},"body":{"classes/ClassNameExtractor.html":{}}}],["naming.ts",{"_index":1075,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["need",{"_index":1329,"title":{},"body":{"index.html":{}}}],["needed",{"_index":922,"title":{},"body":{"interfaces/PaginationRequest.html":{}}}],["nest",{"_index":1342,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1362,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":646,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{},"injectables/LoggingInterceptor.html":{}}}],["nestjs",{"_index":1308,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":16,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplicatonExistException.html":{},"classes/CustomerExistException.html":{},"classes/DisabledUserException.html":{},"classes/ForeignKeyConflictException.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"classes/InvalidTokenException.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/RoleExistsException.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UserExistsException.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"controllers/HealthController.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1122,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1124,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":222,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/HealthController.html":{},"classes/OrderResponseDto.html":{},"controllers/OrdersController.html":{},"classes/PaginationResponseDto.html":{},"classes/ResponseDto.html":{},"classes/UpdateOrderDto.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":578,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"injectables/TypeOrmConfigService.html":{},"dependencies.html":{}}}],["never",{"_index":1383,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["never.type.ts",{"_index":1092,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["new",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"classes/OrderMapper.html":{},"injectables/OrdersService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":640,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{},"injectables/LoggingInterceptor.html":{}}}],["next.handle().pipe",{"_index":653,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{},"injectables/LoggingInterceptor.html":{}}}],["node_env",{"_index":307,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["nodeenv",{"_index":373,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["not_acceptable",{"_index":1454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["not_expecting_response",{"_index":1219,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["not_found",{"_index":1450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["not_implemented",{"_index":1489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["now",{"_index":148,"title":{},"body":{"classes/Base.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/IntegerPrimaryIdEntity.html":{},"injectables/LoggingInterceptor.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["now}ms",{"_index":737,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["npm",{"_index":1270,"title":{},"body":{"index.html":{}}}],["null",{"_index":187,"title":{},"body":{"classes/ClassNameExtractor.html":{},"classes/CreateTableForOrders1730365329511.html":{},"miscellaneous/typealiases.html":{}}}],["nullable",{"_index":140,"title":{},"body":{"classes/Base.html":{},"classes/IntegerPrimaryIdEntity.html":{},"entities/Order.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["nullabletype",{"_index":1090,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":200,"title":{},"body":{"classes/CreateOrderDto.html":{},"interfaces/DefaultPagination.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"classes/IntegerPrimaryIdEntity.html":{},"injectables/IsNotExist.html":{},"entities/Order.html":{},"classes/OrderResponseDto.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"interfaces/PaginationRequest.html":{},"classes/PaginationResponseDto.html":{},"classes/ResponseDto.html":{},"miscellaneous/variables.html":{}}}],["numeric",{"_index":268,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{}}}],["object",{"_index":849,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/TaxService.html":{},"miscellaneous/variables.html":{}}}],["object.values",{"_index":1639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":645,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{},"injectables/LoggingInterceptor.html":{}}}],["ocean",{"_index":364,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["of(undefined",{"_index":893,"title":{},"body":{"classes/Pagination.html":{}}}],["offer",{"_index":1339,"title":{},"body":{"index.html":{}}}],["official",{"_index":1321,"title":{},"body":{"index.html":{}}}],["onupdate",{"_index":147,"title":{},"body":{"classes/Base.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["open",{"_index":1345,"title":{},"body":{"index.html":{}}}],["openpropertypaymentcontroller",{"_index":1577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["openshift",{"_index":355,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["operations",{"_index":846,"title":{},"body":{"injectables/OrdersService.html":{}}}],["option",{"_index":1546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["option.enum.ts",{"_index":1163,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["optional",{"_index":123,"title":{},"body":{"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/CustomerExistException.html":{},"interfaces/DefaultPagination.html":{},"classes/DisabledUserException.html":{},"classes/FileFinder.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/IntegerPrimaryIdEntity.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"classes/OrderMapper.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"interfaces/PaginationRequest.html":{},"classes/PermissionExistsException.html":{},"classes/RoleExistsException.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UserExistsException.html":{},"classes/UuidPrimaryIdEntity.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["options.ts",{"_index":1098,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["options.type.ts",{"_index":1085,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["order",{"_index":229,"title":{"entities/Order.html":{}},"body":{"classes/CreateOrderDto.html":{},"entities/Order.html":{},"classes/OrderMapper.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"interfaces/PaginationRequest.html":{},"injectables/TaxService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["order'})@apiglobalresponse(orderresponsedto)@apiconflictresponse({description",{"_index":794,"title":{},"body":{"controllers/OrdersController.html":{}}}],["order'})@isnotempty()@isnumber",{"_index":204,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order'})@isnotempty()@isstring",{"_index":219,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order'})@isuuid()@isnotempty",{"_index":214,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto",{"_index":806,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"injectables/TaxService.html":{},"classes/UpdateOrderDto.html":{}}}],["order.dto.ts",{"_index":195,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["order.dto.ts:11",{"_index":215,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:19",{"_index":217,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:27",{"_index":205,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:35",{"_index":220,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["orderby",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orderdirection",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orderdocument",{"_index":861,"title":{},"body":{"injectables/OrdersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["orderentity",{"_index":866,"title":{},"body":{"injectables/OrdersService.html":{}}}],["ordermapper",{"_index":751,"title":{"classes/OrderMapper.html":{}},"body":{"classes/OrderMapper.html":{},"injectables/OrdersService.html":{},"coverage.html":{}}}],["ordermapper.todto(order",{"_index":878,"title":{},"body":{"injectables/OrdersService.html":{}}}],["ordermodel",{"_index":835,"title":{},"body":{"injectables/OrdersService.html":{}}}],["orderrepository",{"_index":839,"title":{},"body":{"injectables/OrdersService.html":{}}}],["orderresponsedto",{"_index":756,"title":{"classes/OrderResponseDto.html":{}},"body":{"classes/OrderMapper.html":{},"classes/OrderResponseDto.html":{},"controllers/OrdersController.html":{},"coverage.html":{}}}],["orders",{"_index":750,"title":{},"body":{"entities/Order.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["orders.controller",{"_index":827,"title":{},"body":{"modules/OrdersModule.html":{}}}],["orders.length",{"_index":891,"title":{},"body":{"injectables/OrdersService.html":{}}}],["orders.service",{"_index":804,"title":{},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{}}}],["orders.ts",{"_index":253,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{},"coverage.html":{}}}],["orders.ts:15",{"_index":256,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{}}}],["orders.ts:4",{"_index":255,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{}}}],["orders.ts:6",{"_index":257,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{}}}],["orderschema",{"_index":828,"title":{},"body":{"modules/OrdersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["orderscontroller",{"_index":781,"title":{"controllers/OrdersController.html":{}},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"coverage.html":{}}}],["ordersmodule",{"_index":57,"title":{"modules/OrdersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"modules.html":{},"overview.html":{}}}],["ordersservice",{"_index":803,"title":{"injectables/OrdersService.html":{}},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"coverage.html":{},"overview.html":{}}}],["ornevertype",{"_index":1093,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["out",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1367,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1119,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":901,"title":{},"body":{"classes/Pagination.html":{},"interfaces/PaginationRequest.html":{},"miscellaneous/variables.html":{}}}],["paginated",{"_index":912,"title":{},"body":{"interfaces/PaginationRequest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pagination",{"_index":285,"title":{"classes/Pagination.html":{}},"body":{"interfaces/DefaultPagination.html":{},"classes/Pagination.html":{},"interfaces/PaginationRequest.html":{},"coverage.html":{}}}],["pagination.interface.ts",{"_index":282,"title":{},"body":{"interfaces/DefaultPagination.html":{},"coverage.html":{}}}],["paginationparams",{"_index":1069,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["paginationrequest",{"_index":894,"title":{"interfaces/PaginationRequest.html":{}},"body":{"classes/Pagination.html":{},"interfaces/PaginationRequest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["paginationresponsedto",{"_index":899,"title":{"classes/PaginationResponseDto.html":{}},"body":{"classes/Pagination.html":{},"classes/PaginationResponseDto.html":{},"coverage.html":{}}}],["paid",{"_index":1238,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["param",{"_index":563,"title":{},"body":{"classes/HashHelper.html":{},"injectables/HttpResponseInterceptor.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"injectables/TaxService.html":{}}}],["parameters",{"_index":171,"title":{},"body":{"classes/ClassNameExtractor.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/CustomerExistException.html":{},"interfaces/DefaultPagination.html":{},"classes/DisabledUserException.html":{},"classes/FileFinder.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"classes/OrderMapper.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"classes/PermissionExistsException.html":{},"classes/RoleExistsException.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UserExistsException.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["params",{"_index":913,"title":{},"body":{"interfaces/PaginationRequest.html":{},"miscellaneous/variables.html":{}}}],["params.decorator.ts",{"_index":1068,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["params.value?.tolowercase().trim",{"_index":1499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parseint(process.env.database_max_connections",{"_index":465,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/variables.html":{}}}],["parseint(process.env.database_port",{"_index":454,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/variables.html":{}}}],["parseint(process.env.port",{"_index":382,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["part",{"_index":1331,"title":{},"body":{"index.html":{}}}],["partial",{"_index":1237,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["partialtype",{"_index":1026,"title":{},"body":{"classes/UpdateOrderDto.html":{}}}],["partialtype(createorderdto",{"_index":1025,"title":{},"body":{"classes/UpdateOrderDto.html":{}}}],["password",{"_index":456,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"classes/InvalidCurrentPasswordException.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["password.exception.ts",{"_index":679,"title":{},"body":{"classes/InvalidCurrentPasswordException.html":{},"coverage.html":{}}}],["password.exception.ts:4",{"_index":681,"title":{},"body":{"classes/InvalidCurrentPasswordException.html":{}}}],["path",{"_index":497,"title":{},"body":{"classes/FileFinder.html":{},"controllers/HealthController.html":{},"controllers/OrdersController.html":{}}}],["path.join(dir",{"_index":514,"title":{},"body":{"classes/FileFinder.html":{}}}],["pathtoproperty",{"_index":707,"title":{},"body":{"injectables/IsExist.html":{}}}],["payload",{"_index":655,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{},"classes/ResponseDto.html":{},"miscellaneous/variables.html":{}}}],["payload:response",{"_index":652,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{}}}],["payload_too_large",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["payloadsize",{"_index":931,"title":{},"body":{"classes/PaginationResponseDto.html":{}}}],["payment",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["payment_required",{"_index":1446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["payment_verification_failed",{"_index":1212,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["paymentmethod",{"_index":1159,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["paymentoptionenum",{"_index":1162,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["payments",{"_index":1554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paymentscallback",{"_index":1621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paymentscontroller",{"_index":1549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paymentstatus",{"_index":1164,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["paymentverificationfailed",{"_index":1211,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pdf",{"_index":1557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pending",{"_index":218,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateTableForOrders1730365329511.html":{},"entities/Order.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["permission",{"_index":945,"title":{},"body":{"classes/PermissionExistsException.html":{},"miscellaneous/variables.html":{}}}],["permission_exists",{"_index":1188,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["permissionexists",{"_index":1187,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["permissionexistsexception",{"_index":937,"title":{"classes/PermissionExistsException.html":{}},"body":{"classes/PermissionExistsException.html":{},"coverage.html":{}}}],["permissionscontroller",{"_index":1507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pg",{"_index":1134,"title":{},"body":{"dependencies.html":{}}}],["pgforeignkeyconstraintviolation",{"_index":1176,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pgnotnullconstraintviolation",{"_index":1174,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pguniqueconstraintviolation",{"_index":1178,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["phonenumberserializer",{"_index":1049,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["pin",{"_index":535,"title":{},"body":{"classes/GenerateCharacters.html":{},"classes/InvalidCurrentPinException.html":{}}}],["pin(length",{"_index":536,"title":{},"body":{"classes/GenerateCharacters.html":{}}}],["pk_710e2d4957aa5878dfe94e4ac2f",{"_index":270,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{}}}],["plain",{"_index":555,"title":{},"body":{"classes/HashHelper.html":{}}}],["please",{"_index":1314,"title":{},"body":{"index.html":{}}}],["pool",{"_index":1014,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["port",{"_index":308,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":800,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/TaxService.html":{}}}],["postgres.com/api/pool",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgres.com/apis/pool",{"_index":1012,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["precondition_failed",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":569,"title":{},"body":{"controllers/HealthController.html":{}}}],["primary",{"_index":271,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{},"coverage.html":{}}}],["primarygeneratedcolumn",{"_index":669,"title":{},"body":{"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":1033,"title":{},"body":{"classes/UuidPrimaryIdEntity.html":{}}}],["primarygeneratedcolumn({name",{"_index":659,"title":{},"body":{"classes/IntegerPrimaryIdEntity.html":{}}}],["private",{"_index":545,"title":{},"body":{"classes/HashHelper.html":{},"controllers/HealthController.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"injectables/OrdersService.html":{}}}],["process",{"_index":588,"title":{},"body":{"controllers/HealthController.html":{}}}],["process.cwd",{"_index":388,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["process.env.api_prefix",{"_index":394,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["process.env.backend_domain",{"_index":390,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["process.env.database_ca",{"_index":471,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_cert",{"_index":474,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_host",{"_index":452,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_key",{"_index":472,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_max_connections",{"_index":464,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_name",{"_index":458,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_password",{"_index":457,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_port",{"_index":453,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_reject_unauthorized",{"_index":469,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_ssl_enabled",{"_index":467,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_synchronize",{"_index":462,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_type",{"_index":450,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_url",{"_index":449,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_username",{"_index":460,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/variables.html":{}}}],["process.env.description",{"_index":378,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["process.env.domain",{"_index":392,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["process.env.fallback_language",{"_index":397,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["process.env.header_language",{"_index":400,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["process.env.key",{"_index":385,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["process.env.mongo_url",{"_index":482,"title":{},"body":{"classes/EnvironmentVariablesValidator-2.html":{}}}],["process.env.name",{"_index":376,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["process.env.node_env",{"_index":374,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/variables.html":{}}}],["process.env.port",{"_index":381,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["process.env.storage_path",{"_index":405,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["process.env.tax_url",{"_index":488,"title":{},"body":{"classes/EnvironmentVariablesValidator-3.html":{}}}],["process.env.version",{"_index":379,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["process.env.working_directory",{"_index":387,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["production",{"_index":344,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1268,"title":{},"body":{"index.html":{}}}],["promise",{"_index":244,"title":{},"body":{"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/HashHelper.html":{},"injectables/TaxService.html":{}}}],["properties",{"_index":122,"title":{"properties.html":{}},"body":{"classes/Base.html":{},"classes/CreateOrderDto.html":{},"classes/CreateTableForOrders1730365329511.html":{},"interfaces/DefaultPagination.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/HashHelper.html":{},"classes/IntegerPrimaryIdEntity.html":{},"injectables/LoggingInterceptor.html":{},"entities/Order.html":{},"classes/OrderResponseDto.html":{},"injectables/OrdersService.html":{},"interfaces/PaginationRequest.html":{},"classes/PaginationResponseDto.html":{},"classes/ResponseDto.html":{},"classes/UuidPrimaryIdEntity.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["propertiescontroller",{"_index":1598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["property",{"_index":1539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["property_already_allocated",{"_index":1206,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["propertyalreadyallocated",{"_index":1205,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["propertydecorator",{"_index":1258,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provided",{"_index":554,"title":{},"body":{"classes/HashHelper.html":{}}}],["providers",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"overview.html":{}}}],["provision",{"_index":346,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["proxy_authentication_required",{"_index":1456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":238,"title":{},"body":{"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/HashHelper.html":{}}}],["purchase",{"_index":1610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["purchase_request",{"_index":1540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["purpose",{"_index":917,"title":{},"body":{"interfaces/PaginationRequest.html":{}}}],["qa",{"_index":347,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["qr_code",{"_index":1226,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["quarter",{"_index":1245,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["query",{"_index":1502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queryrunner",{"_index":242,"title":{},"body":{"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{}}}],["queryrunner.createschema('sale",{"_index":248,"title":{},"body":{"classes/CreateSchemaForSales1730363889037.html":{}}}],["queryrunner.dropschema('sale",{"_index":249,"title":{},"body":{"classes/CreateSchemaForSales1730363889037.html":{}}}],["queryrunner.query",{"_index":258,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{}}}],["queryrunner.query(`drop",{"_index":273,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{}}}],["questions",{"_index":1312,"title":{},"body":{"index.html":{}}}],["read",{"_index":1353,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"injectables/LoggingInterceptor.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["real",{"_index":1327,"title":{},"body":{"index.html":{}}}],["record",{"_index":1260,"title":{},"body":{"miscellaneous/functions.html":{}}}],["records",{"_index":920,"title":{},"body":{"interfaces/PaginationRequest.html":{}}}],["recurringintervalunit",{"_index":1166,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["recursively",{"_index":498,"title":{},"body":{"classes/FileFinder.html":{}}}],["ref",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reflect",{"_index":1136,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":949,"title":{},"body":{"classes/RefreshTokenExpiredException.html":{}}}],["refresh_token_expired",{"_index":1186,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["refreshtokenexpired",{"_index":1185,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["refreshtokenexpiredexception",{"_index":946,"title":{"classes/RefreshTokenExpiredException.html":{}},"body":{"classes/RefreshTokenExpiredException.html":{},"coverage.html":{}}}],["refunded",{"_index":1240,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["regexpexecarray",{"_index":186,"title":{},"body":{"classes/ClassNameExtractor.html":{}}}],["registeras",{"_index":331,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{}}}],["registeras('app",{"_index":371,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["registeras('database",{"_index":447,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["registeras('mongo",{"_index":480,"title":{},"body":{"classes/EnvironmentVariablesValidator-2.html":{}}}],["registeras('tax",{"_index":487,"title":{},"body":{"classes/EnvironmentVariablesValidator-3.html":{}}}],["regular",{"_index":189,"title":{},"body":{"classes/ClassNameExtractor.html":{}}}],["reject",{"_index":1627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rejectunauthorized",{"_index":468,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["related",{"_index":845,"title":{},"body":{"injectables/OrdersService.html":{}}}],["remita",{"_index":1233,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["remove",{"_index":1559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["removecategory",{"_index":1590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["removeestate",{"_index":1597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["removerevenuehead",{"_index":1568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["removestatus",{"_index":1608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repository",{"_index":705,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/OrdersService.html":{}}}],["represents",{"_index":919,"title":{},"body":{"interfaces/PaginationRequest.html":{}}}],["request",{"_index":643,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{},"injectables/TaxService.html":{},"miscellaneous/variables.html":{}}}],["request.interface.ts",{"_index":909,"title":{},"body":{"interfaces/PaginationRequest.html":{},"coverage.html":{}}}],["request_timeout",{"_index":1458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requested_range_not_satisfiable",{"_index":1473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestforpaymentcontroller",{"_index":1558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requesting",{"_index":911,"title":{},"body":{"interfaces/PaginationRequest.html":{}}}],["require_tld",{"_index":370,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["required",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"overview.html":{}}}],["resolves",{"_index":969,"title":{},"body":{"injectables/TaxService.html":{}}}],["resources",{"_index":1304,"title":{},"body":{"index.html":{}}}],["response",{"_index":622,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"classes/ResponseDto.html":{},"injectables/TaxService.html":{}}}],["response.decorador.ts",{"_index":1065,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["response.decorators.ts",{"_index":1047,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["response.dto",{"_index":758,"title":{},"body":{"classes/OrderMapper.html":{},"controllers/OrdersController.html":{},"classes/Pagination.html":{}}}],["response.dto.ts",{"_index":774,"title":{},"body":{"classes/OrderResponseDto.html":{},"classes/PaginationResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:11",{"_index":778,"title":{},"body":{"classes/OrderResponseDto.html":{},"classes/PaginationResponseDto.html":{}}}],["response.dto.ts:13",{"_index":933,"title":{},"body":{"classes/PaginationResponseDto.html":{}}}],["response.dto.ts:14",{"_index":775,"title":{},"body":{"classes/OrderResponseDto.html":{}}}],["response.dto.ts:15",{"_index":934,"title":{},"body":{"classes/PaginationResponseDto.html":{}}}],["response.dto.ts:17",{"_index":780,"title":{},"body":{"classes/OrderResponseDto.html":{},"classes/PaginationResponseDto.html":{}}}],["response.dto.ts:20",{"_index":777,"title":{},"body":{"classes/OrderResponseDto.html":{}}}],["response.dto.ts:5",{"_index":779,"title":{},"body":{"classes/OrderResponseDto.html":{},"classes/PaginationResponseDto.html":{}}}],["response.dto.ts:7",{"_index":935,"title":{},"body":{"classes/PaginationResponseDto.html":{}}}],["response.dto.ts:8",{"_index":776,"title":{},"body":{"classes/OrderResponseDto.html":{}}}],["response.dto.ts:9",{"_index":936,"title":{},"body":{"classes/PaginationResponseDto.html":{}}}],["response.status(status).json",{"_index":632,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["responsedto",{"_index":647,"title":{"classes/ResponseDto.html":{}},"body":{"injectables/HttpResponseInterceptor.html":{},"classes/ResponseDto.html":{},"coverage.html":{}}}],["results",{"_index":25,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplicatonExistException.html":{},"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateOrderDto.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/CustomerExistException.html":{},"interfaces/DefaultPagination.html":{},"classes/DisabledUserException.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/FileFinder.html":{},"classes/ForeignKeyConflictException.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"classes/InvalidTokenException.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"entities/Order.html":{},"classes/OrderMapper.html":{},"classes/OrderResponseDto.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"interfaces/PaginationRequest.html":{},"classes/PaginationResponseDto.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/ResponseDto.html":{},"classes/RoleExistsException.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateOrderDto.html":{},"classes/UserExistsException.html":{},"classes/UuidPrimaryIdEntity.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieves",{"_index":856,"title":{},"body":{"injectables/OrdersService.html":{}}}],["return",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/FileFinder.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"controllers/HealthController.html":{},"injectables/HttpResponseInterceptor.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"classes/OrderMapper.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/FileFinder.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"controllers/HealthController.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/IntegerPrimaryIdEntity.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"classes/OrderMapper.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UuidPrimaryIdEntity.html":{},"miscellaneous/functions.html":{}}}],["revenue",{"_index":1562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["revenueheadscontroller",{"_index":1560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["revert",{"_index":1284,"title":{},"body":{"index.html":{}}}],["rimraf",{"_index":1139,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":957,"title":{},"body":{"classes/RoleExistsException.html":{},"miscellaneous/variables.html":{}}}],["role_exists",{"_index":1190,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["roleexists",{"_index":1189,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["roleexistsexception",{"_index":954,"title":{"classes/RoleExistsException.html":{}},"body":{"classes/RoleExistsException.html":{},"coverage.html":{}}}],["rolescontroller",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routenaming",{"_index":1076,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["rss",{"_index":591,"title":{},"body":{"controllers/HealthController.html":{}}}],["run",{"_index":1272,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":651,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":650,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{},"injectables/LoggingInterceptor.html":{}}}],["sale",{"_index":749,"title":{},"body":{"entities/Order.html":{}}}],["sale\".\"orders",{"_index":263,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{}}}],["sale\".\"orders_status_enum",{"_index":259,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{}}}],["sales.ts",{"_index":235,"title":{},"body":{"classes/CreateSchemaForSales1730363889037.html":{},"coverage.html":{}}}],["sales.ts:4",{"_index":246,"title":{},"body":{"classes/CreateSchemaForSales1730363889037.html":{}}}],["sales.ts:8",{"_index":243,"title":{},"body":{"classes/CreateSchemaForSales1730363889037.html":{}}}],["salt",{"_index":546,"title":{},"body":{"classes/HashHelper.html":{}}}],["same",{"_index":916,"title":{},"body":{"interfaces/PaginationRequest.html":{}}}],["save",{"_index":1581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["savecustomerproperty",{"_index":1580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schema",{"_index":234,"title":{},"body":{"classes/CreateSchemaForSales1730363889037.html":{},"entities/Order.html":{},"modules/OrdersModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["schema:drop",{"_index":1292,"title":{},"body":{"index.html":{}}}],["schemafactory.createforclass(order",{"_index":1500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scheme",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["score",{"_index":791,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["score'})@apiokresponse()@get('business/:businessid/credit",{"_index":790,"title":{},"body":{"controllers/OrdersController.html":{}}}],["search",{"_index":499,"title":{},"body":{"classes/FileFinder.html":{}}}],["securityschemeobject",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seed",{"_index":1293,"title":{},"body":{"index.html":{}}}],["seed:create",{"_index":1296,"title":{},"body":{"index.html":{}}}],["seed:run",{"_index":1294,"title":{},"body":{"index.html":{}}}],["seeds",{"_index":1417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seedtracking",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["select",{"_index":1545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["select('sum(amount",{"_index":884,"title":{},"body":{"injectables/OrdersService.html":{}}}],["selectpaymentoption",{"_index":1544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sending",{"_index":967,"title":{},"body":{"injectables/TaxService.html":{}}}],["server",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":842,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/TaxService.html":{},"miscellaneous/variables.html":{}}}],["service_unavailable",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["services",{"_index":1440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setdescription(description",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setentityname",{"_index":128,"title":{},"body":{"classes/Base.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["settitle(title",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":1269,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["setversion(apiversion",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":924,"title":{},"body":{"interfaces/PaginationRequest.html":{}}}],["show",{"_index":1287,"title":{},"body":{"index.html":{}}}],["size",{"_index":925,"title":{},"body":{"interfaces/PaginationRequest.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["skip",{"_index":902,"title":{},"body":{"classes/Pagination.html":{},"interfaces/PaginationRequest.html":{},"miscellaneous/variables.html":{}}}],["skip_auth",{"_index":1043,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["skipauth",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skipped",{"_index":921,"title":{},"body":{"interfaces/PaginationRequest.html":{}}}],["skippedrecords",{"_index":932,"title":{},"body":{"classes/PaginationResponseDto.html":{}}}],["slice(2",{"_index":542,"title":{},"body":{"classes/GenerateCharacters.html":{}}}],["slug",{"_index":942,"title":{},"body":{"classes/PermissionExistsException.html":{}}}],["sort",{"_index":926,"title":{},"body":{"interfaces/PaginationRequest.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplicatonExistException.html":{},"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateOrderDto.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/CustomerExistException.html":{},"interfaces/DefaultPagination.html":{},"classes/DisabledUserException.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/FileFinder.html":{},"classes/ForeignKeyConflictException.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"classes/InvalidTokenException.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"entities/Order.html":{},"classes/OrderMapper.html":{},"classes/OrderResponseDto.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"interfaces/PaginationRequest.html":{},"classes/PaginationResponseDto.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/ResponseDto.html":{},"classes/RoleExistsException.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateOrderDto.html":{},"classes/UserExistsException.html":{},"classes/UuidPrimaryIdEntity.html":{},"index.html":{}}}],["source.ts",{"_index":1109,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["space",{"_index":601,"title":{},"body":{"controllers/HealthController.html":{}}}],["specific",{"_index":501,"title":{},"body":{"classes/FileFinder.html":{},"injectables/OrdersService.html":{}}}],["sponsors",{"_index":1348,"title":{},"body":{"index.html":{}}}],["src",{"_index":1004,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["src/.../api",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":1152,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../config.type.ts",{"_index":1374,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../constants.ts",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../data",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../db",{"_index":1150,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../entity",{"_index":1375,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../error",{"_index":1153,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../find",{"_index":1376,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../gender.enum.ts",{"_index":1156,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../http",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../is",{"_index":1381,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../job",{"_index":1158,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../lower",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1255,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../maybe.type.ts",{"_index":1377,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../nullable.type.ts",{"_index":1378,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../or",{"_index":1380,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../order.schema.ts",{"_index":1379,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../pagination",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../payment",{"_index":1160,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../recurring",{"_index":1167,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../route",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../swagger.config.ts",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../task",{"_index":1170,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../transaction",{"_index":1172,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../transform.decorators.ts",{"_index":1256,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../validate",{"_index":1257,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../validation",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":105,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":106,"title":{},"body":{"injectables/AppService.html":{}}}],["src/common/constants.ts",{"_index":1039,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorators/api",{"_index":1045,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorators/transform.decorators.ts",{"_index":1048,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/dtos/response.dto.ts",{"_index":950,"title":{},"body":{"classes/ResponseDto.html":{},"coverage.html":{}}}],["src/common/dtos/response.dto.ts:10",{"_index":953,"title":{},"body":{"classes/ResponseDto.html":{}}}],["src/common/dtos/response.dto.ts:8",{"_index":951,"title":{},"body":{"classes/ResponseDto.html":{}}}],["src/common/entities/base.entity.ts",{"_index":120,"title":{},"body":{"classes/Base.html":{},"coverage.html":{}}}],["src/common/entities/base.entity.ts:18",{"_index":141,"title":{},"body":{"classes/Base.html":{}}}],["src/common/entities/base.entity.ts:27",{"_index":149,"title":{},"body":{"classes/Base.html":{}}}],["src/common/entities/base.entity.ts:34",{"_index":144,"title":{},"body":{"classes/Base.html":{}}}],["src/common/entities/base.entity.ts:36",{"_index":131,"title":{},"body":{"classes/Base.html":{}}}],["src/common/entities/base.entity.ts:39",{"_index":151,"title":{},"body":{"classes/Base.html":{}}}],["src/common/entities/base.entity.ts:43",{"_index":153,"title":{},"body":{"classes/Base.html":{}}}],["src/common/entities/integer",{"_index":657,"title":{},"body":{"classes/IntegerPrimaryIdEntity.html":{},"coverage.html":{}}}],["src/common/entities/uuid",{"_index":1032,"title":{},"body":{"classes/UuidPrimaryIdEntity.html":{},"coverage.html":{}}}],["src/common/enums/db",{"_index":1173,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enums/error",{"_index":1180,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enums/gender.enum.ts",{"_index":1213,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enums/job",{"_index":1216,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enums/payment",{"_index":1220,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enums/recurring",{"_index":1241,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enums/task",{"_index":1247,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enums/transaction",{"_index":1250,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/helpers/class",{"_index":165,"title":{},"body":{"classes/ClassNameExtractor.html":{},"coverage.html":{}}}],["src/common/helpers/file",{"_index":490,"title":{},"body":{"classes/FileFinder.html":{},"coverage.html":{}}}],["src/common/helpers/generate",{"_index":533,"title":{},"body":{"classes/GenerateCharacters.html":{},"coverage.html":{}}}],["src/common/helpers/hash.helper.ts",{"_index":544,"title":{},"body":{"classes/HashHelper.html":{},"coverage.html":{}}}],["src/common/helpers/hash.helper.ts:11",{"_index":558,"title":{},"body":{"classes/HashHelper.html":{}}}],["src/common/helpers/hash.helper.ts:21",{"_index":552,"title":{},"body":{"classes/HashHelper.html":{}}}],["src/common/helpers/hash.helper.ts:4",{"_index":549,"title":{},"body":{"classes/HashHelper.html":{}}}],["src/common/http/exceptions/access",{"_index":6,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"coverage.html":{}}}],["src/common/http/exceptions/application",{"_index":110,"title":{},"body":{"classes/ApplicatonExistException.html":{},"coverage.html":{}}}],["src/common/http/exceptions/customer",{"_index":275,"title":{},"body":{"classes/CustomerExistException.html":{},"coverage.html":{}}}],["src/common/http/exceptions/disabled",{"_index":293,"title":{},"body":{"classes/DisabledUserException.html":{},"coverage.html":{}}}],["src/common/http/exceptions/foreign",{"_index":526,"title":{},"body":{"classes/ForeignKeyConflictException.html":{},"coverage.html":{}}}],["src/common/http/exceptions/invalid",{"_index":672,"title":{},"body":{"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidTokenException.html":{},"coverage.html":{}}}],["src/common/http/exceptions/invalidcurrentpinexception.ts",{"_index":684,"title":{},"body":{"classes/InvalidCurrentPinException.html":{},"coverage.html":{}}}],["src/common/http/exceptions/invalidcurrentpinexception.ts:4",{"_index":685,"title":{},"body":{"classes/InvalidCurrentPinException.html":{}}}],["src/common/http/exceptions/permission",{"_index":938,"title":{},"body":{"classes/PermissionExistsException.html":{},"coverage.html":{}}}],["src/common/http/exceptions/refresh",{"_index":947,"title":{},"body":{"classes/RefreshTokenExpiredException.html":{},"coverage.html":{}}}],["src/common/http/exceptions/role",{"_index":955,"title":{},"body":{"classes/RoleExistsException.html":{},"coverage.html":{}}}],["src/common/http/exceptions/user",{"_index":1028,"title":{},"body":{"classes/UserExistsException.html":{},"coverage.html":{}}}],["src/common/http/http",{"_index":610,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/http/response.interceptor.ts",{"_index":636,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{},"coverage.html":{}}}],["src/common/http/response.interceptor.ts:19",{"_index":642,"title":{},"body":{"injectables/HttpResponseInterceptor.html":{}}}],["src/common/interceptors/logging.interceptors.ts",{"_index":726,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["src/common/interceptors/logging.interceptors.ts:13",{"_index":728,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["src/common/interceptors/logging.interceptors.ts:17",{"_index":729,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["src/common/libs/pagination/decorators/api",{"_index":1064,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/libs/pagination/decorators/pagination",{"_index":1067,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/libs/pagination/interfaces/default",{"_index":281,"title":{},"body":{"interfaces/DefaultPagination.html":{},"coverage.html":{}}}],["src/common/libs/pagination/interfaces/pagination",{"_index":908,"title":{},"body":{"interfaces/PaginationRequest.html":{},"coverage.html":{}}}],["src/common/libs/pagination/pagination",{"_index":930,"title":{},"body":{"classes/PaginationResponseDto.html":{},"coverage.html":{}}}],["src/common/libs/pagination/pagination.helper.ts",{"_index":892,"title":{},"body":{"classes/Pagination.html":{},"coverage.html":{}}}],["src/common/libs/pagination/pagination.helper.ts:12",{"_index":898,"title":{},"body":{"classes/Pagination.html":{}}}],["src/common/libs/route",{"_index":1074,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/transformers/lower",{"_index":1077,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/types/entity",{"_index":1080,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/types/find",{"_index":1084,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/types/maybe.type.ts",{"_index":1087,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/types/nullable.type.ts",{"_index":1089,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/types/or",{"_index":1091,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/validators/is",{"_index":692,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/validators/validate",{"_index":1095,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/validators/validation",{"_index":1097,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/app.config.ts",{"_index":301,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/config/app.config.ts:41",{"_index":325,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["src/config/app.config.ts:44",{"_index":322,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["src/config/app.config.ts:48",{"_index":317,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["src/config/app.config.ts:52",{"_index":329,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["src/config/app.config.ts:58",{"_index":327,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["src/config/app.config.ts:62",{"_index":321,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["src/config/app.config.ts:66",{"_index":330,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["src/config/app.config.ts:70",{"_index":316,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["src/config/app.config.ts:74",{"_index":318,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["src/config/app.config.ts:78",{"_index":313,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["src/config/app.config.ts:82",{"_index":319,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["src/config/app.config.ts:86",{"_index":320,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["src/config/app.config.ts:90",{"_index":328,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["src/config/config.type",{"_index":985,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["src/config/config.type.ts",{"_index":1101,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/config/database.config.ts",{"_index":407,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"coverage.html":{}}}],["src/config/database.config.ts:17",{"_index":439,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/config/database.config.ts:21",{"_index":437,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/config/database.config.ts:25",{"_index":425,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/config/database.config.ts:32",{"_index":431,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/config/database.config.ts:37",{"_index":430,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/config/database.config.ts:41",{"_index":429,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/config/database.config.ts:45",{"_index":440,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/config/database.config.ts:49",{"_index":436,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/config/database.config.ts:53",{"_index":428,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/config/database.config.ts:57",{"_index":435,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/config/database.config.ts:61",{"_index":434,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/config/database.config.ts:65",{"_index":422,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/config/database.config.ts:69",{"_index":426,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/config/database.config.ts:73",{"_index":423,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/config/mongo.config.ts",{"_index":476,"title":{},"body":{"classes/EnvironmentVariablesValidator-2.html":{},"coverage.html":{}}}],["src/config/mongo.config.ts:8",{"_index":478,"title":{},"body":{"classes/EnvironmentVariablesValidator-2.html":{}}}],["src/config/swagger.config.ts",{"_index":1105,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/tax.config.ts",{"_index":484,"title":{},"body":{"classes/EnvironmentVariablesValidator-3.html":{},"coverage.html":{}}}],["src/config/tax.config.ts:8",{"_index":486,"title":{},"body":{"classes/EnvironmentVariablesValidator-3.html":{}}}],["src/database/data",{"_index":1108,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/factories/**/*{.ts,.js",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/database/migrations",{"_index":1006,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["src/database/migrations/1730363889037",{"_index":232,"title":{},"body":{"classes/CreateSchemaForSales1730363889037.html":{},"coverage.html":{}}}],["src/database/migrations/1730365329511",{"_index":251,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{},"coverage.html":{}}}],["src/database/migrations/create",{"_index":1281,"title":{},"body":{"index.html":{}}}],["src/database/seeds",{"_index":1295,"title":{},"body":{"index.html":{}}}],["src/database/seeds/**/*{.ts,.js",{"_index":1418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/database/seeds/create",{"_index":1297,"title":{},"body":{"index.html":{}}}],["src/database/typeorm",{"_index":978,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"coverage.html":{}}}],["src/health/health.controller.ts",{"_index":568,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:25",{"_index":573,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":606,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/main.ts",{"_index":1111,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/orders/dto/create",{"_index":194,"title":{},"body":{"classes/CreateOrderDto.html":{},"coverage.html":{}}}],["src/modules/orders/dto/order",{"_index":773,"title":{},"body":{"classes/OrderResponseDto.html":{},"coverage.html":{}}}],["src/modules/orders/dto/update",{"_index":1024,"title":{},"body":{"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["src/modules/orders/entities/order.entity.ts",{"_index":739,"title":{},"body":{"entities/Order.html":{},"coverage.html":{}}}],["src/modules/orders/entities/order.entity.ts:11",{"_index":743,"title":{},"body":{"entities/Order.html":{}}}],["src/modules/orders/entities/order.entity.ts:18",{"_index":744,"title":{},"body":{"entities/Order.html":{}}}],["src/modules/orders/entities/order.entity.ts:24",{"_index":742,"title":{},"body":{"entities/Order.html":{}}}],["src/modules/orders/entities/order.entity.ts:32",{"_index":745,"title":{},"body":{"entities/Order.html":{}}}],["src/modules/orders/order.mapper.ts",{"_index":752,"title":{},"body":{"classes/OrderMapper.html":{},"coverage.html":{}}}],["src/modules/orders/order.mapper.ts:5",{"_index":755,"title":{},"body":{"classes/OrderMapper.html":{}}}],["src/modules/orders/orders.controller.ts",{"_index":782,"title":{},"body":{"controllers/OrdersController.html":{},"coverage.html":{}}}],["src/modules/orders/orders.controller.ts:27",{"_index":796,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/modules/orders/orders.controller.ts:34",{"_index":799,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/modules/orders/orders.controller.ts:41",{"_index":792,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/modules/orders/orders.module.ts",{"_index":826,"title":{},"body":{"modules/OrdersModule.html":{}}}],["src/modules/orders/orders.service.ts",{"_index":833,"title":{},"body":{"injectables/OrdersService.html":{},"coverage.html":{}}}],["src/modules/orders/orders.service.ts:15",{"_index":837,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/modules/orders/orders.service.ts:35",{"_index":851,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/modules/orders/orders.service.ts:55",{"_index":855,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/modules/orders/orders.service.ts:73",{"_index":847,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/modules/orders/schemas/order.schema.ts",{"_index":1115,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/orders/tax.service.ts",{"_index":958,"title":{},"body":{"injectables/TaxService.html":{},"coverage.html":{}}}],["src/modules/orders/tax.service.ts:20",{"_index":965,"title":{},"body":{"injectables/TaxService.html":{}}}],["src/modules/orders/tax.service.ts:8",{"_index":961,"title":{},"body":{"injectables/TaxService.html":{}}}],["ssl",{"_index":1016,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["sslenabled",{"_index":466,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["staging",{"_index":343,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["standing_order",{"_index":1231,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["start",{"_index":915,"title":{},"body":{"interfaces/PaginationRequest.html":{},"index.html":{}}}],["start:dev",{"_index":1275,"title":{},"body":{"index.html":{}}}],["start:proddatabase",{"_index":1276,"title":{},"body":{"index.html":{}}}],["started",{"_index":1264,"title":{"index.html":{}},"body":{}}],["state",{"_index":1576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":1037,"title":{},"body":{"coverage.html":{}}}],["statescontroller",{"_index":1575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["static",{"_index":167,"title":{},"body":{"classes/ClassNameExtractor.html":{},"classes/FileFinder.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"classes/OrderMapper.html":{},"classes/Pagination.html":{}}}],["statistics",{"_index":1536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["status",{"_index":199,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/HttpExceptionFilter.html":{},"entities/Order.html":{},"classes/OrderResponseDto.html":{},"miscellaneous/variables.html":{}}}],["status.enum.ts",{"_index":1165,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statuscode",{"_index":633,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["statusescontroller",{"_index":1603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stay",{"_index":1333,"title":{},"body":{"index.html":{}}}],["storage",{"_index":597,"title":{},"body":{"controllers/HealthController.html":{}}}],["storage_path",{"_index":309,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["storagepath",{"_index":404,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["str",{"_index":560,"title":{},"body":{"classes/HashHelper.html":{}}}],["string",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateOrderDto.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/CustomerExistException.html":{},"interfaces/DefaultPagination.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/FileFinder.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/IntegerPrimaryIdEntity.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"entities/Order.html":{},"classes/OrderResponseDto.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"interfaces/PaginationRequest.html":{},"classes/PermissionExistsException.html":{},"classes/RoleExistsException.html":{},"classes/UserExistsException.html":{},"classes/UuidPrimaryIdEntity.html":{},"miscellaneous/variables.html":{}}}],["subdirectories",{"_index":503,"title":{},"body":{"classes/FileFinder.html":{}}}],["subscriber",{"_index":1008,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["subscribersdir",{"_index":1007,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["sum",{"_index":885,"title":{},"body":{"injectables/OrdersService.html":{}}}],["super",{"_index":20,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"classes/ApplicatonExistException.html":{},"classes/CustomerExistException.html":{},"classes/DisabledUserException.html":{},"classes/ForeignKeyConflictException.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidCurrentPasswordException.html":{},"classes/InvalidCurrentPinException.html":{},"classes/InvalidTokenException.html":{},"classes/PermissionExistsException.html":{},"classes/RefreshTokenExpiredException.html":{},"classes/RoleExistsException.html":{},"classes/UserExistsException.html":{}}}],["support",{"_index":1313,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1365,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1142,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["swaggerconfig",{"_index":1106,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggermodule.createdocument(app",{"_index":1438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup(`api/v${apiversion}/swagger",{"_index":1439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synchronize",{"_index":461,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["system",{"_index":1267,"title":{},"body":{"index.html":{}}}],["t",{"_index":897,"title":{},"body":{"classes/Pagination.html":{},"interfaces/PaginationRequest.html":{},"classes/PaginationResponseDto.html":{},"classes/ResponseDto.html":{},"miscellaneous/typealiases.html":{}}}],["table",{"_index":252,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{},"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1118,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":731,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["tap(async",{"_index":735,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["task",{"_index":1624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taskscontroller",{"_index":1623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taskstatus",{"_index":1169,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tax",{"_index":844,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/TaxService.html":{}}}],["tax_url",{"_index":485,"title":{},"body":{"classes/EnvironmentVariablesValidator-3.html":{}}}],["taxconfig",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["taxservice",{"_index":825,"title":{"injectables/TaxService.html":{}},"body":{"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"injectables/TaxService.html":{},"coverage.html":{},"overview.html":{}}}],["term_settings_exist",{"_index":1208,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["terminusmodule",{"_index":608,"title":{},"body":{"modules/HealthModule.html":{}}}],["termsettingsexist",{"_index":1207,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["test",{"_index":345,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["test:covresources",{"_index":1302,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1301,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1298,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1347,"title":{},"body":{"index.html":{}}}],["then((response",{"_index":872,"title":{},"body":{"injectables/OrdersService.html":{}}}],["there's",{"_index":944,"title":{},"body":{"classes/PermissionExistsException.html":{},"classes/RoleExistsException.html":{},"classes/UserExistsException.html":{}}}],["this.__entity",{"_index":161,"title":{},"body":{"classes/Base.html":{}}}],["this.appservice.gethello",{"_index":43,"title":{},"body":{"controllers/AppController.html":{}}}],["this.configservice.get",{"_index":1018,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('app.nodeenv",{"_index":997,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('app.storagepath",{"_index":605,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get('database.ca",{"_index":1020,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database.cert",{"_index":1022,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database.host",{"_index":988,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database.key",{"_index":1021,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database.maxconnections",{"_index":1015,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database.name",{"_index":993,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database.password",{"_index":991,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database.port",{"_index":989,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database.sslenabled",{"_index":1017,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database.synchronize",{"_index":994,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database.type",{"_index":986,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database.url",{"_index":987,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database.username",{"_index":990,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('tax.url",{"_index":973,"title":{},"body":{"injectables/TaxService.html":{}}}],["this.constructor.name",{"_index":162,"title":{},"body":{"classes/Base.html":{}}}],["this.datasource",{"_index":710,"title":{},"body":{"injectables/IsExist.html":{}}}],["this.datasource.getrepository(repository).findone",{"_index":722,"title":{},"body":{"injectables/IsNotExist.html":{}}}],["this.diskhealthindicator.checkstorage('disk",{"_index":602,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.healthcheckservice.check",{"_index":583,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.logger.error('error",{"_index":876,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.logger.log('tax",{"_index":873,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.logger.log(`after",{"_index":736,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["this.logger.log(`before",{"_index":733,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["this.memoryhealthindicator.checkheap('memory",{"_index":584,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.memoryhealthindicator.checkrss('memory",{"_index":594,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.ordermodel.create(createorderdto",{"_index":869,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ordermodel.find",{"_index":888,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.orderrepository",{"_index":882,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.orderrepository.count",{"_index":880,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.orderrepository.create(createorderdto",{"_index":867,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.orderrepository.save(orderentity",{"_index":868,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ordersservice.calculatecreditscore(businessid",{"_index":822,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.ordersservice.createorder(createorderdto",{"_index":815,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.ordersservice.getorderdetails(businessid",{"_index":819,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.salt",{"_index":565,"title":{},"body":{"classes/HashHelper.html":{}}}],["this.taxservice",{"_index":870,"title":{},"body":{"injectables/OrdersService.html":{}}}],["thresholdpercent",{"_index":603,"title":{},"body":{"controllers/HealthController.html":{}}}],["through",{"_index":510,"title":{},"body":{"classes/FileFinder.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":136,"title":{},"body":{"classes/Base.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{},"index.html":{}}}],["timestamp",{"_index":135,"title":{},"body":{"classes/Base.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/ResponseDto.html":{},"classes/UuidPrimaryIdEntity.html":{},"miscellaneous/variables.html":{}}}],["title",{"_index":1107,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tmodel",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toarray",{"_index":1050,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["toboolean",{"_index":1051,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["todto",{"_index":753,"title":{},"body":{"classes/OrderMapper.html":{}}}],["todto(entity",{"_index":754,"title":{},"body":{"classes/OrderMapper.html":{}}}],["toint",{"_index":1052,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tojson",{"_index":129,"title":{},"body":{"classes/Base.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["token",{"_index":7,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"classes/RefreshTokenExpiredException.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["token.exception.ts",{"_index":688,"title":{},"body":{"classes/InvalidTokenException.html":{},"coverage.html":{}}}],["token.exception.ts:4",{"_index":689,"title":{},"body":{"classes/InvalidTokenException.html":{}}}],["token_name",{"_index":1044,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tolowercase",{"_index":1053,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["too_many_requests",{"_index":1485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tostring",{"_index":541,"title":{},"body":{"classes/GenerateCharacters.html":{}}}],["total",{"_index":857,"title":{},"body":{"injectables/OrdersService.html":{}}}],["totalamount",{"_index":881,"title":{},"body":{"injectables/OrdersService.html":{}}}],["totalorders",{"_index":879,"title":{},"body":{"injectables/OrdersService.html":{}}}],["totalpages",{"_index":903,"title":{},"body":{"classes/Pagination.html":{},"classes/PaginationResponseDto.html":{}}}],["totalrecords",{"_index":895,"title":{},"body":{"classes/Pagination.html":{},"classes/PaginationResponseDto.html":{}}}],["touch",{"_index":1355,"title":{},"body":{"index.html":{}}}],["touppercase",{"_index":1054,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["transactionstatusenum",{"_index":1171,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transfer",{"_index":854,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/TaxService.html":{},"miscellaneous/enumerations.html":{}}}],["transform",{"_index":1629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transformer",{"_index":155,"title":{},"body":{"classes/Base.html":{},"dependencies.html":{}}}],["transformfnparams",{"_index":1498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trim",{"_index":1055,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["true",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"classes/Base.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/FileFinder.html":{},"controllers/HealthController.html":{},"classes/IntegerPrimaryIdEntity.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UuidPrimaryIdEntity.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":971,"title":{},"body":{"injectables/TaxService.html":{}}}],["twitter",{"_index":1361,"title":{},"body":{"index.html":{}}}],["type",{"_index":130,"title":{},"body":{"classes/Base.html":{},"classes/ClassNameExtractor.html":{},"classes/CreateOrderDto.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/CustomerExistException.html":{},"interfaces/DefaultPagination.html":{},"classes/DisabledUserException.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/FileFinder.html":{},"classes/GenerateCharacters.html":{},"classes/HashHelper.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpResponseInterceptor.html":{},"classes/IntegerPrimaryIdEntity.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"entities/Order.html":{},"classes/OrderMapper.html":{},"classes/OrderResponseDto.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/Pagination.html":{},"interfaces/PaginationRequest.html":{},"classes/PaginationResponseDto.html":{},"classes/PermissionExistsException.html":{},"classes/ResponseDto.html":{},"classes/RoleExistsException.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UserExistsException.html":{},"classes/UuidPrimaryIdEntity.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.enum.ts",{"_index":1154,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type.ts",{"_index":1061,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1372,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"classes/Base.html":{},"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/IntegerPrimaryIdEntity.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"entities/Order.html":{},"injectables/OrdersService.html":{},"classes/UuidPrimaryIdEntity.html":{},"dependencies.html":{},"index.html":{}}}],["typeormconfigservice",{"_index":68,"title":{"injectables/TypeOrmConfigService.html":{}},"body":{"modules/AppModule.html":{},"injectables/TypeOrmConfigService.html":{},"coverage.html":{}}}],["typeormmodule",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{}}}],["typeormmodule.forfeature([order",{"_index":831,"title":{},"body":{"modules/OrdersModule.html":{}}}],["typeormmodule.forrootasync",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":983,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["typeormoptionsfactory",{"_index":984,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["types",{"_index":1613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typescript",{"_index":177,"title":{},"body":{"classes/ClassNameExtractor.html":{}}}],["uat",{"_index":348,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["ui",{"_index":1143,"title":{},"body":{"dependencies.html":{}}}],["unauthorized",{"_index":1444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unauthorizedexception",{"_index":10,"title":{},"body":{"classes/AccessTokenExpiredException.html":{},"classes/DisabledUserException.html":{},"classes/InvalidCredentialsException.html":{},"classes/InvalidTokenException.html":{},"classes/RefreshTokenExpiredException.html":{}}}],["undefined",{"_index":719,"title":{},"body":{"injectables/IsNotExist.html":{},"entities/Order.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["unexpected_error",{"_index":631,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["unit",{"_index":1299,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":700,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/OrdersService.html":{},"miscellaneous/enumerations.html":{}}}],["unlicensed",{"_index":1371,"title":{},"body":{"properties.html":{}}}],["unprocessable_entity",{"_index":1481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unsupported_media_type",{"_index":1471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["up",{"_index":240,"title":{},"body":{"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{}}}],["up(queryrunner",{"_index":245,"title":{},"body":{"classes/CreateSchemaForSales1730363889037.html":{},"classes/CreateTableForOrders1730365329511.html":{}}}],["update",{"_index":138,"title":{},"body":{"classes/Base.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{},"miscellaneous/variables.html":{}}}],["update_payment_amount",{"_index":1218,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["updatecategory",{"_index":1589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatecustomer",{"_index":1531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updated_at",{"_index":146,"title":{},"body":{"classes/Base.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["updatedat",{"_index":127,"title":{},"body":{"classes/Base.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["updatedatecolumn",{"_index":158,"title":{},"body":{"classes/Base.html":{}}}],["updatedatecolumn({name",{"_index":145,"title":{},"body":{"classes/Base.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["updateestate",{"_index":1596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updateinvoice",{"_index":1547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updateorderdto",{"_index":1023,"title":{"classes/UpdateOrderDto.html":{}},"body":{"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["updatepermission",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updaterevenuehead",{"_index":1567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updaterole",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updates",{"_index":1334,"title":{},"body":{"index.html":{}}}],["updatestatus",{"_index":1607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updateuser",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["upload",{"_index":1570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uploadfile",{"_index":1569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uri",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["uri_too_long",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["url",{"_index":448,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"injectables/LoggingInterceptor.html":{},"injectables/TaxService.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":595,"title":{},"body":{"controllers/HealthController.html":{},"interfaces/PaginationRequest.html":{}}}],["usefactory",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":297,"title":{},"body":{"classes/DisabledUserException.html":{},"classes/UserExistsException.html":{},"miscellaneous/variables.html":{}}}],["user.exception.ts",{"_index":294,"title":{},"body":{"classes/DisabledUserException.html":{},"coverage.html":{}}}],["user.exception.ts:4",{"_index":296,"title":{},"body":{"classes/DisabledUserException.html":{}}}],["user_exists",{"_index":1192,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userexists",{"_index":1191,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userexistsexception",{"_index":1027,"title":{"classes/UserExistsException.html":{}},"body":{"classes/UserExistsException.html":{},"coverage.html":{}}}],["username",{"_index":459,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UserExistsException.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["using",{"_index":188,"title":{},"body":{"classes/ClassNameExtractor.html":{},"index.html":{}}}],["ussd",{"_index":1227,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["utf8",{"_index":181,"title":{},"body":{"classes/ClassNameExtractor.html":{}}}],["uuid",{"_index":264,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{},"entities/Order.html":{}}}],["uuid_generate_v4",{"_index":265,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{}}}],["uuidprimaryidentity",{"_index":747,"title":{"classes/UuidPrimaryIdEntity.html":{}},"body":{"entities/Order.html":{},"classes/UuidPrimaryIdEntity.html":{},"coverage.html":{}}}],["validate",{"_index":694,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsNotExist.html":{}}}],["validate(value",{"_index":697,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsNotExist.html":{}}}],["validateconfig",{"_index":333,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validateconfig(config",{"_index":1259,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validateconfig(process.env",{"_index":372,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{}}}],["validateif",{"_index":441,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["validateif((envvalues",{"_index":445,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["validateif(envvalues",{"_index":424,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["validation",{"_index":1641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validationarguments",{"_index":698,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsNotExist.html":{}}}],["validationarguments.constraints[0",{"_index":706,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsNotExist.html":{}}}],["validationarguments.constraints[1",{"_index":708,"title":{},"body":{"injectables/IsExist.html":{}}}],["validationarguments.object",{"_index":721,"title":{},"body":{"injectables/IsNotExist.html":{}}}],["validationarguments.property",{"_index":713,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsNotExist.html":{}}}],["validationentity",{"_index":718,"title":{},"body":{"injectables/IsNotExist.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["validationerror",{"_index":1635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validationoptions",{"_index":1099,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["validationpipe",{"_index":802,"title":{},"body":{"controllers/OrdersController.html":{}}}],["validationpipeoptions",{"_index":1628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator",{"_index":227,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"dependencies.html":{}}}],["validator/types/validation/validationarguments",{"_index":704,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsNotExist.html":{}}}],["validatorconstraint",{"_index":701,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsNotExist.html":{}}}],["validatorconstraintinterface",{"_index":702,"title":{},"body":{"injectables/IsExist.html":{},"injectables/IsNotExist.html":{}}}],["value",{"_index":254,"title":{},"body":{"classes/CreateTableForOrders1730365329511.html":{},"classes/HashHelper.html":{},"injectables/IsExist.html":{},"injectables/IsNotExist.html":{},"injectables/LoggingInterceptor.html":{},"injectables/OrdersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value?.[pathtoproperty",{"_index":714,"title":{},"body":{"injectables/IsExist.html":{}}}],["values",{"_index":964,"title":{},"body":{"injectables/TaxService.html":{}}}],["variable",{"_index":1040,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1384,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":310,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"controllers/OrdersController.html":{},"properties.html":{}}}],["video",{"_index":1322,"title":{},"body":{"index.html":{}}}],["virtual_account",{"_index":1225,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["visit",{"_index":1309,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":1324,"title":{},"body":{"index.html":{}}}],["void",{"_index":152,"title":{},"body":{"classes/Base.html":{},"classes/HttpExceptionFilter.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["vultr",{"_index":366,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["wallet",{"_index":1222,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["watch",{"_index":1273,"title":{},"body":{"index.html":{}}}],["webhook",{"_index":1619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["webhookcontroller",{"_index":1616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["website",{"_index":1359,"title":{},"body":{"index.html":{}}}],["week",{"_index":1243,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["where('business_id",{"_index":886,"title":{},"body":{"injectables/OrdersService.html":{}}}],["whitelist",{"_index":1630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withfiletypes",{"_index":508,"title":{},"body":{"classes/FileFinder.html":{}}}],["workflow",{"_index":1617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["workflowforpropertypurchase",{"_index":1620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["working",{"_index":1307,"title":{},"body":{"index.html":{}}}],["working_directory",{"_index":311,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["workingdirectory",{"_index":386,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["world",{"_index":108,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":401,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"index.html":{}}}],["year",{"_index":1246,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["you'd",{"_index":1351,"title":{},"body":{"index.html":{}}}],["zone",{"_index":137,"title":{},"body":{"classes/Base.html":{},"classes/CreateTableForOrders1730365329511.html":{},"classes/IntegerPrimaryIdEntity.html":{},"classes/UuidPrimaryIdEntity.html":{}}}],["zoom",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AccessTokenExpiredException.html":{"url":"classes/AccessTokenExpiredException.html","title":"class - AccessTokenExpiredException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccessTokenExpiredException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/http/exceptions/access-token-expired.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/http/exceptions/access-token-expired.exception.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UnauthorizedException } from '@nestjs/common';\nimport { ErrorType } from '../../enums';\n\nexport class AccessTokenExpiredException extends UnauthorizedException {\n  constructor() {\n    super({\n      errorType: ErrorType.AccessTokenExpired,\n      message: 'Access token has expired',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nHealthModule\n\nHealthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HealthModule\n                        \n                        \n                            OrdersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { HealthModule } from './health/health.module';\nimport { DataSource, DataSourceOptions } from 'typeorm';\nimport { TypeOrmConfigService } from '@database/typeorm-config.service';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport {\n  appConfig,\n  databaseConfig,\n  mongoConfig,\n  taxConfig,\n} from '@config/index';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { OrdersModule } from '@modules/orders/orders.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [appConfig, databaseConfig, mongoConfig, taxConfig],\n      envFilePath: ['.env'],\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useClass: TypeOrmConfigService,\n      dataSourceFactory: async (options: DataSourceOptions) => {\n        return new DataSource(options).initialize();\n      },\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get('mongo.url', { infer: true }),\n      }),\n      inject: [ConfigService],\n    }),\n    HealthModule,\n    OrdersModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplicatonExistException.html":{"url":"classes/ApplicatonExistException.html","title":"class - ApplicatonExistException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplicatonExistException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/http/exceptions/application-exist.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/http/exceptions/application-exist.exception.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException } from '@nestjs/common';\nimport { ErrorType } from '@common/enums';\n\nexport class ApplicatonExistException extends ConflictException {\n  constructor() {\n    super({\n      errorType: ErrorType.TermSettingsExist,\n      message: `Application already exist`,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Base.html":{"url":"classes/Base.html","title":"class - Base","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Base\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/entities/base.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                __entity\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                setEntityName\n                            \n                            \n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        __entity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/common/entities/base.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at', type: 'timestamp with time zone', update: false, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/entities/base.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: 'deleted_at', type: 'timestamp with time zone', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/entities/base.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: 'updated_at', type: 'timestamp with time zone', onUpdate: 'now()', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/entities/base.entity.ts:27\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setEntityName\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityName()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @AfterLoad()\n                \n            \n\n                    \n                        \n                            Defined in src/common/entities/base.entity.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toJSON\n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/entities/base.entity.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { instanceToPlain } from 'class-transformer';\nimport {\n  AfterLoad,\n  BaseEntity,\n  CreateDateColumn,\n  DeleteDateColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\nexport class Base extends BaseEntity {\n  @CreateDateColumn({\n    name: 'created_at',\n    type: 'timestamp with time zone',\n    // default: 'now()',\n    update: false,\n    nullable: false,\n  })\n  createdAt: Date;\n\n  @UpdateDateColumn({\n    name: 'updated_at',\n    type: 'timestamp with time zone',\n    // default: 'now()',\n    onUpdate: 'now()',\n    nullable: false,\n  })\n  updatedAt: Date;\n\n  @DeleteDateColumn({\n    name: 'deleted_at',\n    type: 'timestamp with time zone',\n    nullable: true,\n  })\n  deletedAt: Date;\n\n  __entity?: string;\n\n  @AfterLoad()\n  setEntityName() {\n    this.__entity = this.constructor.name;\n  }\n\n  toJSON() {\n    return instanceToPlain(this);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClassNameExtractor.html":{"url":"classes/ClassNameExtractor.html","title":"class - ClassNameExtractor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClassNameExtractor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/class-name-extractor.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                extractClassNames\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        extractClassNames\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractClassNames(filePath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helpers/class-name-extractor.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as fs from \"fs\";\n\nexport class ClassNameExtractor {\n    // Function to extract class names from a TypeScript file\n    static extractClassNames(filePath: string): string[] {\n        const content = fs.readFileSync(filePath, 'utf8');\n        const classRegex = /class\\s+(\\w+)\\s+/g;\n        const classNames: string[] = [];\n        let match: RegExpExecArray | null;\n\n        // Extract class names using regular expression\n        while ((match = classRegex.exec(content)) !== null) {\n            classNames.push(match[1]);\n        }\n\n        return classNames;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderDto.html":{"url":"classes/CreateOrderDto.html","title":"class - CreateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/orders/dto/create-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                amount\n                            \n                            \n                                    \n                                    \n                                    \n                                businessId\n                            \n                            \n                                    \n                                    \n                                    \n                                departmentId\n                            \n                            \n                                    \n                                    \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 100, description: 'The amount of the order'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dto/create-order.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        businessId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '123e4567-e89b-12d3-a456-426614174000', description: 'The ID of the business that created the order'})@IsUUID()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dto/create-order.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        departmentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '123e4567-e89b-12d3-a456-426614174000', description: 'The ID of the department that created the order'})@IsUUID()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dto/create-order.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'pending', description: 'The status of the order'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dto/create-order.dto.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsNumber, IsString, IsUUID } from \"class-validator\";\n\nexport class CreateOrderDto {\n  @ApiProperty({\n    example: '123e4567-e89b-12d3-a456-426614174000',\n    description: 'The ID of the business that created the order',\n  })\n  @IsUUID()\n  @IsNotEmpty()\n  businessId: string;\n\n  @ApiProperty({\n    example: '123e4567-e89b-12d3-a456-426614174000',\n    description: 'The ID of the department that created the order',\n  })\n  @IsUUID()\n  @IsNotEmpty()\n  departmentId: string;\n\n  @ApiProperty({\n    example: 100.0,\n    description: 'The amount of the order',\n  })\n  @IsNotEmpty()\n  @IsNumber()\n  amount: number;\n\n  @ApiProperty({\n    example: 'pending',\n    description: 'The status of the order',\n  })\n  @IsNotEmpty()\n  @IsString()\n  status: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSchemaForSales1730363889037.html":{"url":"classes/CreateSchemaForSales1730363889037.html","title":"class - CreateSchemaForSales1730363889037","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSchemaForSales1730363889037\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1730363889037-create-schema-for-sales.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1730363889037-create-schema-for-sales.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1730363889037-create-schema-for-sales.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateSchemaForSales1730363889037 implements MigrationInterface {\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.createSchema('sale', true);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.dropSchema('sale', true);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTableForOrders1730365329511.html":{"url":"classes/CreateTableForOrders1730365329511.html","title":"class - CreateTableForOrders1730365329511","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTableForOrders1730365329511\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1730365329511-create-table-for-orders.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateTableForOrders1730365329511'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1730365329511-create-table-for-orders.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1730365329511-create-table-for-orders.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1730365329511-create-table-for-orders.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateTableForOrders1730365329511 implements MigrationInterface {\n  name = 'CreateTableForOrders1730365329511';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TYPE \"sale\".\"orders_status_enum\" AS ENUM('pending', 'completed', 'cancelled')`,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"sale\".\"orders\" (\"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"deleted_at\" TIMESTAMP WITH TIME ZONE, \"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"business_id\" uuid NOT NULL, \"customer_id\" uuid NOT NULL, \"amount\" numeric NOT NULL, \"status\" \"sale\".\"orders_status_enum\" NOT NULL DEFAULT 'pending', CONSTRAINT \"PK_710e2d4957aa5878dfe94e4ac2f\" PRIMARY KEY (\"id\"))`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE \"sale\".\"orders\"`);\n    await queryRunner.query(`DROP TYPE \"sale\".\"orders_status_enum\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomerExistException.html":{"url":"classes/CustomerExistException.html","title":"class - CustomerExistException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomerExistException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/http/exceptions/customer-exist.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in src/common/http/exceptions/customer-exist.exception.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException } from '@nestjs/common';\nimport { ErrorType } from '@common/enums';\n\nexport class CustomerExistException extends ConflictException {\n  constructor(name: string) {\n    super({\n      errorType: ErrorType.TermSettingsExist,\n      message: `Customer with ${name} already exist`,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultPagination.html":{"url":"interfaces/DefaultPagination.html","title":"interface - DefaultPagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DefaultPagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/libs/pagination/interfaces/default-pagination.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface designed to assign default parameters to pagination\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            defaultLimit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            defaultOrder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            defaultOrderDirection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            defaultPage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            defaultSkip\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxAllowedSize\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultLimit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultLimit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultOrder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultOrder:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultOrderDirection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultOrderDirection:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultPage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultSkip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultSkip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxAllowedSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxAllowedSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DefaultPagination {\n  defaultSkip?: number;\n  defaultPage?: number;\n  defaultLimit?: number;\n  defaultOrder?: any;\n  defaultOrderDirection?: string;\n  maxAllowedSize?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DisabledUserException.html":{"url":"classes/DisabledUserException.html","title":"class - DisabledUserException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DisabledUserException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/http/exceptions/disabled-user.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errorType: ErrorType)\n                    \n                \n                        \n                            \n                                Defined in src/common/http/exceptions/disabled-user.exception.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorType\n                                                  \n                                                        \n                                                                        ErrorType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UnauthorizedException } from '@nestjs/common';\nimport { ErrorType } from '../../enums';\n\nexport class DisabledUserException extends UnauthorizedException {\n  constructor(errorType: ErrorType) {\n    super({\n      errorType,\n      message: 'User not authorized to login',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnvironmentVariablesValidator.html":{"url":"classes/EnvironmentVariablesValidator.html","title":"class - EnvironmentVariablesValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnvironmentVariablesValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/app.config.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                API_PREFIX\n                            \n                            \n                                    \n                                    \n                                BACKEND_DOMAIN\n                            \n                            \n                                    \n                                    \n                                DESCRIPTION\n                            \n                            \n                                    \n                                    \n                                DOMAIN\n                            \n                            \n                                    \n                                    \n                                FALLBACK_LANGUAGE\n                            \n                            \n                                    \n                                    \n                                HEADER_LANGUAGE\n                            \n                            \n                                    \n                                    \n                                KEY\n                            \n                            \n                                    \n                                NAME\n                            \n                            \n                                    \n                                    \n                                NODE_ENV\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                PORT\n                            \n                            \n                                    \n                                    \n                                STORAGE_PATH\n                            \n                            \n                                    \n                                    \n                                VERSION\n                            \n                            \n                                    \n                                    \n                                WORKING_DIRECTORY\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        API_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/app.config.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BACKEND_DOMAIN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl({require_tld: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/app.config.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DESCRIPTION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/app.config.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DOMAIN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl({require_tld: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/app.config.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        FALLBACK_LANGUAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/app.config.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        HEADER_LANGUAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/app.config.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/app.config.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/app.config.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        NODE_ENV\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Environment\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(Environment)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/app.config.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(0)@Max(65535)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/app.config.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        STORAGE_PATH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/app.config.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        VERSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/app.config.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        WORKING_DIRECTORY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/app.config.ts:66\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { registerAs } from '@nestjs/config';\nimport { AppConfig } from './config.type';\nimport { validateConfig } from '@common/validators';\nimport {\n  IsEnum,\n  IsInt,\n  IsOptional,\n  IsString,\n  IsUrl,\n  Max,\n  Min,\n} from 'class-validator';\n\nenum Environment {\n  DEVELOPMENT = 'development',\n  STAGING = 'staging',\n  PRODUCTION = 'production',\n  TEST = 'test',\n  PROVISION = 'provision',\n  QA = 'qa',\n  UAT = 'uat',\n  DEMO = 'demo',\n  LOCAL = 'local',\n  DOCKER = 'docker',\n  DOCKER_COMPOSE = 'docker-compose',\n  KUBERNETES = 'kubernetes',\n  OPENSHIFT = 'openshift',\n  HEROKU = 'heroku',\n  AWS = 'aws',\n  AZURE = 'azure',\n  GOOGLE_CLOUD = 'google-cloud',\n  DIGITAL_OCEAN = 'digital-ocean',\n  LINODE = 'linode',\n  VULTR = 'vultr',\n  OTHER = 'other',\n}\n\nclass EnvironmentVariablesValidator {\n  @IsEnum(Environment)\n  @IsOptional()\n  NODE_ENV: Environment;\n\n  @IsString()\n  NAME: string;\n\n  @IsString()\n  @IsOptional()\n  DESCRIPTION: string;\n\n  @IsString()\n  @IsOptional()\n  VERSION: string;\n\n  @IsInt()\n  @Min(0)\n  @Max(65535)\n  @IsOptional()\n  PORT: number;\n\n  @IsString()\n  @IsOptional()\n  KEY: string;\n\n  @IsString()\n  @IsOptional()\n  WORKING_DIRECTORY: string;\n\n  @IsUrl({ require_tld: false })\n  @IsOptional()\n  BACKEND_DOMAIN: string;\n\n  @IsUrl({ require_tld: false })\n  @IsOptional()\n  DOMAIN: string;\n\n  @IsString()\n  @IsOptional()\n  API_PREFIX: string;\n\n  @IsString()\n  @IsOptional()\n  FALLBACK_LANGUAGE: string;\n\n  @IsString()\n  @IsOptional()\n  HEADER_LANGUAGE: string;\n\n  @IsString()\n  @IsOptional()\n  STORAGE_PATH: string;\n}\n\nexport default registerAs('app', () => {\n  validateConfig(process.env, EnvironmentVariablesValidator);\n  return {\n    nodeEnv: process.env.NODE_ENV || Environment.DEVELOPMENT,\n    name: process.env.NAME || 'app',\n    description: process.env.DESCRIPTION || 'app',\n    version: process.env.VERSION || '1.0',\n    port: process.env.PORT ? parseInt(process.env.PORT, 10) : 3000,\n    key: process.env.KEY || '',\n    workingDirectory: process.env.WORKING_DIRECTORY || process.cwd(),\n    backendDomain: process.env.BACKEND_DOMAIN ?? 'http://localhost',\n    domain: process.env.DOMAIN || 'http://localhost',\n    apiPrefix: process.env.API_PREFIX || 'api',\n    fallbackLanguage: process.env.FALLBACK_LANGUAGE || 'en',\n    headerLanguage: process.env.HEADER_LANGUAGE || 'x-custom-lang',\n    storagePath: process.env.STORAGE_PATH || '/',\n  };\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnvironmentVariablesValidator-1.html":{"url":"classes/EnvironmentVariablesValidator-1.html","title":"class - EnvironmentVariablesValidator-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnvironmentVariablesValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/database.config.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                DATABASE_CA\n                            \n                            \n                                    \n                                    \n                                DATABASE_CERT\n                            \n                            \n                                    \n                                    \n                                DATABASE_HOST\n                            \n                            \n                                    \n                                    \n                                DATABASE_KEY\n                            \n                            \n                                    \n                                    \n                                DATABASE_MAX_CONNECTIONS\n                            \n                            \n                                    \n                                    \n                                DATABASE_NAME\n                            \n                            \n                                    \n                                    \n                                    \n                                DATABASE_PASSWORD\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                DATABASE_PORT\n                            \n                            \n                                    \n                                    \n                                DATABASE_REJECT_UNAUTHORIZED\n                            \n                            \n                                    \n                                    \n                                DATABASE_SSL_ENABLED\n                            \n                            \n                                    \n                                    \n                                DATABASE_SYNCHRONIZE\n                            \n                            \n                                    \n                                    \n                                DATABASE_TYPE\n                            \n                            \n                                    \n                                    \n                                DATABASE_URL\n                            \n                            \n                                    \n                                    \n                                DATABASE_USERNAME\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_CA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/database.config.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_CERT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/database.config.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_HOST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateIf(envValues => )@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/database.config.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/database.config.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_MAX_CONNECTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/database.config.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateIf(envValues => )@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/database.config.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        DATABASE_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateIf(envValues => )@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/database.config.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        DATABASE_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateIf(envValues => )@IsInt()@Min(0)@Max(65535)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/database.config.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_REJECT_UNAUTHORIZED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/database.config.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_SSL_ENABLED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/database.config.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_SYNCHRONIZE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/database.config.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateIf(envValues => )@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/database.config.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateIf(envValues => envValues.DATABASE_URL)@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/database.config.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_USERNAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateIf(envValues => )@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/database.config.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { registerAs } from '@nestjs/config';\nimport { DatabaseConfig } from './config.type';\nimport {\n  IsOptional,\n  IsInt,\n  Min,\n  Max,\n  IsString,\n  ValidateIf,\n  IsBoolean,\n} from 'class-validator';\nimport validateConfig from '@common/validators/validate-config';\n\nclass EnvironmentVariablesValidator {\n  @ValidateIf((envValues) => envValues.DATABASE_URL)\n  @IsString()\n  DATABASE_URL: string;\n\n  @ValidateIf((envValues) => !envValues.DATABASE_URL)\n  @IsString()\n  DATABASE_TYPE: string;\n\n  @ValidateIf((envValues) => !envValues.DATABASE_URL)\n  @IsString()\n  DATABASE_HOST: string;\n\n  @ValidateIf((envValues) => !envValues.DATABASE_URL)\n  @IsInt()\n  @Min(0)\n  @Max(65535)\n  @IsOptional()\n  DATABASE_PORT: number;\n\n  @ValidateIf((envValues) => !envValues.DATABASE_URL)\n  @IsString()\n  @IsOptional()\n  DATABASE_PASSWORD: string;\n\n  @ValidateIf((envValues) => !envValues.DATABASE_URL)\n  @IsString()\n  DATABASE_NAME: string;\n\n  @ValidateIf((envValues) => !envValues.DATABASE_URL)\n  @IsString()\n  DATABASE_USERNAME: string;\n\n  @IsBoolean()\n  @IsOptional()\n  DATABASE_SYNCHRONIZE: boolean;\n\n  @IsInt()\n  @IsOptional()\n  DATABASE_MAX_CONNECTIONS: number;\n\n  @IsBoolean()\n  @IsOptional()\n  DATABASE_SSL_ENABLED: boolean;\n\n  @IsBoolean()\n  @IsOptional()\n  DATABASE_REJECT_UNAUTHORIZED: boolean;\n\n  @IsString()\n  @IsOptional()\n  DATABASE_CA: string;\n\n  @IsString()\n  @IsOptional()\n  DATABASE_KEY: string;\n\n  @IsString()\n  @IsOptional()\n  DATABASE_CERT: string;\n}\n\nexport default registerAs('database', () => {\n  validateConfig(process.env, EnvironmentVariablesValidator);\n\n  return {\n    url: process.env.DATABASE_URL,\n    type: process.env.DATABASE_TYPE,\n    host: process.env.DATABASE_HOST,\n    port: process.env.DATABASE_PORT\n      ? parseInt(process.env.DATABASE_PORT, 10)\n      : 5432,\n    password: process.env.DATABASE_PASSWORD,\n    name: process.env.DATABASE_NAME,\n    username: process.env.DATABASE_USERNAME,\n    synchronize: process.env.DATABASE_SYNCHRONIZE === 'true',\n    maxConnections: process.env.DATABASE_MAX_CONNECTIONS\n      ? parseInt(process.env.DATABASE_MAX_CONNECTIONS, 10)\n      : 100,\n    sslEnabled: process.env.DATABASE_SSL_ENABLED === 'true',\n    rejectUnauthorized: process.env.DATABASE_REJECT_UNAUTHORIZED === 'true',\n    ca: process.env.DATABASE_CA,\n    key: process.env.DATABASE_KEY,\n    cert: process.env.DATABASE_CERT,\n  };\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnvironmentVariablesValidator-2.html":{"url":"classes/EnvironmentVariablesValidator-2.html","title":"class - EnvironmentVariablesValidator-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnvironmentVariablesValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/mongo.config.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                MONGO_URL\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        MONGO_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/mongo.config.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\nimport { registerAs } from '@nestjs/config';\nimport { validateConfig } from '@common/validators';\nimport { MongoConfig } from '@config/config.type';\n\nclass EnvironmentVariablesValidator {\n  @IsString()\n  MONGO_URL: string;\n}\n\nexport default registerAs('mongo', () => {\n  validateConfig(process.env, EnvironmentVariablesValidator);\n\n  return {\n    type: 'mongodb',\n    url: process.env.MONGO_URL,\n  };\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnvironmentVariablesValidator-3.html":{"url":"classes/EnvironmentVariablesValidator-3.html","title":"class - EnvironmentVariablesValidator-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnvironmentVariablesValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/tax.config.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                TAX_URL\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        TAX_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/tax.config.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\nimport { validateConfig } from '@common/validators';\nimport { registerAs } from '@nestjs/config';\nimport { TaxConfig } from '@config/config.type';\n\nclass EnvironmentVariablesValidator {\n  @IsString()\n  TAX_URL: string;\n}\n\nexport default registerAs('tax', () => {\n  validateConfig(process.env, EnvironmentVariablesValidator);\n\n  return {\n    url: process.env.TAX_URL,\n  };\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileFinder.html":{"url":"classes/FileFinder.html","title":"class - FileFinder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileFinder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/file-finder.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                findFilesWithExtension\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        findFilesWithExtension\n                        \n                    \n                \n            \n            \n                \n                        \n                    findFilesWithExtension(dir: string, ext: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helpers/file-finder.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dir\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ext\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as fs from \"fs\";\nimport * as path from \"path\";\n\nexport class FileFinder {\n\n    // Function to recursively search for files with a specific extension\n    static findFilesWithExtension(dir: string, ext: string): string[] {\n        let files: string[] = [];\n\n        // Get all files and subdirectories in the current directory\n        const entries = fs.readdirSync(dir, { withFileTypes: true });\n\n        // Loop through each entry\n        for (const entry of entries) {\n            const fullPath = path.join(dir, entry.name);\n\n            // If it's a directory, recursively call findFilesWithExtension\n            if (entry.isDirectory()) {\n                files = files.concat(FileFinder.findFilesWithExtension(fullPath, ext));\n            } else {\n                // If it's a file and has the desired extension, add it to the files array\n                if (entry.name.endsWith(ext)) {\n                    files.push(fullPath);\n                }\n            }\n        }\n\n        return files;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForeignKeyConflictException.html":{"url":"classes/ForeignKeyConflictException.html","title":"class - ForeignKeyConflictException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForeignKeyConflictException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/http/exceptions/foreign-key-conflict.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/http/exceptions/foreign-key-conflict.exception.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException } from '@nestjs/common';\nimport { ErrorType } from '../../enums';\n\nexport class ForeignKeyConflictException extends ConflictException {\n  constructor() {\n    super({\n      errorType: ErrorType.ForeignKeyConflict,\n      message: `Foreign key conflict`,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GenerateCharacters.html":{"url":"classes/GenerateCharacters.html","title":"class - GenerateCharacters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GenerateCharacters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/generate-characters.helper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                pin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        pin\n                        \n                    \n                \n            \n            \n                \n                        \n                    pin(length: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helpers/generate-characters.helper.ts:3\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                length\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class GenerateCharacters {\n  // Pin: 1234\n  static pin(length: number): string {\n    return Math.random()\n      .toString()\n      .slice(2, length + 2);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HashHelper.html":{"url":"classes/HashHelper.html","title":"class - HashHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HashHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/hash.helper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                salt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                compare\n                            \n                            \n                                    Static\n                                    Async\n                                encrypt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        salt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/common/helpers/hash.helper.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        compare\n                        \n                    \n                \n            \n            \n                \n                        \n                    compare(plain: string, encrypted: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helpers/hash.helper.ts:21\n                        \n                    \n\n\n            \n                \n                        Compares encrypted and provided string\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                plain\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                encrypted\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Promise Returns Boolean if provided string and encrypted string are equal\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        encrypt\n                        \n                    \n                \n            \n            \n                \n                        \n                    encrypt(str: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helpers/hash.helper.ts:11\n                        \n                    \n\n\n            \n                \n                        Encrypts plain string\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Promise Returns encrypted\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as bcrypt from 'bcryptjs';\n\nexport class HashHelper {\n  private static salt = 10;\n\n  /**\n   * Encrypts plain string\n   * @param str {string}\n   * @returns Promise Returns encrypted\n   */\n  public static async encrypt(str: string): Promise {\n    return await bcrypt.hash(str, this.salt);\n  }\n\n  /**\n   * Compares encrypted and provided string\n   * @param plain {string}\n   * @param encrypted {string}\n   * @returns Promise Returns Boolean if provided string and encrypted string are equal\n   */\n  public static async compare(plain: string, encrypted: string): Promise {\n    return await bcrypt.compare(plain, encrypted);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n                    \n                        \n                            Defined in src/health/health.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\nimport {\n  DiskHealthIndicator,\n  HealthCheck,\n  HealthCheckService,\n  MemoryHealthIndicator,\n} from '@nestjs/terminus';\nimport { AllConfigType } from '@config/config.type';\nimport { ConfigService } from '@nestjs/config';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Health')\n@Controller('health')\nexport class HealthController {\n  constructor(\n    private healthCheckService: HealthCheckService,\n    private memoryHealthIndicator: MemoryHealthIndicator,\n    private diskHealthIndicator: DiskHealthIndicator,\n    private configService: ConfigService,\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  check() {\n    return this.healthCheckService.check([\n      () =>\n        this.memoryHealthIndicator.checkHeap('memory heap', 300 * 1024 * 1024),\n      // The process should not have more than 300MB RSS memory allocated\n      () =>\n        this.memoryHealthIndicator.checkRSS('memory RSS', 300 * 1024 * 1024),\n      // the used disk storage should not exceed the 50% of the available space\n      () =>\n        this.diskHealthIndicator.checkStorage('disk health', {\n          thresholdPercent: 0.5,\n          path: this.configService.get('app.storagePath', { infer: true }),\n        }),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HealthController } from './health.controller';\nimport { TerminusModule } from '@nestjs/terminus';\n\n@Module({\n  controllers: [HealthController],\n  imports: [TerminusModule],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/http/http-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/http/http-exception.filter.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        HttpException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException } from '@nestjs/common';\nimport { HttpErrorType } from './http-error-type';\nimport { ErrorType } from '../enums';\nimport { Response } from 'express';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const status = +exception.getStatus();\n\n    let { errorType, message } = exception.getResponse() as {\n      errorType: ErrorType | string;\n      message: string | string[];\n    };\n\n    if (!errorType) {\n      errorType = HttpErrorType[status];\n      errorType = errorType ?? 'UNEXPECTED_ERROR';\n    }\n\n    response.status(status).json({\n      statusCode: status,\n      errorType,\n      message,\n      timestamp: new Date().getTime(),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpResponseInterceptor.html":{"url":"injectables/HttpResponseInterceptor.html","title":"injectable - HttpResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpResponseInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/http/response.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/http/response.interceptor.ts:19\n                        \n                    \n\n\n            \n                \n                        Intercept the request and add the timestamp\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                :Response, timestamp: string }\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { ResponseDto } from '../dtos/response.dto';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class HttpResponseInterceptor implements NestInterceptor {\n  /**\n   * Intercept the request and add the timestamp\n   * @param context {ExecutionContext}\n   * @param next {CallHandler}\n   * @returns { payload:Response, timestamp: string }\n   */\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    const timestamp = new Date().getTime();\n    return next.handle().pipe(\n      map((payload) => {\n        return { payload, timestamp };\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IntegerPrimaryIdEntity.html":{"url":"classes/IntegerPrimaryIdEntity.html","title":"class - IntegerPrimaryIdEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IntegerPrimaryIdEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/entities/integer-primary-id.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    Optional\n                                __entity\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                setEntityName\n                            \n                            \n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({name: 'id', type: 'integer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/entities/integer-primary-id.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        __entity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Base\n\n                            \n                        \n                    \n                        \n                                Defined in         Base:36\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at', type: 'timestamp with time zone', update: false, nullable: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Base\n\n                            \n                        \n                    \n                        \n                                Defined in         Base:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: 'deleted_at', type: 'timestamp with time zone', nullable: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Base\n\n                            \n                        \n                    \n                        \n                                Defined in         Base:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: 'updated_at', type: 'timestamp with time zone', onUpdate: 'now()', nullable: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Base\n\n                            \n                        \n                    \n                        \n                                Defined in         Base:27\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setEntityName\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityName()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @AfterLoad()\n                \n            \n\n                    \n                        \n                            Inherited from         Base\n\n                        \n                    \n                    \n                        \n                                Defined in         Base:39\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toJSON\n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n                    \n                        \n                            Inherited from         Base\n\n                        \n                    \n                    \n                        \n                                Defined in         Base:43\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PrimaryGeneratedColumn } from 'typeorm';\nimport { Base } from '@common/entities/base.entity';\n\nexport class IntegerPrimaryIdEntity extends Base {\n  @PrimaryGeneratedColumn({ name: 'id', type: 'integer' })\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidCredentialsException.html":{"url":"classes/InvalidCredentialsException.html","title":"class - InvalidCredentialsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidCredentialsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/http/exceptions/invalid-credentials.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/http/exceptions/invalid-credentials.exception.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UnauthorizedException } from '@nestjs/common';\nimport { ErrorType } from '../../enums';\n\nexport class InvalidCredentialsException extends UnauthorizedException {\n  constructor() {\n    super({\n      errorType: ErrorType.InvalidCredentials,\n      message: 'Invalid credentials',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidCurrentPasswordException.html":{"url":"classes/InvalidCurrentPasswordException.html","title":"class - InvalidCurrentPasswordException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidCurrentPasswordException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/http/exceptions/invalid-current-password.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ForbiddenException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/http/exceptions/invalid-current-password.exception.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ForbiddenException } from '@nestjs/common';\nimport { ErrorType } from '../../enums';\n\nexport class InvalidCurrentPasswordException extends ForbiddenException {\n  constructor() {\n    super({\n      errorType: ErrorType.InvalidCurrentPassword,\n      message: 'The current password is invalid',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidCurrentPinException.html":{"url":"classes/InvalidCurrentPinException.html","title":"class - InvalidCurrentPinException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidCurrentPinException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/http/exceptions/InvalidCurrentPinException.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ForbiddenException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/http/exceptions/InvalidCurrentPinException.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ForbiddenException } from '@nestjs/common';\nimport { ErrorType } from '@common/enums';\n\nexport class InvalidCurrentPinException extends ForbiddenException {\n  constructor() {\n    super({\n      errorType: ErrorType.InvalidCurrentPin,\n      message: 'The current pin is invalid.',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidTokenException.html":{"url":"classes/InvalidTokenException.html","title":"class - InvalidTokenException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidTokenException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/http/exceptions/invalid-token.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/http/exceptions/invalid-token.exception.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UnauthorizedException } from '@nestjs/common';\nimport { ErrorType } from '../../enums';\n\nexport class InvalidTokenException extends UnauthorizedException {\n  constructor() {\n    super({ errorType: ErrorType.InvalidToken });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IsExist.html":{"url":"injectables/IsExist.html","title":"injectable - IsExist","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IsExist\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/validators/is-exists.validator.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataSource: DataSource)\n                    \n                \n                        \n                            \n                                Defined in src/common/validators/is-exists.validator.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(value: string, validationArguments: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/validators/is-exists.validator.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                validationArguments\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n} from 'class-validator';\nimport { DataSource } from 'typeorm';\nimport { InjectDataSource } from '@nestjs/typeorm';\nimport { ValidationArguments } from 'class-validator/types/validation/ValidationArguments';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\n@ValidatorConstraint({ name: 'IsExist', async: true })\nexport class IsExist implements ValidatorConstraintInterface {\n  constructor(\n    @InjectDataSource()\n    private dataSource: DataSource,\n  ) {}\n\n  async validate(value: string, validationArguments: ValidationArguments) {\n    const repository = validationArguments.constraints[0];\n    const pathToProperty = validationArguments.constraints[1];\n    const entity: unknown = await this.dataSource\n      .getRepository(repository)\n      .findOne({\n        where: {\n          [pathToProperty ? pathToProperty : validationArguments.property]:\n            pathToProperty ? value?.[pathToProperty] : value,\n        },\n      });\n\n    return Boolean(entity);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IsNotExist.html":{"url":"injectables/IsNotExist.html","title":"injectable - IsNotExist","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IsNotExist\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/validators/is-not-exists.validator.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataSource: DataSource)\n                    \n                \n                        \n                            \n                                Defined in src/common/validators/is-not-exists.validator.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(value: string, validationArguments: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/validators/is-not-exists.validator.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                validationArguments\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n} from 'class-validator';\nimport { DataSource } from 'typeorm';\nimport { ValidationArguments } from 'class-validator/types/validation/ValidationArguments';\nimport { Injectable } from '@nestjs/common';\nimport { InjectDataSource } from '@nestjs/typeorm';\n\ntype ValidationEntity =\n  | {\n      id?: number | string;\n    }\n  | undefined;\n\n@Injectable()\n@ValidatorConstraint({ name: 'IsNotExist', async: true })\nexport class IsNotExist implements ValidatorConstraintInterface {\n  constructor(\n    @InjectDataSource()\n    private dataSource: DataSource,\n  ) {}\n\n  async validate(value: string, validationArguments: ValidationArguments) {\n    const repository = validationArguments.constraints[0] as string;\n    const currentValue = validationArguments.object as ValidationEntity;\n    const entity = (await this.dataSource.getRepository(repository).findOne({\n      where: {\n        [validationArguments.property]: value,\n      },\n    })) as ValidationEntity;\n\n    if (entity?.id === currentValue?.id) {\n      return true;\n    }\n\n    return !entity;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggingInterceptor.html":{"url":"injectables/LoggingInterceptor.html","title":"injectable - LoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/logging.interceptors.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/interceptors/logging.interceptors.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/interceptors/logging.interceptors.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(LoggingInterceptor.name)\n                    \n                \n                    \n                        \n                                Defined in src/common/interceptors/logging.interceptors.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Logger,\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class LoggingInterceptor implements NestInterceptor {\n  private readonly logger = new Logger(LoggingInterceptor.name);\n\n  constructor() {}\n\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const url = context.getArgByIndex(0).originalUrl;\n    this.logger.log(`Before ${url}`);\n\n    const now = Date.now();\n    return next.handle().pipe(\n      tap(async () => {\n        this.logger.log(`After ${url}... ${Date.now() - now}ms`);\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Order.html":{"url":"entities/Order.html","title":"entity - Order","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/orders/entities/order.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amount\n                            \n                            \n                                    \n                                businessId\n                            \n                            \n                                    \n                                departmentId\n                            \n                            \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'amount', type: 'decimal'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/entities/order.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        businessId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'business_id', type: 'uuid', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/entities/order.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        departmentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'customer_id', type: 'uuid', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/entities/order.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'status', type: 'enum', enum: undefined, default: 'pending'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/entities/order.entity.ts:32\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity } from 'typeorm';\nimport { UuidPrimaryIdEntity } from '@common/entities';\n\n@Entity({ schema: 'sale', name: 'orders' })\nexport class Order extends UuidPrimaryIdEntity {\n  @Column({\n    name: 'business_id',\n    type: 'uuid',\n    nullable: false,\n  })\n  businessId: string;\n\n  @Column({\n    name: 'customer_id',\n    type: 'uuid',\n    nullable: false,\n  })\n  departmentId: string;\n\n  @Column({\n    name: 'amount',\n    type: 'decimal',\n  })\n  amount: number;\n\n  @Column({\n    name: 'status',\n    type: 'enum',\n    enum: ['pending', 'completed', 'cancelled'],\n    default: 'pending',\n  })\n  status: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderMapper.html":{"url":"classes/OrderMapper.html","title":"class - OrderMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/orders/order.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toDto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toDto\n                        \n                    \n                \n            \n            \n                \n                        \n                    toDto(entity: Order)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/orders/order.mapper.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                            Order\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         OrderResponseDto\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { OrderResponseDto } from '@modules/orders/dto/order-response.dto';\nimport { Order } from '@modules/orders/entities/order.entity';\n\nexport class OrderMapper {\n  static toDto(entity: Order): OrderResponseDto {\n    const dto = new OrderResponseDto();\n    dto.id = entity.id;\n    dto.businessId = entity.businessId;\n    dto.departmentId = entity.departmentId;\n    dto.amount = entity.amount;\n    dto.status = entity.status;\n    dto.createdAt = entity.createdAt;\n    return dto;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderResponseDto.html":{"url":"classes/OrderResponseDto.html","title":"class - OrderResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/orders/dto/order-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amount\n                            \n                            \n                                    \n                                businessId\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                departmentId\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dto/order-response.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        businessId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dto/order-response.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dto/order-response.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        departmentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dto/order-response.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dto/order-response.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dto/order-response.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class OrderResponseDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  businessId: string;\n\n  @ApiProperty()\n  departmentId: string;\n\n  @ApiProperty()\n  amount: number;\n\n  @ApiProperty()\n  status: string;\n\n  @ApiProperty()\n  createdAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrdersController.html":{"url":"controllers/OrdersController.html","title":"controller - OrdersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrdersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/orders/orders.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                calculateCreditScore\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                createOrder\n                            \n                            \n                                    \n                                    \n                                    \n                                getOrderDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        calculateCreditScore\n                        \n                    \n                \n            \n            \n                \n                        \n                    calculateCreditScore(businessId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({description: 'Calculate credit score'})@ApiOkResponse()@Get('business/:businessId/credit-score')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/orders/orders.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                businessId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        createOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrder(createOrderDto: CreateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({description: 'Create order'})@ApiGlobalResponse(OrderResponseDto)@ApiConflictResponse({description: 'Order already exist'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/orders/orders.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createOrderDto\n                                            \n                                                            CreateOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getOrderDetails\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOrderDetails(businessId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({description: 'Get order details'})@ApiOkResponse()@Get('business/:businessId/details')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/orders/orders.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                businessId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { OrdersService } from './orders.service';\nimport { CreateOrderDto } from './dto/create-order.dto';\nimport { ApiConflictResponse, ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\nimport { ApiGlobalResponse } from '@common/decorators';\nimport { OrderResponseDto } from '@modules/orders/dto/order-response.dto';\n\n@ApiTags('Orders')\n@Controller({\n  path: 'orders',\n  version: '1',\n})\nexport class OrdersController {\n  constructor(private readonly ordersService: OrdersService) {}\n\n  @ApiOperation({ description: 'Create order' })\n  @ApiGlobalResponse(OrderResponseDto)\n  @ApiConflictResponse({ description: 'Order already exist' })\n  @Post()\n  createOrder(@Body(ValidationPipe) createOrderDto: CreateOrderDto) {\n    return this.ordersService.createOrder(createOrderDto);\n  }\n\n  @ApiOperation({ description: 'Get order details' })\n  @ApiOkResponse()\n  @Get('business/:businessId/details')\n  getOrderDetails(@Param('businessId') businessId: string) {\n    return this.ordersService.getOrderDetails(businessId);\n  }\n\n  @ApiOperation({ description: 'Calculate credit score' })\n  @ApiOkResponse()\n  @Get('business/:businessId/credit-score')\n  calculateCreditScore(@Param('businessId') businessId: string) {\n    return this.ordersService.calculateCreditScore(businessId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrdersModule.html":{"url":"modules/OrdersModule.html","title":"module - OrdersModule","body":"\n                   \n\n\n\n\n    Modules\n    OrdersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_providers\n\n\n\n\nOrdersService\n\nOrdersService\n\n\n\nOrdersModule\n\nOrdersModule\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\nTaxService\n\nTaxService\n\nOrdersModule -->\n\nTaxService->OrdersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/orders/orders.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrdersService\n                        \n                        \n                            TaxService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrdersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrdersService } from './orders.service';\nimport { OrdersController } from './orders.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Order } from '@modules/orders/entities/order.entity';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { OrderSchema } from '@modules/orders/schemas/order.schema';\nimport { TaxService } from '@modules/orders/tax.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Order]),\n    MongooseModule.forFeature([{ name: 'Order', schema: OrderSchema }]),\n  ],\n  controllers: [OrdersController],\n  providers: [OrdersService, TaxService],\n})\nexport class OrdersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrdersService.html":{"url":"injectables/OrdersService.html","title":"injectable - OrdersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrdersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/orders/orders.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                calculateCreditScore\n                            \n                            \n                                    Async\n                                createOrder\n                            \n                            \n                                    Async\n                                getOrderDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orderRepository: Repository, orderModel: Model, taxService: TaxService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/orders/orders.service.ts:15\n                            \n                        \n\n                \n                    \n                            Constructs the OrdersService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        orderRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe repository for Order entities.\n\n\n                                                        \n                                                \n                                                \n                                                        orderModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Mongoose model for Order documents.\n\n\n                                                        \n                                                \n                                                \n                                                        taxService\n                                                  \n                                                        \n                                                                        TaxService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe service for handling tax-related operations.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        calculateCreditScore\n                        \n                    \n                \n            \n            \n                \n                        \n                    calculateCreditScore(businessId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/orders/orders.service.ts:73\n                        \n                    \n\n\n            \n                \n                        Calculates the credit score for a specific business.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                businessId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the business.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                An object containing the credit score.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrder(createOrderDto: CreateOrderDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/orders/orders.service.ts:35\n                        \n                    \n\n\n            \n                \n                        Creates a new order.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createOrderDto\n                                            \n                                                            CreateOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing order details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The created order as a DTO.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOrderDetails\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOrderDetails(businessId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/orders/orders.service.ts:55\n                        \n                    \n\n\n            \n                \n                        Retrieves order details for a specific business.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                businessId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the business.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                An object containing the total number of orders and the total amount.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(OrdersService.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/orders.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\n\nimport { OrderDocument } from '@modules/orders/schemas/order.schema';\nimport { Order } from '@modules/orders/entities/order.entity';\nimport { CreateOrderDto } from '@modules/orders/dto/create-order.dto';\nimport { OrderMapper } from '@modules/orders/order.mapper';\nimport { TaxService } from '@modules/orders/tax.service';\n\n@Injectable()\nexport class OrdersService {\n  private readonly logger = new Logger(OrdersService.name);\n\n  /**\n   * Constructs the OrdersService.\n   * @param orderRepository - The repository for Order entities.\n   * @param orderModel - The Mongoose model for Order documents.\n   * @param taxService - The service for handling tax-related operations.\n   */\n  constructor(\n    @InjectRepository(Order)\n    private orderRepository: Repository,\n    @InjectModel('Order') private orderModel: Model,\n    private taxService: TaxService,\n  ) {}\n\n  /**\n   * Creates a new order.\n   * @param createOrderDto - The data transfer object containing order details.\n   * @returns The created order as a DTO.\n   */\n  async createOrder(createOrderDto: CreateOrderDto) {\n    const orderEntity = this.orderRepository.create(createOrderDto);\n    const order = await this.orderRepository.save(orderEntity);\n    await this.orderModel.create(createOrderDto);\n    this.taxService\n      .logTaxData(createOrderDto)\n      .then((response) => {\n        this.logger.log('Tax data logged', response);\n      })\n      .catch((error) => {\n        this.logger.error('Error logging tax data', error);\n      });\n    return OrderMapper.toDto(order);\n  }\n\n  /**\n   * Retrieves order details for a specific business.\n   * @param businessId - The ID of the business.\n   * @returns An object containing the total number of orders and the total amount.\n   */\n  async getOrderDetails(businessId: string) {\n    const totalOrders = await this.orderRepository.count({\n      where: { businessId },\n    });\n    const totalAmount = await this.orderRepository\n      .createQueryBuilder()\n      .select('SUM(amount)', 'sum')\n      .where('business_id = :businessId', { businessId })\n      .getRawOne();\n\n    return { totalOrders, totalAmount };\n  }\n\n  /**\n   * Calculates the credit score for a specific business.\n   * @param businessId - The ID of the business.\n   * @returns An object containing the credit score.\n   */\n  async calculateCreditScore(businessId: string) {\n    const orders = await this.orderModel.find({ businessId }).exec();\n    return { score: Math.min(100, orders.length * 10) };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pagination.html":{"url":"classes/Pagination.html","title":"class - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/libs/pagination/pagination.helper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                of\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        of\n                        \n                    \n                \n            \n            \n                \n                        \n                    of(undefined: PaginationRequest, totalRecords: number, dtos: T[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/libs/pagination/pagination.helper.ts:12\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Return pagination response\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            PaginationRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                totalRecords\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dtos\n                                            \n                                                        T[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PaginationResponseDto\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PaginationResponseDto } from './pagination-response.dto';\nimport { PaginationRequest } from './interfaces';\n\nexport class Pagination {\n  /**\n   * Return pagination response\n   * @param PaginationRequest {PaginationRequest}\n   * @param totalRecords {number}\n   * @param dtos {t[]}\n   * @returns {PaginationResponseDto}\n   */\n  static of(\n    { limit, page, skip }: PaginationRequest,\n    totalRecords: number,\n    dtos: T[],\n  ): PaginationResponseDto {\n    const totalPages =\n      Math.floor(totalRecords / limit) + (totalRecords % limit > 0 ? 1 : 0);\n    const currentPage = +page > 0 ? +page : 1;\n    const hasNext = currentPage \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginationRequest.html":{"url":"interfaces/PaginationRequest.html","title":"interface - PaginationRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginationRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/libs/pagination/interfaces/pagination-request.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface intended for requesting results paginated\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            limit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            order\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            page\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            params\n                                        \n                                \n                                \n                                        \n                                            skip\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The index of the page where the pagination should start from.\nIt's intended for the same purpose that skip, but the latter represents an amount of\nrecords that should be skipped.\nShould be used only when needed to handle the pagination by the current page index.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        params:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PaginationRequest {\n  // Number of records to skip (where the pagination shall start)\n  skip: number;\n  /**\n   * The index of the page where the pagination should start from.\n   *\n   * It's intended for the same purpose that `skip`, but the latter represents an amount of\n   * records that should be skipped.\n   *\n   * Should be used only when needed to handle the pagination by the current page index.\n   */\n  page?: number;\n\n  // Page size\n  limit: number;\n\n  // Sort order\n  order?: { [field: string]: 'ASC' | 'DESC' };\n\n  // Other params of type T\n  params?: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationResponseDto.html":{"url":"classes/PaginationResponseDto.html","title":"class - PaginationResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/libs/pagination/pagination-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                content\n                            \n                            \n                                    \n                                currentPage\n                            \n                            \n                                    \n                                hasNext\n                            \n                            \n                                    \n                                payloadSize\n                            \n                            \n                                    \n                                skippedRecords\n                            \n                            \n                                    \n                                totalPages\n                            \n                            \n                                    \n                                totalRecords\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/libs/pagination/pagination-response.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/libs/pagination/pagination-response.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hasNext\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/libs/pagination/pagination-response.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        payloadSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/libs/pagination/pagination-response.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skippedRecords\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/libs/pagination/pagination-response.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        totalPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/libs/pagination/pagination-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        totalRecords\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/libs/pagination/pagination-response.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class PaginationResponseDto {\n  @ApiProperty({ example: 1 })\n  currentPage: number;\n  @ApiProperty({ example: 0 })\n  skippedRecords: number;\n  @ApiProperty({ example: 1 })\n  totalPages: number;\n  @ApiProperty({ example: false })\n  hasNext: boolean;\n  @ApiProperty()\n  content: T[];\n  @ApiProperty({ example: 1 })\n  payloadSize: number;\n  @ApiProperty({ example: 1 })\n  totalRecords: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PermissionExistsException.html":{"url":"classes/PermissionExistsException.html","title":"class - PermissionExistsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PermissionExistsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/http/exceptions/permission-exists.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(slug: string)\n                    \n                \n                        \n                            \n                                Defined in src/common/http/exceptions/permission-exists.exception.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        slug\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException } from '@nestjs/common';\nimport { ErrorType } from '../../enums';\n\nexport class PermissionExistsException extends ConflictException {\n  constructor(slug: string) {\n    super({\n      errorType: ErrorType.PermissionExists,\n      message: `There's a permission with slug '${slug}'`,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshTokenExpiredException.html":{"url":"classes/RefreshTokenExpiredException.html","title":"class - RefreshTokenExpiredException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshTokenExpiredException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/http/exceptions/refresh-token-expired.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/http/exceptions/refresh-token-expired.exception.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UnauthorizedException } from '@nestjs/common';\nimport { ErrorType } from '../../enums';\n\nexport class RefreshTokenExpiredException extends UnauthorizedException {\n  constructor() {\n    super({\n      errorType: ErrorType.RefreshTokenExpired,\n      message: 'Refresh token has expired',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResponseDto.html":{"url":"classes/ResponseDto.html","title":"class - ResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/response.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Dto for the response\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                payload\n                            \n                            \n                                    \n                                timestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/response.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        timestamp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1617826799860})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/response.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n/**\n * Dto for the response\n */\nexport class ResponseDto {\n  @ApiProperty()\n  payload: T;\n  @ApiProperty({ example: 1617826799860 })\n  timestamp: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleExistsException.html":{"url":"classes/RoleExistsException.html","title":"class - RoleExistsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleExistsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/http/exceptions/role-exists.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in src/common/http/exceptions/role-exists.exception.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException } from '@nestjs/common';\nimport { ErrorType } from '../../enums';\n\nexport class RoleExistsException extends ConflictException {\n  constructor(name: string) {\n    super({\n      errorType: ErrorType.RoleExists,\n      message: `There's a role with name '${name}'`,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaxService.html":{"url":"injectables/TaxService.html","title":"injectable - TaxService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaxService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/orders/tax.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                logTaxData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/orders/tax.service.ts:8\n                            \n                        \n\n                \n                    \n                            Constructs the TaxService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe service for accessing configuration values.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        logTaxData\n                        \n                    \n                \n            \n            \n                \n                        \n                    logTaxData(createOrderDto: CreateOrderDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/orders/tax.service.ts:20\n                        \n                    \n\n\n            \n                \n                        Logs tax data by sending a POST request to the configured tax URL.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createOrderDto\n                                            \n                                                            CreateOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing order details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                A promise that resolves when the tax data is logged.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { AllConfigType } from '@config/config.type';\nimport { CreateOrderDto } from '@modules/orders/dto/create-order.dto';\nimport axios from 'axios';\n\n@Injectable()\nexport class TaxService {\n  /**\n   * Constructs the TaxService.\n   * @param configService - The service for accessing configuration values.\n   */\n  constructor(private configService: ConfigService) {}\n\n  /**\n   * Logs tax data by sending a POST request to the configured tax URL.\n   * @param createOrderDto - The data transfer object containing order details.\n   * @returns A promise that resolves when the tax data is logged.\n   */\n  async logTaxData(createOrderDto: CreateOrderDto) {\n    try {\n      const response = await axios.post(\n        this.configService.get('tax.url', {\n          infer: true,\n        }),\n        createOrderDto,\n      );\n      console.log(response);\n    } catch (error) {\n      console.error('Failed to log tax data:', error.message);\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TypeOrmConfigService.html":{"url":"injectables/TypeOrmConfigService.html","title":"injectable - TypeOrmConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TypeOrmConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/typeorm-config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTypeOrmOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/database/typeorm-config.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createTypeOrmOptions\n                        \n                    \n                \n            \n            \n                \ncreateTypeOrmOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/typeorm-config.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     TypeOrmModuleOptions\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { TypeOrmModuleOptions, TypeOrmOptionsFactory } from '@nestjs/typeorm';\nimport { AllConfigType } from 'src/config/config.type';\n\n@Injectable()\nexport class TypeOrmConfigService implements TypeOrmOptionsFactory {\n  constructor(private configService: ConfigService) {}\n\n  createTypeOrmOptions(): TypeOrmModuleOptions {\n    return {\n      type: this.configService.get('database.type', { infer: true }),\n      url: this.configService.get('database.url', { infer: true }),\n      host: this.configService.get('database.host', { infer: true }),\n      port: this.configService.get('database.port', { infer: true }),\n      username: this.configService.get('database.username', { infer: true }),\n      password: this.configService.get('database.password', { infer: true }),\n      database: this.configService.get('database.name', { infer: true }),\n      synchronize: this.configService.get('database.synchronize', {\n        infer: true,\n      }),\n      dropSchema: false,\n      keepConnectionAlive: true,\n      logging:\n        this.configService.get('app.nodeEnv', { infer: true }) !== 'production',\n      entities: [__dirname + '/../**/*.entity{.ts,.js}'],\n      migrations: [__dirname + '/migrations/**/*{.ts,.js}'],\n      cli: {\n        entitiesDir: 'src',\n        migrationsDir: 'src/database/migrations',\n        subscribersDir: 'subscriber',\n      },\n      extra: {\n        // based on https://node-postgres.com/apis/pool\n        // max connection pool size\n        max: this.configService.get('database.maxConnections', { infer: true }),\n        ssl: this.configService.get('database.sslEnabled', { infer: true })\n          ? {\n              rejectUnauthorized: this.configService.get(\n                'database.rejectUnauthorized',\n                { infer: true },\n              ),\n              ca:\n                this.configService.get('database.ca', { infer: true }) ??\n                undefined,\n              key:\n                this.configService.get('database.key', { infer: true }) ??\n                undefined,\n              cert:\n                this.configService.get('database.cert', { infer: true }) ??\n                undefined,\n            }\n          : undefined,\n      },\n    } as TypeOrmModuleOptions;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOrderDto.html":{"url":"classes/UpdateOrderDto.html","title":"class - UpdateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/orders/dto/update-order.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateOrderDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateOrderDto } from './create-order.dto';\n\nexport class UpdateOrderDto extends PartialType(CreateOrderDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserExistsException.html":{"url":"classes/UserExistsException.html","title":"class - UserExistsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserExistsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/http/exceptions/user-exists.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string)\n                    \n                \n                        \n                            \n                                Defined in src/common/http/exceptions/user-exists.exception.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException } from '@nestjs/common';\nimport { ErrorType } from '../../enums';\n\nexport class UserExistsException extends ConflictException {\n  constructor(username: string) {\n    super({\n      errorType: ErrorType.UserExists,\n      message: `There's a user with email '${username}'`,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UuidPrimaryIdEntity.html":{"url":"classes/UuidPrimaryIdEntity.html","title":"class - UuidPrimaryIdEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UuidPrimaryIdEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/entities/uuid-primary-id.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    Optional\n                                __entity\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                setEntityName\n                            \n                            \n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/entities/uuid-primary-id.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        __entity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Base\n\n                            \n                        \n                    \n                        \n                                Defined in         Base:36\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at', type: 'timestamp with time zone', update: false, nullable: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Base\n\n                            \n                        \n                    \n                        \n                                Defined in         Base:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: 'deleted_at', type: 'timestamp with time zone', nullable: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Base\n\n                            \n                        \n                    \n                        \n                                Defined in         Base:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: 'updated_at', type: 'timestamp with time zone', onUpdate: 'now()', nullable: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Base\n\n                            \n                        \n                    \n                        \n                                Defined in         Base:27\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setEntityName\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityName()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @AfterLoad()\n                \n            \n\n                    \n                        \n                            Inherited from         Base\n\n                        \n                    \n                    \n                        \n                                Defined in         Base:39\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toJSON\n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n                    \n                        \n                            Inherited from         Base\n\n                        \n                    \n                    \n                        \n                                Defined in         Base:43\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Base } from '@common/entities/base.entity';\nimport { PrimaryGeneratedColumn } from 'typeorm';\n\nexport class UuidPrimaryIdEntity extends Base {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/common/constants.ts\n            \n            variable\n            AUTH_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/constants.ts\n            \n            variable\n            SKIP_AUTH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/constants.ts\n            \n            variable\n            TOKEN_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/decorators/api-global-response.decorators.ts\n            \n            variable\n            ApiGlobalResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/decorators/transform.decorators.ts\n            \n            function\n            PhoneNumberSerializer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/decorators/transform.decorators.ts\n            \n            function\n            ToArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/decorators/transform.decorators.ts\n            \n            function\n            ToBoolean\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/decorators/transform.decorators.ts\n            \n            function\n            ToInt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/decorators/transform.decorators.ts\n            \n            function\n            ToLowerCase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/decorators/transform.decorators.ts\n            \n            function\n            ToUpperCase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/decorators/transform.decorators.ts\n            \n            function\n            Trim\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/dtos/response.dto.ts\n            \n            class\n            ResponseDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/common/entities/base.entity.ts\n            \n            class\n            Base\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/common/entities/integer-primary-id.entity.ts\n            \n            class\n            IntegerPrimaryIdEntity\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/entities/uuid-primary-id.entity.ts\n            \n            class\n            UuidPrimaryIdEntity\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/helpers/class-name-extractor.ts\n            \n            class\n            ClassNameExtractor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/helpers/file-finder.ts\n            \n            class\n            FileFinder\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/helpers/generate-characters.helper.ts\n            \n            class\n            GenerateCharacters\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/helpers/hash.helper.ts\n            \n            class\n            HashHelper\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/common/http/exceptions/InvalidCurrentPinException.ts\n            \n            class\n            InvalidCurrentPinException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/http/exceptions/access-token-expired.exception.ts\n            \n            class\n            AccessTokenExpiredException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/http/exceptions/application-exist.exception.ts\n            \n            class\n            ApplicatonExistException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/http/exceptions/customer-exist.exception.ts\n            \n            class\n            CustomerExistException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/http/exceptions/disabled-user.exception.ts\n            \n            class\n            DisabledUserException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/http/exceptions/foreign-key-conflict.exception.ts\n            \n            class\n            ForeignKeyConflictException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/http/exceptions/invalid-credentials.exception.ts\n            \n            class\n            InvalidCredentialsException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/http/exceptions/invalid-current-password.exception.ts\n            \n            class\n            InvalidCurrentPasswordException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/http/exceptions/invalid-token.exception.ts\n            \n            class\n            InvalidTokenException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/http/exceptions/permission-exists.exception.ts\n            \n            class\n            PermissionExistsException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/http/exceptions/refresh-token-expired.exception.ts\n            \n            class\n            RefreshTokenExpiredException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/http/exceptions/role-exists.exception.ts\n            \n            class\n            RoleExistsException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/http/exceptions/user-exists.exception.ts\n            \n            class\n            UserExistsException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/common/http/http-error-type.ts\n            \n            variable\n            HttpErrorType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/http/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/http/response.interceptor.ts\n            \n            injectable\n            HttpResponseInterceptor\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/common/interceptors/logging.interceptors.ts\n            \n            injectable\n            LoggingInterceptor\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/common/libs/pagination/decorators/api-paginated-response.decorador.ts\n            \n            variable\n            ApiPaginatedResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/libs/pagination/decorators/pagination-params.decorator.ts\n            \n            variable\n            PaginationParams\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/libs/pagination/interfaces/default-pagination.interface.ts\n            \n            interface\n            DefaultPagination\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/common/libs/pagination/interfaces/pagination-request.interface.ts\n            \n            interface\n            PaginationRequest\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/common/libs/pagination/pagination-response.dto.ts\n            \n            class\n            PaginationResponseDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/libs/pagination/pagination.helper.ts\n            \n            class\n            Pagination\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                        src/common/libs/route-naming.ts\n            \n            variable\n            RouteNaming\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/transformers/lower-case.transformer.ts\n            \n            variable\n            lowerCaseTransformer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/types/entity-condition.type.ts\n            \n            type alias\n            EntityCondition\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/types/find-options.type.ts\n            \n            type alias\n            FindOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/types/maybe.type.ts\n            \n            type alias\n            MaybeType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/types/nullable.type.ts\n            \n            type alias\n            NullableType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/types/or-never.type.ts\n            \n            type alias\n            OrNeverType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/validators/is-exists.validator.ts\n            \n            injectable\n            IsExist\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/validators/is-not-exists.validator.ts\n            \n            injectable\n            IsNotExist\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/common/validators/is-not-exists.validator.ts\n            \n            type alias\n            ValidationEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/validators/validate-config.ts\n            \n            function\n            validateConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/validators/validation-options.ts\n            \n            variable\n            validationOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/app.config.ts\n            \n            class\n            EnvironmentVariablesValidator\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                        src/config/config.type.ts\n            \n            type alias\n            AllConfigType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/config/config.type.ts\n            \n            type alias\n            AppConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/config/config.type.ts\n            \n            type alias\n            AuthConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/config/config.type.ts\n            \n            type alias\n            DatabaseConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/config/config.type.ts\n            \n            type alias\n            MailConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/config/config.type.ts\n            \n            type alias\n            MongoConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/config/config.type.ts\n            \n            type alias\n            TaxConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/database.config.ts\n            \n            class\n            EnvironmentVariablesValidator\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/config/mongo.config.ts\n            \n            class\n            EnvironmentVariablesValidator\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/config/swagger.config.ts\n            \n            variable\n            description\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/config/swagger.config.ts\n            \n            variable\n            SwaggerConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/config/swagger.config.ts\n            \n            variable\n            title\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/tax.config.ts\n            \n            class\n            EnvironmentVariablesValidator\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/database/data-source.ts\n            \n            variable\n            AppDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/1730363889037-create-schema-for-sales.ts\n            \n            class\n            CreateSchemaForSales1730363889037\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/migrations/1730365329511-create-table-for-orders.ts\n            \n            class\n            CreateTableForOrders1730365329511\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/typeorm-config.service.ts\n            \n            injectable\n            TypeOrmConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/orders/dto/create-order.dto.ts\n            \n            class\n            CreateOrderDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/orders/dto/order-response.dto.ts\n            \n            class\n            OrderResponseDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/orders/dto/update-order.dto.ts\n            \n            class\n            UpdateOrderDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/orders/entities/order.entity.ts\n            \n            entity\n            Order\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/orders/order.mapper.ts\n            \n            class\n            OrderMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/orders/orders.controller.ts\n            \n            controller\n            OrdersController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/orders/orders.service.ts\n            \n            injectable\n            OrdersService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/modules/orders/schemas/order.schema.ts\n            \n            class\n            Order\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/modules/orders/schemas/order.schema.ts\n            \n            variable\n            OrderSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/modules/orders/schemas/order.schema.ts\n            \n            type alias\n            OrderDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/orders/tax.service.ts\n            \n            injectable\n            TaxService\n            \n                66 %\n                (2/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.3.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/mongoose : ^10.1.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^8.0.1\n        \n            @nestjs/terminus : ^10.2.3\n        \n            @nestjs/typeorm : ^10.0.2\n        \n            axios : ^1.7.7\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            env-cmd : ^10.1.0\n        \n            mongoose : ^8.7.3\n        \n            pg : ^8.13.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rimraf : ^6.0.1\n        \n            rxjs : ^7.8.1\n        \n            swagger-ui-express : ^5.0.1\n        \n            typeorm : ^0.3.20\n        \n            typeorm-extension : ^3.6.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DBErrorCode   (src/.../db-error-code.enum.ts)\n                        \n                        \n                            Environment   (src/.../app.config.ts)\n                        \n                        \n                            ErrorType   (src/.../error-type.enum.ts)\n                        \n                        \n                            Gender   (src/.../gender.enum.ts)\n                        \n                        \n                            JobType   (src/.../job-type.enum.ts)\n                        \n                        \n                            PaymentMethod   (src/.../payment-method.enum.ts)\n                        \n                        \n                            PaymentOptionEnum   (src/.../payment-option.enum.ts)\n                        \n                        \n                            PaymentStatus   (src/.../payment-status.enum.ts)\n                        \n                        \n                            RecurringIntervalUnit   (src/.../recurring-interval.unit.ts)\n                        \n                        \n                            TaskStatus   (src/.../task-status.enum.ts)\n                        \n                        \n                            TransactionStatusEnum   (src/.../transaction-status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/enums/db-error-code.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        DBErrorCode\n                    \n                \n                        \n                            \n                                 PgNotNullConstraintViolation\n                            \n                        \n                        \n                            \n                                Value : 23502\n                            \n                        \n                        \n                            \n                                 PgForeignKeyConstraintViolation\n                            \n                        \n                        \n                            \n                                Value : 23503\n                            \n                        \n                        \n                            \n                                 PgUniqueConstraintViolation\n                            \n                        \n                        \n                            \n                                Value : 23505\n                            \n                        \n            \n        \n\n    src/config/app.config.ts\n    \n        \n            \n                \n                    \n                        \n                        Environment\n                    \n                \n                        \n                            \n                                 DEVELOPMENT\n                            \n                        \n                        \n                            \n                                Value : development\n                            \n                        \n                        \n                            \n                                 STAGING\n                            \n                        \n                        \n                            \n                                Value : staging\n                            \n                        \n                        \n                            \n                                 PRODUCTION\n                            \n                        \n                        \n                            \n                                Value : production\n                            \n                        \n                        \n                            \n                                 TEST\n                            \n                        \n                        \n                            \n                                Value : test\n                            \n                        \n                        \n                            \n                                 PROVISION\n                            \n                        \n                        \n                            \n                                Value : provision\n                            \n                        \n                        \n                            \n                                 QA\n                            \n                        \n                        \n                            \n                                Value : qa\n                            \n                        \n                        \n                            \n                                 UAT\n                            \n                        \n                        \n                            \n                                Value : uat\n                            \n                        \n                        \n                            \n                                 DEMO\n                            \n                        \n                        \n                            \n                                Value : demo\n                            \n                        \n                        \n                            \n                                 LOCAL\n                            \n                        \n                        \n                            \n                                Value : local\n                            \n                        \n                        \n                            \n                                 DOCKER\n                            \n                        \n                        \n                            \n                                Value : docker\n                            \n                        \n                        \n                            \n                                 DOCKER_COMPOSE\n                            \n                        \n                        \n                            \n                                Value : docker-compose\n                            \n                        \n                        \n                            \n                                 KUBERNETES\n                            \n                        \n                        \n                            \n                                Value : kubernetes\n                            \n                        \n                        \n                            \n                                 OPENSHIFT\n                            \n                        \n                        \n                            \n                                Value : openshift\n                            \n                        \n                        \n                            \n                                 HEROKU\n                            \n                        \n                        \n                            \n                                Value : heroku\n                            \n                        \n                        \n                            \n                                 AWS\n                            \n                        \n                        \n                            \n                                Value : aws\n                            \n                        \n                        \n                            \n                                 AZURE\n                            \n                        \n                        \n                            \n                                Value : azure\n                            \n                        \n                        \n                            \n                                 GOOGLE_CLOUD\n                            \n                        \n                        \n                            \n                                Value : google-cloud\n                            \n                        \n                        \n                            \n                                 DIGITAL_OCEAN\n                            \n                        \n                        \n                            \n                                Value : digital-ocean\n                            \n                        \n                        \n                            \n                                 LINODE\n                            \n                        \n                        \n                            \n                                Value : linode\n                            \n                        \n                        \n                            \n                                 VULTR\n                            \n                        \n                        \n                            \n                                Value : vultr\n                            \n                        \n                        \n                            \n                                 OTHER\n                            \n                        \n                        \n                            \n                                Value : other\n                            \n                        \n            \n        \n\n    src/common/enums/error-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ErrorType\n                    \n                \n                        \n                            \n                                 InvalidToken\n                            \n                        \n                        \n                            \n                                Value : INVALID_TOKEN\n                            \n                        \n                        \n                            \n                                 AccessTokenExpired\n                            \n                        \n                        \n                            \n                                Value : ACCESS_TOKEN_EXPIRED\n                            \n                        \n                        \n                            \n                                 RefreshTokenExpired\n                            \n                        \n                        \n                            \n                                Value : REFRESH_TOKEN_EXPIRED\n                            \n                        \n                        \n                            \n                                 PermissionExists\n                            \n                        \n                        \n                            \n                                Value : PERMISSION_EXISTS\n                            \n                        \n                        \n                            \n                                 RoleExists\n                            \n                        \n                        \n                            \n                                Value : ROLE_EXISTS\n                            \n                        \n                        \n                            \n                                 UserExists\n                            \n                        \n                        \n                            \n                                Value : USER_EXISTS\n                            \n                        \n                        \n                            \n                                 InvalidCurrentPassword\n                            \n                        \n                        \n                            \n                                Value : INVALID_CURRENT_PASSWORD\n                            \n                        \n                        \n                            \n                                 InvalidCredentials\n                            \n                        \n                        \n                            \n                                Value : INVALID_CREDENTIALS\n                            \n                        \n                        \n                            \n                                 BlockedUser\n                            \n                        \n                        \n                            \n                                Value : BLOCKED_USER\n                            \n                        \n                        \n                            \n                                 InactiveUser\n                            \n                        \n                        \n                            \n                                Value : INACTIVE_USER\n                            \n                        \n                        \n                            \n                                 ForeignKeyConflict\n                            \n                        \n                        \n                            \n                                Value : FOREIGN_KEY_CONFLICT\n                            \n                        \n                        \n                            \n                                 AlreadyExists\n                            \n                        \n                        \n                            \n                                Value : ALREADY_EXISTS\n                            \n                        \n                        \n                            \n                                 PropertyAlreadyAllocated\n                            \n                        \n                        \n                            \n                                Value : PROPERTY_ALREADY_ALLOCATED\n                            \n                        \n                        \n                            \n                                 TermSettingsExist\n                            \n                        \n                        \n                            \n                                Value : TERM_SETTINGS_EXIST\n                            \n                        \n                        \n                            \n                                 InvalidCurrentPin\n                            \n                        \n                        \n                            \n                                Value : INVALID_CURRENT_PIN\n                            \n                        \n                        \n                            \n                                 PaymentVerificationFailed\n                            \n                        \n                        \n                            \n                                Value : PAYMENT_VERIFICATION_FAILED\n                            \n                        \n            \n        \n\n    src/common/enums/gender.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Gender\n                    \n                \n                        \n                            \n                                 Male\n                            \n                        \n                        \n                            \n                                Value : male\n                            \n                        \n                        \n                            \n                                 Female\n                            \n                        \n                        \n                            \n                                Value : female\n                            \n                        \n            \n        \n\n    src/common/enums/job-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        JobType\n                    \n                \n                        \n                            \n                                 GENERATE_PAYMENT_INVOICE\n                            \n                        \n                        \n                            \n                                Value : GENERATE_PAYMENT_INVOICE\n                            \n                        \n                        \n                            \n                                 UPDATE_PAYMENT_AMOUNT\n                            \n                        \n                        \n                            \n                                Value : UPDATE_PAYMENT_AMOUNT\n                            \n                        \n                        \n                            \n                                 NOT_EXPECTING_RESPONSE\n                            \n                        \n                        \n                            \n                                Value : NOT_EXPECTING_RESPONSE\n                            \n                        \n            \n        \n\n    src/common/enums/payment-method.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PaymentMethod\n                    \n                \n                        \n                            \n                                 CREDIT\n                            \n                        \n                        \n                            \n                                Value : credit\n                            \n                        \n                        \n                            \n                                 DEBIT\n                            \n                        \n                        \n                            \n                                Value : debit\n                            \n                        \n                        \n                            \n                                 TRANSFER\n                            \n                        \n                        \n                            \n                                Value : transfer\n                            \n                        \n                        \n                            \n                                 WALLET\n                            \n                        \n                        \n                            \n                                Value : wallet\n                            \n                        \n                        \n                            \n                                 CARD\n                            \n                        \n                        \n                            \n                                Value : card\n                            \n                        \n                        \n                            \n                                 BANK\n                            \n                        \n                        \n                            \n                                Value : bank\n                            \n                        \n                        \n                            \n                                 VIRTUAL_ACCOUNT\n                            \n                        \n                        \n                            \n                                Value : virtual_account\n                            \n                        \n                        \n                            \n                                 QR_CODE\n                            \n                        \n                        \n                            \n                                Value : qr_code\n                            \n                        \n                        \n                            \n                                 USSD\n                            \n                        \n                        \n                            \n                                Value : ussd\n                            \n                        \n                        \n                            \n                                 CASH\n                            \n                        \n                        \n                            \n                                Value : cash\n                            \n                        \n                        \n                            \n                                 CHEQUE\n                            \n                        \n                        \n                            \n                                Value : cheque\n                            \n                        \n                        \n                            \n                                 DIRECT_DEBIT\n                            \n                        \n                        \n                            \n                                Value : direct_debit\n                            \n                        \n                        \n                            \n                                 STANDING_ORDER\n                            \n                        \n                        \n                            \n                                Value : standing_order\n                            \n                        \n                        \n                            \n                                 MOBILE_MONEY\n                            \n                        \n                        \n                            \n                                Value : mobile_money\n                            \n                        \n                        \n                            \n                                 REMITA\n                            \n                        \n                        \n                            \n                                Value : remita\n                            \n                        \n                        \n                            \n                                 APPLE_PAY\n                            \n                        \n                        \n                            \n                                Value : apple_pay\n                            \n                        \n                        \n                            \n                                 GOOGLE_PAY\n                            \n                        \n                        \n                            \n                                Value : google_pay\n                            \n                        \n                        \n                            \n                                 OTHER\n                            \n                        \n                        \n                            \n                                Value : other\n                            \n                        \n                        \n                            \n                                 UNKNOWN\n                            \n                        \n                        \n                            \n                                Value : unknown\n                            \n                        \n            \n        \n\n    src/common/enums/payment-option.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PaymentOptionEnum\n                    \n                \n                        \n                            \n                                 FULL\n                            \n                        \n                        \n                            \n                                Value : full\n                            \n                        \n                        \n                            \n                                 PARTIAL\n                            \n                        \n                        \n                            \n                                Value : partial\n                            \n                        \n            \n        \n\n    src/common/enums/payment-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PaymentStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 PAID\n                            \n                        \n                        \n                            \n                                Value : paid\n                            \n                        \n                        \n                            \n                                 FAILED\n                            \n                        \n                        \n                            \n                                Value : failed\n                            \n                        \n                        \n                            \n                                 CANCELLED\n                            \n                        \n                        \n                            \n                                Value : cancelled\n                            \n                        \n                        \n                            \n                                 REFUNDED\n                            \n                        \n                        \n                            \n                                Value : refunded\n                            \n                        \n            \n        \n\n    src/common/enums/recurring-interval.unit.ts\n    \n        \n            \n                \n                    \n                        \n                        RecurringIntervalUnit\n                    \n                \n                        \n                            \n                                 DAY\n                            \n                        \n                        \n                            \n                                Value : day\n                            \n                        \n                        \n                            \n                                 WEEK\n                            \n                        \n                        \n                            \n                                Value : week\n                            \n                        \n                        \n                            \n                                 MONTH\n                            \n                        \n                        \n                            \n                                Value : month\n                            \n                        \n                        \n                            \n                                 QUARTER\n                            \n                        \n                        \n                            \n                                Value : quarter\n                            \n                        \n                        \n                            \n                                 YEAR\n                            \n                        \n                        \n                            \n                                Value : year\n                            \n                        \n            \n        \n\n    src/common/enums/task-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 APPROVED\n                            \n                        \n                        \n                            \n                                Value : approved\n                            \n                        \n                        \n                            \n                                 DECLINED\n                            \n                        \n                        \n                            \n                                Value : declined\n                            \n                        \n                        \n                            \n                                 CANCELLED\n                            \n                        \n                        \n                            \n                                Value : cancelled\n                            \n                        \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : completed\n                            \n                        \n            \n        \n\n    src/common/enums/transaction-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TransactionStatusEnum\n                    \n                \n                        \n                            \n                                 INITIATED\n                            \n                        \n                        \n                            \n                                Value : initiated\n                            \n                        \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : completed\n                            \n                        \n                        \n                            \n                                 IN_PROGRESS\n                            \n                        \n                        \n                            \n                                Value : in_progress\n                            \n                        \n                        \n                            \n                                 DISPUTED\n                            \n                        \n                        \n                            \n                                Value : disputed\n                            \n                        \n                        \n                            \n                                 CANCELLED\n                            \n                        \n                        \n                            \n                                Value : cancelled\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            PhoneNumberSerializer   (src/.../transform.decorators.ts)\n                        \n                        \n                            ToArray   (src/.../transform.decorators.ts)\n                        \n                        \n                            ToBoolean   (src/.../transform.decorators.ts)\n                        \n                        \n                            ToInt   (src/.../transform.decorators.ts)\n                        \n                        \n                            ToLowerCase   (src/.../transform.decorators.ts)\n                        \n                        \n                            ToUpperCase   (src/.../transform.decorators.ts)\n                        \n                        \n                            Trim   (src/.../transform.decorators.ts)\n                        \n                        \n                            validateConfig   (src/.../validate-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/common/decorators/transform.decorators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PhoneNumberSerializer\n                        \n                    \n                \n            \n            \n                \nPhoneNumberSerializer()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     PropertyDecorator\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ToArray\n                        \n                    \n                \n            \n            \n                \nToArray()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ToBoolean\n                        \n                    \n                \n            \n            \n                \nToBoolean()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     PropertyDecorator\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ToInt\n                        \n                    \n                \n            \n            \n                \nToInt()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                PropertyDecorator\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ToLowerCase\n                        \n                    \n                \n            \n            \n                \nToLowerCase()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     PropertyDecorator\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ToUpperCase\n                        \n                    \n                \n            \n            \n                \nToUpperCase()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     PropertyDecorator\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Trim\n                        \n                    \n                \n            \n            \n                \nTrim()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                PropertyDecorator\n\n                            \n                \n            \n        \n    \n    src/common/validators/validate-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validateConfig\n                        \n                    \n                \n            \n            \n                \nvalidateConfig(config: Record, envVariablesClass: ClassConstructor)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                envVariablesClass\n                                            \n                                                        ClassConstructor\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nInventory Management System\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodDatabase\nExample :# create migration, Typeorm will automatically create a new migration file in the src/database/migrations directory from the current database schema based on the entities you have or have changed.\n$ npm run migration:create -- src/database/migrations/create-table-for-invoices\n\n# run migration, Typeorm will automatically run all pending migrations.\n$ npm run migration:run\n\n# revert migration, Typeorm will automatically revert the last migration file in the src/database/migrations directory.\n$ npm run migration:revert\n\n# show all migrations, Typeorm will automatically show all migrations in the src/database/migrations directory.\n$ npm run migration:show\n\n# generate migration, Typeorm will automatically generate a new migration file in the src/database/migrations directory based on the entities you have or have changed.\n$ npm run migration:generate\n\n# drop database, Typeorm will automatically drop the database schema.\n$ npm run schema:drop\n\n# Seed database, Typeorm will automatically seed the database schema.\n$ npm run seed:run\n\n# Create Seed, Typeorm will automatically create a new seed file in the src/database/seeds directory.\n$ npm run seed:create -- --name src/database/seeds/create-seed-for-logs\nRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrdersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_providers\n\n\n\n\nHealthModule\n\nHealthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nOrdersService\n\nOrdersService\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\nTaxService\n\nTaxService\n\nOrdersModule -->\n\nTaxService->OrdersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    35 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AllConfigType   (src/.../config.type.ts)\n                        \n                        \n                            AppConfig   (src/.../config.type.ts)\n                        \n                        \n                            AuthConfig   (src/.../config.type.ts)\n                        \n                        \n                            DatabaseConfig   (src/.../config.type.ts)\n                        \n                        \n                            EntityCondition   (src/.../entity-condition.type.ts)\n                        \n                        \n                            FindOptions   (src/.../find-options.type.ts)\n                        \n                        \n                            MailConfig   (src/.../config.type.ts)\n                        \n                        \n                            MaybeType   (src/.../maybe.type.ts)\n                        \n                        \n                            MongoConfig   (src/.../config.type.ts)\n                        \n                        \n                            NullableType   (src/.../nullable.type.ts)\n                        \n                        \n                            OrderDocument   (src/.../order.schema.ts)\n                        \n                        \n                            OrNeverType   (src/.../or-never.type.ts)\n                        \n                        \n                            TaxConfig   (src/.../config.type.ts)\n                        \n                        \n                            ValidationEntity   (src/.../is-not-exists.validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/config.type.ts\n    \n    \n        \n            \n                \n                    \n                    AllConfigType\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AppConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AuthConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DatabaseConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MailConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MongoConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TaxConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/common/types/entity-condition.type.ts\n    \n    \n        \n            \n                \n                    \n                    EntityCondition\n                \n            \n            \n                \n                            FindOptionsWhere\n\n                \n            \n        \n    \n    src/common/types/find-options.type.ts\n    \n    \n        \n            \n                \n                    \n                    FindOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/common/types/maybe.type.ts\n    \n    \n        \n            \n                \n                    \n                    MaybeType\n                \n            \n            \n                \n                        T | undefined\n\n                \n            \n        \n    \n    src/common/types/nullable.type.ts\n    \n    \n        \n            \n                \n                    \n                    NullableType\n                \n            \n            \n                \n                        T | null\n\n                \n            \n        \n    \n    src/modules/orders/schemas/order.schema.ts\n    \n    \n        \n            \n                \n                    \n                    OrderDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/common/types/or-never.type.ts\n    \n    \n        \n            \n                \n                    \n                    OrNeverType\n                \n            \n            \n                \n                        T | never\n\n                \n            \n        \n    \n    src/common/validators/is-not-exists.validator.ts\n    \n    \n        \n            \n                \n                    \n                    ValidationEntity\n                \n            \n            \n                \n                        literal type | undefined\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiGlobalResponse   (src/.../api-global-response.decorators.ts)\n                        \n                        \n                            ApiPaginatedResponse   (src/.../api-paginated-response.decorador.ts)\n                        \n                        \n                            AppDataSource   (src/.../data-source.ts)\n                        \n                        \n                            AUTH_OPTIONS   (src/.../constants.ts)\n                        \n                        \n                            description   (src/.../swagger.config.ts)\n                        \n                        \n                            HttpErrorType   (src/.../http-error-type.ts)\n                        \n                        \n                            lowerCaseTransformer   (src/.../lower-case.transformer.ts)\n                        \n                        \n                            OrderSchema   (src/.../order.schema.ts)\n                        \n                        \n                            PaginationParams   (src/.../pagination-params.decorator.ts)\n                        \n                        \n                            RouteNaming   (src/.../route-naming.ts)\n                        \n                        \n                            SKIP_AUTH   (src/.../constants.ts)\n                        \n                        \n                            SwaggerConfig   (src/.../swagger.config.ts)\n                        \n                        \n                            title   (src/.../swagger.config.ts)\n                        \n                        \n                            TOKEN_NAME   (src/.../constants.ts)\n                        \n                        \n                            validationOptions   (src/.../validation-options.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/decorators/api-global-response.decorators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiGlobalResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >(model: TModel) => {\n  return applyDecorators(\n    ApiExtraModels(ResponseDto, model),\n    ApiOkResponse({\n      schema: {\n        allOf: [\n          { $ref: getSchemaPath(ResponseDto) },\n          {\n            properties: {\n              payload: {\n                $ref: getSchemaPath(model),\n              },\n              timestamp: {\n                type: 'number',\n              },\n            },\n          },\n        ],\n      },\n    }),\n    ApiUnauthorizedResponse({ description: 'Not authenticated' }),\n    ApiForbiddenResponse({ description: 'Access denied' }),\n    ApiNotFoundResponse({ description: 'Not found' }),\n    ApiInternalServerErrorResponse({ description: 'Server error' }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/common/libs/pagination/decorators/api-paginated-response.decorador.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiPaginatedResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >(model: TModel) => {\n  return applyDecorators(\n    ApiQuery({ name: 'orderBy', type: 'String', required: false }),\n    ApiQuery({\n      name: 'orderDirection',\n      enum: ['ASC', 'DESC'],\n      required: false,\n    }),\n    ApiQuery({ name: 'page', type: 'number', required: false, example: '1' }),\n    ApiQuery({ name: 'limit', type: 'number', required: false, example: '20' }),\n    ApiExtraModels(PaginationResponseDto, model),\n    ApiOkResponse({\n      schema: {\n        allOf: [\n          { $ref: getSchemaPath(ResponseDto) },\n          {\n            properties: {\n              payload: {\n                allOf: [\n                  { $ref: getSchemaPath(PaginationResponseDto) },\n                  {\n                    properties: {\n                      content: {\n                        type: 'array',\n                        items: { $ref: getSchemaPath(model) },\n                      },\n                    },\n                  },\n                ],\n              },\n              timestamp: {\n                type: 'number',\n              },\n            },\n          },\n        ],\n      },\n    }),\n    ApiUnauthorizedResponse({ description: 'Not authenticated' }),\n    ApiForbiddenResponse({ description: 'Access denied' }),\n    ApiNotFoundResponse({ description: 'Not found' }),\n    ApiInternalServerErrorResponse({ description: 'Server error' }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/database/data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AppDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DataSource({\n  type: process.env.DATABASE_TYPE,\n  url: process.env.DATABASE_URL,\n  host: process.env.DATABASE_HOST,\n  port: process.env.DATABASE_PORT\n    ? parseInt(process.env.DATABASE_PORT, 10)\n    : 5432,\n  username: process.env.DATABASE_USERNAME,\n  password: process.env.DATABASE_PASSWORD,\n  database: process.env.DATABASE_NAME,\n  synchronize: process.env.DATABASE_SYNCHRONIZE === 'true',\n  dropSchema: false,\n  keepConnectionAlive: true,\n  logging: process.env.NODE_ENV !== 'production',\n  entities: [__dirname + '/../**/*.entity{.ts,.js}'],\n  migrations: [__dirname + '/migrations/**/*{.ts,.js}'],\n  seeds: ['src/database/seeds/**/*{.ts,.js}'],\n  seedTracking: true,\n  factories: ['src/database/factories/**/*{.ts,.js}'],\n  cli: {\n    entitiesDir: 'src',\n    migrationsDir: 'src/database/migrations',\n    subscribersDir: 'subscriber',\n  },\n  extra: {\n    // based on https://node-postgres.com/api/pool\n    // max connection pool size\n    max: process.env.DATABASE_MAX_CONNECTIONS\n      ? parseInt(process.env.DATABASE_MAX_CONNECTIONS, 10)\n      : 100,\n    ssl:\n      process.env.DATABASE_SSL_ENABLED === 'true'\n        ? {\n            rejectUnauthorized:\n              process.env.DATABASE_REJECT_UNAUTHORIZED === 'true',\n            ca: process.env.DATABASE_CA ?? undefined,\n            key: process.env.DATABASE_KEY ?? undefined,\n            cert: process.env.DATABASE_CERT ?? undefined,\n          }\n        : undefined,\n  },\n} as DataSourceOptions)\n                    \n                \n\n\n        \n    \n\n    src/common/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SecuritySchemeObject\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: 'http',\n  scheme: 'bearer',\n  bearerFormat: 'Bearer',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SKIP_AUTH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'skipAuth'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TOKEN_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'access-token'\n                    \n                \n\n\n        \n    \n\n    src/config/swagger.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'API documentation for fha payment service.'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SwaggerConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (app: INestApplication, apiVersion: string) => {\n  const options = new DocumentBuilder()\n    .setTitle(title)\n    .setDescription(description)\n    .setVersion(apiVersion)\n    .build();\n\n  const document = SwaggerModule.createDocument(app, options);\n\n  SwaggerModule.setup(`api/v${apiVersion}/swagger`, app, document);\n}\n                    \n                \n\n            \n                \n                    Setup swagger in the application\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'FHA Payment Services API Documentation'\n                    \n                \n\n\n        \n    \n\n    src/common/http/http-error-type.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HttpErrorType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  400: 'BAD_REQUEST',\n  401: 'UNAUTHORIZED',\n  402: 'PAYMENT_REQUIRED',\n  403: 'FORBIDDEN',\n  404: 'NOT_FOUND',\n  405: 'METHOD_NOT_ALLOWED',\n  406: 'NOT_ACCEPTABLE',\n  407: 'PROXY_AUTHENTICATION_REQUIRED',\n  408: 'REQUEST_TIMEOUT',\n  409: 'CONFLICT',\n  410: 'GONE',\n  411: 'LENGTH_REQUIRED',\n  412: 'PRECONDITION_FAILED',\n  413: 'PAYLOAD_TOO_LARGE',\n  414: 'URI_TOO_LONG',\n  415: 'UNSUPPORTED_MEDIA_TYPE',\n  416: 'REQUESTED_RANGE_NOT_SATISFIABLE',\n  417: 'EXPECTATION_FAILED',\n  418: 'I_AM_A_TEAPOT',\n  421: 'MISDIRECTED',\n  422: 'UNPROCESSABLE_ENTITY',\n  424: 'FAILED_DEPENDENCY',\n  429: 'TOO_MANY_REQUESTS',\n  500: 'INTERNAL_SERVER_ERROR',\n  501: 'NOT_IMPLEMENTED',\n  502: 'BAD_GATEWAY',\n  503: 'SERVICE_UNAVAILABLE',\n  504: 'GATEWAY_TIMEOUT',\n  505: 'HTTP_VERSION_NOT_SUPPORTED',\n}\n                    \n                \n\n\n        \n    \n\n    src/common/transformers/lower-case.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        lowerCaseTransformer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  params: TransformFnParams,\n): MaybeType => params.value?.toLowerCase().trim()\n                    \n                \n\n\n        \n    \n\n    src/modules/orders/schemas/order.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OrderSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Order)\n                    \n                \n\n\n        \n    \n\n    src/common/libs/pagination/decorators/pagination-params.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PaginationParams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (\n    data: DefaultPagination = {\n      defaultSkip: 0,\n      defaultPage: 0,\n      defaultLimit: 10,\n      defaultOrder: {},\n      defaultOrderDirection: 'DESC',\n      maxAllowedSize: 100,\n    },\n    ctx: ExecutionContext,\n  ) => {\n    let {\n      query: { skip, page, limit, orderBy, orderDirection, ...params },\n    } = ctx.switchToHttp().getRequest();\n\n    const { defaultSkip, defaultPage, defaultLimit, defaultOrder, defaultOrderDirection, maxAllowedSize } = data;\n\n    const order = orderBy ? { [orderBy]: orderDirection ? orderDirection : defaultOrderDirection } : defaultOrder;\n\n    limit = limit && limit > 0 ? +limit : defaultLimit;\n\n    if (!skip) {\n      if (page) {\n        skip = (+page - 1) * +limit;\n        skip = skip >= 0 ? skip : 0;\n      } else {\n        page = defaultPage;\n        skip = defaultSkip;\n      }\n    } else {\n      page = Math.floor(+skip / limit);\n    }\n\n    limit = +limit \n                    \n                \n\n            \n                \n                    Decorator intended for building a PaginationRequest object based on the query string parameters\n\n                \n            \n\n        \n    \n\n    src/common/libs/route-naming.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RouteNaming\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    PermissionsController: {\n        getPermissions: 'Get a paginated permission list',\n        getPermissionById: 'Get permission by id',\n        createPermission: 'Create new permission',\n        updatePermission: 'Update permission by id',\n    },\n    RolesController: {\n        getRoles: 'Get a paginated role list',\n        getRoleById: 'Get role by id',\n        createRole: 'Create new role',\n        updateRole: 'Update role by id',\n        deleteRole: 'Delete role by id',\n    },\n    UsersController: {\n        getUsers: 'Get a paginated user list',\n        getUserById: 'Get user by id',\n        createUser: 'Create new user',\n        updateUser: 'Update user by id',\n        changePassword: 'Change user password',\n    },\n    CustomersController: {\n        getCustomers: 'Get a paginated customer list',\n        getCustomerById: 'Get customer by id',\n        createCustomer: 'Create new customer',\n        updateCustomer: 'Update customer by id',\n        changePassword: 'Change customer password',\n    },\n    InvoiceController: {\n        getInvoices: 'Get a paginated invoice list',\n        getInvoiceStatistics: 'Get invoice statistics for admin',\n        getInvoiceForProperty: 'Get invoice for a property with status PURCHASE_REQUEST',\n        getInvoiceById: 'Get invoice by id',\n        createInvoiceAndGeneratePayment: 'Create new invoice and payment',\n        createInvoiceOnly: 'Create new invoice only',\n        selectPaymentOption: 'Select payment option',\n        updateInvoice: 'Update invoice by id',\n        deleteInvoice: 'Delete invoice by id',\n    },\n    PaymentsController: {\n        create: 'Create new payment',\n        findAll: 'Get a paginated payment list',\n        findAllForCustomerProperty: 'Get a paginated payment list for a customer property',\n        findAllPayments: 'Get a paginated payment list',\n        getPaymentsAsCsv: 'Get payments as csv',\n        getPaymentsAsPdf: 'Get payments as pdf',\n        findOne: 'Get payment by id',\n    },\n    RequestForPaymentController: {\n        create: 'Create new request for payment',\n        findAll: 'Get a paginated request for payment list',\n        findOne: 'Get request for payment by id',\n        update: 'Update request for payment by id',\n        remove: 'Delete request for payment by id',\n    },\n    RevenueHeadsController: {\n        getRevenueHeads: 'Get a paginated list of revenue heads',\n        getRevenueHeadById: 'Get revenue head by id',\n        createRevenueHead: 'Create new revenue head',\n        updateRevenueHead: 'Update revenue head by id',\n        removeRevenueHead: 'Delete revenue head by id',\n        uploadFile: 'Upload revenue head file',\n    },\n    CountriesController: {\n        findAll: 'Get a paginated country list',\n    },\n    LgasController: {\n        findAll: 'Get a paginated LGA list',\n    },\n    StatesController: {\n        findAll: 'Get a paginated state list',\n    },\n    OpenPropertyPaymentController: {\n        findAllRevenueHead: 'Get a paginated list of revenue heads',\n        findProperty: 'Get a paginated list of properties',\n        saveCustomerProperty: 'Save customer property',\n        confirmPayment: 'Confirm payment',\n    },\n    CategoriesController: {\n        getCategories: 'Get a paginated category list',\n        getCategoryById: 'Get category by id',\n        createCategory: 'Create new category',\n        updateCategory: 'Update category by id',\n        removeCategory: 'Delete category by id',\n    },\n    EstatesController: {\n        getEstates: 'Get a paginated estate list',\n        getEstateById: 'Get estate by id',\n        createEstate: 'Create new estate',\n        updateEstate: 'Update estate by id',\n        removeEstate: 'Delete estate by id',\n    },\n    PropertiesController: {\n        findOne: 'Get property by id',\n        save: 'Save property',\n        findAll: 'Get a paginated property list',\n        findAllCustomerProperties: 'Get a paginated list of customer properties',\n        findAllCustomerPropertiesByCustomerId: 'Get a paginated list of customer properties by customer id',\n        statistics: 'Get property statistics',\n        adminStatistics: 'Get property statistics for admin',\n        findById: 'Get property by id',\n        update: 'Update property by id',\n    },\n    StatusesController: {\n        getStatuses: 'Get a paginated status list',\n        getStatusById: 'Get status by id',\n        createStatus: 'Create new status',\n        updateStatus: 'Update status by id',\n        removeStatus: 'Delete status by id',\n    },\n    ApplicationsController: {\n        create: 'Create new application to purchase property',\n        houseTypes: 'Get a paginated list of house types',\n    },\n    FilesController: {\n        upload: 'Upload file',\n        download: 'Download file',\n    },\n    WebhookController: {\n        workflow: 'Initiate workflow through webhook',\n        workflowForPropertyPurchase: 'Initiate workflow for property purchase through webhook',\n        paymentsCallback: 'Payments callback',\n    },\n    TasksController: {\n        create: 'Create new task',\n        findAll: 'Get a paginated task list',\n        getStatistics: 'Get task statistics',\n        findOne: 'Get task by id',\n        approve: 'Approve task',\n        reject: 'Reject task',\n    },\n    AppController: {\n        getHello: 'Get hello',\n    },\n    HealthController: {\n        check: 'Check health',\n    },\n}\n                    \n                \n\n\n        \n    \n\n    src/common/validators/validation-options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validationOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValidationPipeOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  transform: true,\n  whitelist: true,\n  errorHttpStatusCode: HttpStatus.UNPROCESSABLE_ENTITY,\n  exceptionFactory: (errors: ValidationError[]) =>\n    new HttpException(\n      {\n        status: false,\n        errors: errors.reduce(\n          (accumulator, currentValue) => ({\n            ...accumulator,\n            [currentValue.property]: Object.values(\n              currentValue.constraints ?? {},\n            ).join(', '),\n          }),\n          {},\n        ),\n        message: 'Validation failed',\n      },\n      HttpStatus.UNPROCESSABLE_ENTITY,\n    ),\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
